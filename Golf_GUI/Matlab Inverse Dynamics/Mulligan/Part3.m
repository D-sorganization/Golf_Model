%% === 3D AXES SETUP ===
handles.ax = axes('Parent', fig, ...
    'Position', [0.3 0.05 0.65 0.9], ...
    'Color', [1 1 0.9]);
axis(handles.ax, 'equal'); grid(handles.ax, 'on'); view(handles.ax, 3);
xlabel(handles.ax, 'X (m)'); ylabel(handles.ax, 'Y (m)'); zlabel(handles.ax, 'Z (m)');
hold(handles.ax, 'on');

% Initial 3D axis limits (placeholder until data processed)
xlim(handles.ax, [-2 2]);
ylim(handles.ax, [-2 2]);
zlim(handles.ax, [-1 2]);

% Default lighting and material
camlight(handles.ax, 'headlight');
lighting(handles.ax, 'gouraud');
material(handles.ax, 'dull');

%% === CONTROL PANELS ===

% Playback Panel
handles.panel_playback = uipanel('Parent', fig, 'Title', 'Playback & View', ...
    'FontSize', 10, 'BackgroundColor', [0.8 1 0.8], ...
    'Units', 'normalized', 'Position', [0.01 0.05 0.25 0.35]);

% View Buttons
uicontrol('Parent', handles.panel_playback, 'Style', 'pushbutton', ...
    'String', 'Face-On', 'Units', 'normalized', 'Position', [0.05 0.85 0.4 0.08], ...
    'Callback', @(~,~) view(handles.ax, [-1 0 0]));
uicontrol('Parent', handles.panel_playback, 'Style', 'pushbutton', ...
    'String', 'Down-the-Line', 'Units', 'normalized', 'Position', [0.55 0.85 0.4 0.08], ...
    'Callback', @(~,~) view(handles.ax, [0 -1 0]));
uicontrol('Parent', handles.panel_playback, 'Style', 'pushbutton', ...
    'String', 'Top-Down', 'Units', 'normalized', 'Position', [0.05 0.75 0.4 0.08], ...
    'Callback', @(~,~) view(handles.ax, [0 0 1]));
uicontrol('Parent', handles.panel_playback, 'Style', 'pushbutton', ...
    'String', 'Isometric', 'Units', 'normalized', 'Position', [0.55 0.75 0.4 0.08], ...
    'Callback', @(~,~) view(handles.ax, [-45 30]));

% Playback Controls
handles.slider = uicontrol('Parent', handles.panel_playback, 'Style', 'slider', ...
    'Min', 1, 'Max', size(handles.swingData,1), ...
    'Value', 1, 'SliderStep', [1/(size(handles.swingData,1)-1) 0.1], ...
    'Units', 'normalized', 'Position', [0.05 0.3 0.9 0.05], ...
    'Callback', @(src,~) updateFrame(round(get(src,'Value'))));

handles.playBtn = uicontrol('Parent', handles.panel_playback, 'Style', 'togglebutton', ...
    'String', 'Play', 'Units', 'normalized', ...
    'Position', [0.3 0.2 0.4 0.08], ...
    'BackgroundColor', [0.4 0.8 0.4], ...
    'Callback', @(src,~) togglePlay(src));

% Offset Dropdown
uicontrol('Parent', handles.panel_playback, 'Style', 'text', ...
    'String', 'Eval Pt Offset (in):', ...
    'Units', 'normalized', 'Position', [0.05 0.6 0.9 0.05]);
offset_options = {'-1', '0', '+1'};
handles.offsetMenu = uicontrol('Parent', handles.panel_playback, 'Style', 'popupmenu', ...
    'String', offset_options, ...
    'Units', 'normalized', 'Position', [0.05 0.55 0.9 0.05], ...
    'Callback', @(src,~) updateOffset(src));

% Filtering Panel
handles.panel_filters = uipanel('Parent', fig, 'Title', 'Filtering Methods', ...
    'FontSize', 10, 'BackgroundColor', [0.8 1 0.8], ...
    'Units', 'normalized', 'Position', [0.01 0.42 0.25 0.5]);

filter_names = {'None', 'MovingAvg', 'SavitzkyGolay', ...
                'Butter6', 'Butter8', 'Butter10', 'Butter12', ...
                'QuinticSpline', 'Lowess'};

handles.filterChecks = gobjects(length(filter_names),1);
for i = 1:length(filter_names)
    handles.filterChecks(i) = uicontrol('Parent', handles.panel_filters, ...
        'Style', 'checkbox', 'String', filter_names{i}, ...
        'Units', 'normalized', ...
        'Position', [0.05, 0.9 - (i-1)*0.07, 0.9, 0.06], ...
        'Value', strcmp(filter_names{i}, 'None'), ...
        'Callback', @(src,~) selectFilter(src, filter_names{i}));
end

% Store and continue
guidata(fig, handles);
