function WORKING_GUI()
    % WORKING VERSION: Golf Swing Data Generator GUI - uitable issue resolved
    % This version works by replacing uitable with listbox components
    
    fprintf('Launching WORKING Golf Swing Training Data Generator GUI...\n');
    
    % Create main figure
    fig = figure('Name', 'Golf Swing Data Generator - WORKING', ...
                 'Position', [50, 50, 1200, 800], ...
                 'MenuBar', 'none', ...
                 'ToolBar', 'none', ...
                 'Color', [0.95, 0.95, 0.95]);
    
    % Initialize handles
    handles = struct();
    handles.should_stop = false;
    handles.trial_table_data = [];
    handles.trial_count = 0;
    
    % Create title
    title_panel = uipanel('Parent', fig, ...
                         'Position', [20, 720, 1160, 60], ...
                         'BackgroundColor', [0.2, 0.4, 0.8], ...
                         'BorderType', 'none');
    
    uicontrol('Parent', title_panel, ...
              'Style', 'text', ...
              'String', 'Golf Swing Data Generator - WORKING VERSION', ...
              'Position', [20, 15, 800, 30], ...
              'FontSize', 16, ...
              'FontWeight', 'bold', ...
              'ForegroundColor', 'white', ...
              'BackgroundColor', [0.2, 0.4, 0.8]);
    
    % Main panels
    left_panel = uipanel('Parent', fig, 'Position', [20, 20, 570, 690], 'Title', 'Settings');
    right_panel = uipanel('Parent', fig, 'Position', [610, 20, 570, 690], 'Title', 'Generation & Results');
    
    % === LEFT PANEL: Settings ===
    
    % Trial settings
    trial_settings = uipanel('Parent', left_panel, 'Position', [10, 500, 540, 160], 'Title', 'Trial Settings');
    
    uicontrol('Parent', trial_settings, 'Style', 'text', 'String', 'Number of Trials:', ...
              'Position', [10, 110, 120, 20], 'HorizontalAlignment', 'left');
    handles.num_trials = uicontrol('Parent', trial_settings, 'Style', 'edit', 'String', '10', ...
                                   'Position', [140, 110, 60, 20]);
    
    uicontrol('Parent', trial_settings, 'Style', 'text', 'String', 'Simulation Time (s):', ...
              'Position', [10, 80, 120, 20], 'HorizontalAlignment', 'left');
    handles.sim_time = uicontrol('Parent', trial_settings, 'Style', 'edit', 'String', '2.0', ...
                                 'Position', [140, 80, 60, 20]);
    
    uicontrol('Parent', trial_settings, 'Style', 'text', 'String', 'Output Folder:', ...
              'Position', [10, 50, 120, 20], 'HorizontalAlignment', 'left');
    handles.output_folder = uicontrol('Parent', trial_settings, 'Style', 'edit', 'String', 'output_data', ...
                                      'Position', [140, 50, 200, 20]);
    
    uicontrol('Parent', trial_settings, 'Style', 'pushbutton', 'String', 'Browse', ...
              'Position', [350, 50, 60, 20], ...
              'Callback', @(~,~) fprintf('Browse functionality can be implemented\n'));
    
    % Data sources
    data_sources = uipanel('Parent', left_panel, 'Position', [10, 300, 540, 190], 'Title', 'Data Sources');
    
    handles.use_signal_bus = uicontrol('Parent', data_sources, 'Style', 'checkbox', 'String', 'Signal Bus Data', ...
                                       'Position', [10, 150, 150, 20], 'Value', 1);
    handles.use_simscape = uicontrol('Parent', data_sources, 'Style', 'checkbox', 'String', 'Simscape Data', ...
                                     'Position', [10, 120, 150, 20], 'Value', 1);
    handles.use_workspace = uicontrol('Parent', data_sources, 'Style', 'checkbox', 'String', 'Workspace Variables', ...
                                      'Position', [10, 90, 150, 20], 'Value', 0);
    
    % Performance options
    perf_panel = uipanel('Parent', left_panel, 'Position', [10, 100, 540, 190], 'Title', 'Performance Options');
    
    handles.disable_explorer = uicontrol('Parent', perf_panel, 'Style', 'checkbox', ...
                                         'String', 'Disable Simscape Results Explorer (5% faster)', ...
                                         'Position', [10, 150, 300, 20], 'Value', 1);
    handles.fast_restart = uicontrol('Parent', perf_panel, 'Style', 'checkbox', 'String', 'Enable Fast Restart', ...
                                     'Position', [10, 120, 200, 20], 'Value', 1);
    handles.memory_opt = uicontrol('Parent', perf_panel, 'Style', 'checkbox', 'String', 'Memory Optimization', ...
                                   'Position', [10, 90, 200, 20], 'Value', 0);
    
    % Status display
    handles.status_display = uicontrol('Parent', left_panel, 'Style', 'text', ...
                                       'String', 'Ready to generate simulation data', ...
                                       'Position', [10, 10, 540, 80], ...
                                       'BackgroundColor', [1, 1, 1], ...
                                       'HorizontalAlignment', 'left', ...
                                       'FontSize', 10);
    
    % === RIGHT PANEL: Generation & Results ===
    
    % Control buttons
    control_panel = uipanel('Parent', right_panel, 'Position', [10, 550, 540, 110], 'Title', 'Controls');
    
    handles.generate_btn = uicontrol('Parent', control_panel, 'Style', 'pushbutton', ...
                                     'String', 'Generate Dataset', ...
                                     'Position', [50, 50, 150, 40], ...
                                     'FontSize', 12, 'FontWeight', 'bold', ...
                                     'BackgroundColor', [0.2, 0.7, 0.2], ...
                                     'ForegroundColor', 'white', ...
                                     'Callback', @(~,~) generateDataset(handles));
    
    handles.stop_btn = uicontrol('Parent', control_panel, 'Style', 'pushbutton', ...
                                 'String', 'Stop', ...
                                 'Position', [220, 50, 100, 40], ...
                                 'FontSize', 12, 'FontWeight', 'bold', ...
                                 'BackgroundColor', [0.8, 0.2, 0.2], ...
                                 'ForegroundColor', 'white', ...
                                 'Enable', 'off', ...
                                 'Callback', @(~,~) stopGeneration(handles));
    
    handles.clear_btn = uicontrol('Parent', control_panel, 'Style', 'pushbutton', ...
                                  'String', 'Clear Results', ...
                                  'Position', [340, 50, 100, 40], ...
                                  'FontSize', 10, ...
                                  'Callback', @(~,~) clearResults(handles));
    
    % Progress
    handles.progress_text = uicontrol('Parent', control_panel, ...
                                      'Style', 'text', ...
                                      'String', 'Progress: Ready', ...
                                      'Position', [10, 10, 520, 25], ...
                                      'HorizontalAlignment', 'left', ...
                                      'FontWeight', 'bold');
    
    % Results display (SAFE - using listbox instead of uitable)
    results_panel = uipanel('Parent', right_panel, 'Position', [10, 50, 540, 490], 'Title', 'Trial Results');
    
    uicontrol('Parent', results_panel, 'Style', 'text', ...
              'String', 'Trial Information (each line shows: Trial# | Status | Data Points | Duration)', ...
              'Position', [10, 450, 520, 20], ...
              'HorizontalAlignment', 'left', 'FontSize', 9);
    
    handles.results_listbox = uicontrol('Parent', results_panel, ...
                                        'Style', 'listbox', ...
                                        'String', {'No trials generated yet', 'Click "Generate Dataset" to start'}, ...
                                        'Position', [10, 10, 520, 430], ...
                                        'FontSize', 10, ...
                                        'BackgroundColor', [1, 1, 1]);
    
    % Store handles
    guidata(fig, handles);
    
    fprintf('WORKING GUI launched successfully!\n');
    fprintf('This version uses listbox instead of uitable to avoid Java/display issues.\n');
end

function generateDataset(handles)
    % Mock dataset generation function
    handles = guidata(gcf);
    
    % Update progress
    set(handles.progress_text, 'String', 'Progress: Starting generation...');
    set(handles.generate_btn, 'Enable', 'off');
    set(handles.stop_btn, 'Enable', 'on');
    
    % Get settings
    num_trials = str2double(get(handles.num_trials, 'String'));
    sim_time = str2double(get(handles.sim_time, 'String'));
    
    % Update status
    status_msg = sprintf('Generating %d trials with %.1f second simulation time...', num_trials, sim_time);
    set(handles.status_display, 'String', status_msg);
    
    % Mock generation process
    results = {};
    for i = 1:num_trials
        if handles.should_stop
            break;
        end
        
        % Simulate work
        pause(0.1);
        
        % Mock results
        data_points = 100 + randi(50);
        duration = 0.8 + rand() * 0.4;
        trial_info = sprintf('Trial %d | Complete | %d points | %.2fs', i, data_points, duration);
        results{end+1} = trial_info;
        
        % Update display
        set(handles.results_listbox, 'String', results);
        set(handles.progress_text, 'String', sprintf('Progress: Trial %d/%d completed', i, num_trials));
        drawnow;
    end
    
    % Finish
    set(handles.progress_text, 'String', sprintf('Progress: Completed %d trials', length(results)));
    set(handles.generate_btn, 'Enable', 'on');
    set(handles.stop_btn, 'Enable', 'off');
    set(handles.status_display, 'String', 'Dataset generation completed successfully!');
    
    handles.should_stop = false;
    guidata(gcf, handles);
end

function stopGeneration(handles)
    handles = guidata(gcf);
    handles.should_stop = true;
    guidata(gcf, handles);
    set(handles.status_display, 'String', 'Stopping generation...');
end

function clearResults(handles)
    handles = guidata(gcf);
    set(handles.results_listbox, 'String', {'Results cleared', 'Ready for new generation'});
    set(handles.progress_text, 'String', 'Progress: Ready');
    set(handles.status_display, 'String', 'Results cleared. Ready to generate new data.');
end 