{
  "timestamp": null,
  "total_files": 1258,
  "issues": [],
  "passed": false,
  "summary": "[FAIL] MATLAB quality checks FAILED (1258 files checked)",
  "checks": {
    "matlab": {
      "success": true,
      "output": "\n\tHome License -- for personal use only.  Not for government,\n\tacademic, research, commercial, or other organizational use.\n\n\u007f Setting up comprehensive MATLAB code quality checks...\n\u007f MATLAB Unit Testing Framework available\n\n\u007f Scanning MATLAB files...\nFound 1258 MATLAB files\n\n\u007f Running comprehensive quality checks...\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\matlab_quality_config.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\run_all.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\run_matlab_tests.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\ClubDataGUI_v2.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Copy_of_ClubDataGUI_v2.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUIRev0.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUIRev0_FIXED_CLEAN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUIRev0_fixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_1.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_1_MAT.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_1_MAT_FINAL.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_1_MAT_FINAL_FIXED.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_1_MAT_FIXED.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_1_fixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_MAT.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_MAT_CLEANED.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_MAT_Enhanced.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_PROMPT.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_PROMPT_CLEANED.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_PROMPT_CLEANED_FIXED.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_PROMPT_FINAL.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_PROMPT_FINAL_NESTED.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_PROMPT_FIXED.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_Working.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_v2_backup.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\Copy_2_of_ClubDataGUI_v2.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\Copy_3_of_ClubDataGUI_v2.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\Copy_of_ClubDataGUI_v2.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\animateTW_WiffleClub.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Model\\ExportData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Model\\Model Functions\\compareInputFilesorModelWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Model\\Model Functions\\readJointStateTargets_GolfSwing3D.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Model\\Model Functions\\setJointPriorities_GolfSwing3D.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Model\\Model Functions\\Post Processing Scripts\\postprocess_golf_metrics.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Model\\Model Functions\\Post Processing Scripts\\postprocess_golf_simlog.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Model\\Model Functions\\Post Processing Scripts\\postprocess_golf_simlog_enhanced.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Model\\Model Functions\\Post Processing Scripts\\postprocess_golf_simlog_rotmat.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\MASTER_SCRIPT_ZTCF_ZVCF_PLOT_GENERATOR_3D.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\runParallelSimulations_14cores.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\cleanup_matlab_path.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\exportCodeIssues.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Data_GUI_TenThousandDataSet.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Dataset_GUI_backup.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Backup_Scripts\\Run_Backup_20250822_163833\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Backup_Scripts\\Run_Backup_20250822_163833\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Backup_Scripts\\Run_Backup_20250822_163833\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Backup_Scripts\\Run_Backup_20250822_163833\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Backup_Scripts\\Run_Backup_20250822_163833\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\Data_GUI_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\Data_GUI_No_Batch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\Data_GUI_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\Data_GUI_No_Batch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124152\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124152\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124152\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124152\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124152\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124152\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\Data_GUI_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\Data_GUI_No_Batch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\Data_GUI_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\Data_GUI_No_Batch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\Data_GUI_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\Data_GUI_No_Batch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\Data_GUI_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\Data_GUI_No_Batch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\Data_GUI_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\Data_GUI_No_Batch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\Data_GUI_Enhanced.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\PostProcessingModule.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\launch_enhanced_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\Data_GUI_Enhanced.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\PostProcessingModule.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\launch_enhanced_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\Data_GUI_Enhanced.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\PostProcessingModule.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\compare_headers_detailed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\launch_enhanced_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\Data_GUI_Enhanced.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\PostProcessingModule.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\calculateForceMoments.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\calculateJointPowerWork.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\calculateWorkPowerAndGranularAngularImpulse3D.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\compare_headers_detailed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\compressData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\getOrCreateParallelPool.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\initializeLocalCluster.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\launch_enhanced_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\performance_analysis.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\performance_optimizer.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\performance_optimizer_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\setup_performance_preferences.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_all_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_cluster_function.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_direct_function_call.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_enhanced_calculations.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_granular_angular_impulse.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_granular_calculations_with_checkboxes.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_parallel_pool_fix.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_performance_descriptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_performance_interface.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_performance_preferences.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_preallocation_performance.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_simple.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_154327\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_154327\\Data_GUI_Enhanced.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_154327\\launch_enhanced_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_162051\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_162051\\Data_GUI_Enhanced.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_162051\\launch_enhanced_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_165407\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_165407\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_165407\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_165407\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_165407\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_214947\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_214947\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_214947\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_075005\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_075005\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_075005\\Dataset_GUI_backup.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_075005\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_075005\\test_1956_columns.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_075005\\test_gui_launch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_081135\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_081135\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_081135\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_082950\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_082950\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_082950\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_084930\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_084930\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_084930\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_090618\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_090618\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_090618\\exportCodeIssues.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_090618\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_091542\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_091542\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_091542\\exportCodeIssues.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_091542\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_110150\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_110150\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_110150\\cleanup_matlab_path.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_110150\\exportCodeIssues.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_110150\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250827_072956\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250827_072956\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250827_072956\\cleanup_matlab_path.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250827_072956\\exportCodeIssues.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250827_072956\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250827_092217\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250827_092217\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250827_092217\\cleanup_matlab_path.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250827_092217\\exportCodeIssues.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250827_092217\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250828_193954\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250828_193954\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250828_193954\\cleanup_matlab_path.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250828_193954\\exportCodeIssues.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250828_193954\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250828_201053\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250828_201053\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250828_201053\\cleanup_matlab_path.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250828_201053\\exportCodeIssues.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250828_201053\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\Data_GUI_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\Data_GUI_No_Batch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\Data_GUI_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\Data_GUI_No_Batch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\Data_GUI_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\Data_GUI_No_Batch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\Data_GUI_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\Data_GUI_No_Batch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\Clear_Parallel_Cache.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\Data_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\PostProcessingModule.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\addModelWorkspaceData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\calculateForceMoments.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\calculateJointPowerWork.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\calculateWorkPowerAndGranularAngularImpulse3D.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\checkHighMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\checkModelConfiguration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\checkStopRequest.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\check_model_configuration.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\checkpoint_recovery.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\combineDataSources.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\compare_headers_detailed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\compressData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\data_extraction_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\diagnoseDataExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\endPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\ensureEnhancedConfig.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractAllSignalsFromBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractCoefficientsFromTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractCombinedSignalBusData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractConstantMatrixData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractDataFromField.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractDataWithOptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractFromCombinedSignalBus.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractFromCombinedSignalBus_BROKEN.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractFromNestedStruct.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractLogsoutDataFixed.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractSignalsFromSimOut.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractSimscapeDataRecursive.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractTimeSeriesData.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractWorkspaceOutputs.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\fallbackSimlogExtraction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\generateRandomCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\getMemoryInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\getMemoryUsage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\getOrCreateParallelPool.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\getPolynomialParameterInfo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\getShortenedJointName.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\initializeLocalCluster.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\inspect_simscape_hierarchy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\loadInputFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\logBatchResult.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\logMessage.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\logical2str.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\memory_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\mergeTables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\performance_analysis.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\performance_optimizer.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\performance_optimizer_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\prepareSimulationInputsForBatch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\processSimulationOutput.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\recordBatchTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\recordPhase.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\resampleDataToFrequency.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\restoreWorkspace.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\runSingleTrial.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\setModelParameters.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\setPolynomialCoefficients.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\setup_performance_preferences.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\shouldShowDebug.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\shouldShowNormal.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\shouldShowVerbose.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\timestampPrintf.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\traverseSimlogNode.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\verbosity_control.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250822_215304.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_083307.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_085243.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_090821.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_091732.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_124310.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_125811.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_200636.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_200821.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_201739.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_202648.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_204502.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250828_201315.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250827\\Data_GUI_run_20250827_073709.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250827\\Data_GUI_run_20250827_093626.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250828\\Data_GUI_run_20250828_194512.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_1956_columns.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_all_functions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_cluster_function.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_direct_function_call.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_enhanced_calculations.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_granular_angular_impulse.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_granular_calculations_with_checkboxes.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_gui_launch.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_parallel_fix.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_parallel_pool_fix.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_performance_descriptions.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_performance_interface.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_performance_preferences.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_preallocation_performance.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_simple.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\work\\Backup_Scripts\\Run_Backup_20250823_142355\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\work\\Backup_Scripts\\Run_Backup_20250823_142701\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\work\\Backup_Scripts\\Run_Backup_20250823_143731\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\work\\Backup_Scripts\\Run_Backup_20250823_144451\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\work\\Backup_Scripts\\Run_Backup_20250823_145626\\Dataset_GUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\HexPolyInputFunction.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\HexRegression.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\IdentifyLoggedSignals.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Maximum_CHSx.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Maximum_CHSy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Maximum_CHSz.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Minimum_CHSy.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Minimum_CHSz.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\calculatePathVectors3D.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\calculateTotalWorkAndPower3D.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\calculateWorkAndImpulse3D.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\calculateWorkPowerAndAngularImpulse3D.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\combine_plot_scripts.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\generateDataTable3D.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\generateResultsFolder3D.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\generateSummaryTableAndQuiverData3D.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\overlayQuiverForces.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\runZvcfSingleTime.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\setModelingModeParameter.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\shelledQuivers3.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\SCRIPT_IterativeLearningLoop.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\SCRIPT_NonvirtualBlockCount.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\SCRIPT_StatesTable.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\SCRIPT_TransferStartPositionVelocityIntoModelFromMATFile.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\SCRIPT_VariableDeletion.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\Archive\\Maximize_CHS.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\Archive\\Maximize_CHS_3D.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\Archive\\Minimize_LF_AvgRotVelocity.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\Archive\\SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\launch_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\Archive\\test_phase1_improvements.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\Archive\\test_phase2_improvements.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\Archive\\test_real_gui_functionality.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\Archive\\test_skeleton_plotter_enhancements.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\config\\model_config.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\data_processing\\generate_base_data.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\data_processing\\generate_ztcf_data.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\data_processing\\process_data_tables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\data_processing\\run_additional_processing.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\data_processing\\save_data_tables.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\functions\\initialize_model.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\functions\\performance_tracker.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\main_scripts\\golf_swing_analysis_gui.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\main_scripts\\run_ztcf_zvcf_analysis.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\scripts\\performance_analysis_script.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\scripts\\run_performance_demo.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\visualization\\GolfSwingVisualizer.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\visualization\\SkeletonPlotter.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\visualization\\create_advanced_plot_viewer.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\visualization\\create_animation_window.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\visualization\\create_data_explorer.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\visualization\\create_performance_monitor.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\visualization\\skeleton_plotter_wrapper.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Motion Capture Plotter\\Archive\\Matlab Inverse Dynamics\\GolfClubInverseDynamicsGUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Motion Capture Plotter\\Archive\\Matlab Inverse Dynamics\\InvDynamicsMATLABGPT.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Motion Capture Plotter\\Archive\\Matlab Inverse Dynamics\\Mulligan\\GolfClubInverseDynamicsGUI.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Motion Capture Plotter\\Archive\\Matlab Inverse Dynamics\\Mulligan\\Part12.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Motion Capture Plotter\\Archive\\Matlab Inverse Dynamics\\Mulligan\\Part3.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Motion Capture Plotter\\Archive\\Matlab Inverse Dynamics\\Mulligan\\Part4.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Simscape Multibody Data Plotters\\Matlab Versions\\SkeletonPlotter\\GolfSwingVisualizer.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Simscape Multibody Data Plotters\\Matlab Versions\\SkeletonPlotter\\Older Revs\\Safe_Copy_of_SkeletonPlotter.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Simscape Multibody Data Plotters\\Matlab Versions\\SkeletonPlotter\\Older Revs\\SkeletonPlotter.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Simscape Multibody Data Plotters\\Matlab Versions\\SkeletonPlotter\\Older Revs\\TestSkeletonPlotter.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Simscape Multibody Data Plotters\\Python Version\\integrated_golf_gui_r0\\find_specific_bus_creator.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Simscape Multibody Data Plotters\\Python Version\\integrated_golf_gui_r0\\fix_data_export_format.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Simscape Multibody Data Plotters\\Python Version\\integrated_golf_gui_r0\\identify_duplicate_signals.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Simscape Multibody Data Plotters\\Python Version\\integrated_golf_gui_r0\\search_all_signals.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Simscape Multibody Data Plotters\\Python Version\\integrated_golf_gui_r0\\test_signal_bus_generation.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\MASTER_SCRIPT_AllCharts_3D.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_AllQuiverCharts.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_BASEQuiver.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_BASE_Plots.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_ComparisonQuiver.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_Comparison_Plots.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_DELTAQuiver.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_DELTA_Plots.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_ModelDataQuiver.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_ModelData_Plots.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_ZTCFQuiver.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_ZTCF_Plots.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_ZVCFQuiver.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\tests\\test_example.m\nChecking: C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\tests\\test_quality_checks.m\n\n\u007f Running mlint on entire directory...\n\u007f Directory mlint failed: Unable to open file \".\". File is not found or is not a supported MATLAB code file.\n\n\u007f MATLAB quality checks FAILED (1258 files checked, 18245 issues found)\n\nIssues found:\n  1. matlab_quality_config.m (line 60): 'mlint' is not recommended. Use 'checkcode' instead, which is a direct replacement.\n  2. matlab_quality_config.m (line 93): 'mlint' is not recommended. Use 'checkcode' instead, which is a direct replacement.\n  3. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\matlab_quality_config.m: Missing arguments validation block\n  4. run_all.m (line 7): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5. run_all.m (line 10): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\run_all.m: Missing arguments validation block\n  7. run_matlab_tests.m (line 82): Value assigned to variable might be unused.\n  8. run_matlab_tests.m (line 176): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9. run_matlab_tests.m (line 176): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\run_matlab_tests.m: Missing arguments validation block\n  11. ClubDataGUI_v2.m (line 8): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12. ClubDataGUI_v2.m (line 9): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13. ClubDataGUI_v2.m (line 10): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14. ClubDataGUI_v2.m (line 232): TRY statement should have a CATCH statement to check for unexpected errors.\n  15. ClubDataGUI_v2.m (line 232): Extra comma is unnecessary.\n  16. ClubDataGUI_v2.m (line 257): Value assigned to variable might be unused.\n  17. ClubDataGUI_v2.m (line 303): Value assigned to variable might be unused.\n  18. ClubDataGUI_v2.m (line 367): Function might be unused.\n  19. ClubDataGUI_v2.m (line 373): Function might be unused.\n  20. ClubDataGUI_v2.m (line 383): Function might be unused.\n  21. ClubDataGUI_v2.m (line 392): Function might be unused.\n  22. ClubDataGUI_v2.m (line 408): Function might be unused.\n  23. ClubDataGUI_v2.m (line 413): Outer loop index 'i' is set inside a nested function.\n  24. ClubDataGUI_v2.m (line 415): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  25. ClubDataGUI_v2.m (line 416): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  26. ClubDataGUI_v2.m (line 426): Function might be unused.\n  27. ClubDataGUI_v2.m (line 435): Function might be unused.\n  28. ClubDataGUI_v2.m (line 444): Function might be unused.\n  29. ClubDataGUI_v2.m (line 453): Function might be unused.\n  30. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\ClubDataGUI_v2.m: Missing arguments validation block\n  31. Copy_of_ClubDataGUI_v2.m (line 4): Function name 'ClubDataGUI_v2' is known to MATLAB by its file name: 'Copy_of_ClubDataGUI_v2'.\n  32. Copy_of_ClubDataGUI_v2.m (line 8): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  33. Copy_of_ClubDataGUI_v2.m (line 9): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  34. Copy_of_ClubDataGUI_v2.m (line 10): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  35. Copy_of_ClubDataGUI_v2.m (line 232): TRY statement should have a CATCH statement to check for unexpected errors.\n  36. Copy_of_ClubDataGUI_v2.m (line 232): Extra comma is unnecessary.\n  37. Copy_of_ClubDataGUI_v2.m (line 257): Value assigned to variable might be unused.\n  38. Copy_of_ClubDataGUI_v2.m (line 303): Value assigned to variable might be unused.\n  39. Copy_of_ClubDataGUI_v2.m (line 367): Function might be unused.\n  40. Copy_of_ClubDataGUI_v2.m (line 373): Function might be unused.\n  41. Copy_of_ClubDataGUI_v2.m (line 383): Function might be unused.\n  42. Copy_of_ClubDataGUI_v2.m (line 392): Function might be unused.\n  43. Copy_of_ClubDataGUI_v2.m (line 408): Function might be unused.\n  44. Copy_of_ClubDataGUI_v2.m (line 413): Outer loop index 'i' is set inside a nested function.\n  45. Copy_of_ClubDataGUI_v2.m (line 415): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  46. Copy_of_ClubDataGUI_v2.m (line 416): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  47. Copy_of_ClubDataGUI_v2.m (line 426): Function might be unused.\n  48. Copy_of_ClubDataGUI_v2.m (line 435): Function might be unused.\n  49. Copy_of_ClubDataGUI_v2.m (line 444): Function might be unused.\n  50. Copy_of_ClubDataGUI_v2.m (line 453): Function might be unused.\n  51. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Copy_of_ClubDataGUI_v2.m: Missing arguments validation block\n  52. ClubDataGUI.m (line 1): Function might be unused.\n  53. ClubDataGUI.m (line 44): Add a semicolon after the statement to hide the output (in a function).\n  54. ClubDataGUI.m (line 44): Add a semicolon after the statement to hide the output (in a function).\n  55. ClubDataGUI.m (line 44): Add a semicolon after the statement to hide the output (in a function).\n  56. ClubDataGUI.m (line 44): Add a semicolon after the statement to hide the output (in a function).\n  57. ClubDataGUI.m (line 44): Add a semicolon after the statement to hide the output (in a function).\n  58. ClubDataGUI.m (line 44): Parse error at ')': usage might be invalid MATLAB syntax.\n  59. ClubDataGUI.m (line 48): Add a semicolon after the statement to hide the output (in a function).\n  60. ClubDataGUI.m (line 56): This keyword might not be aligned with its matching END on line 83.\n  61. ClubDataGUI.m (line 85): Input argument might be unused. Consider replacing the argument with ~ instead.\n  62. ClubDataGUI.m (line 85): Input argument might be unused. Consider replacing the argument with ~ instead.\n  63. ClubDataGUI.m (line 85): Input argument might be unused. Consider replacing the argument with ~ instead.\n  64. ClubDataGUI.m (line 87): Parse error at ELSE: usage might be invalid MATLAB syntax.\n  65. ClubDataGUI.m (line 95): Value assigned to variable might be unused.\n  66. ClubDataGUI.m (line 101): Variable must be explicitly defined before first use.\n  67. ClubDataGUI.m (line 154): Input argument might be unused. Consider replacing the argument with ~ instead.\n  68. ClubDataGUI.m (line 197): Input argument might be unused. Consider replacing the argument with ~ instead.\n  69. ClubDataGUI.m (line 216): Parse error at END: usage might be invalid MATLAB syntax.\n  70. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI.m: Missing arguments validation block\n  71. ClubDataGUIRev0.m (line 40): Add a semicolon after the statement to hide the output (in a function).\n  72. ClubDataGUIRev0.m (line 40): Add a semicolon after the statement to hide the output (in a function).\n  73. ClubDataGUIRev0.m (line 41): Add a semicolon after the statement to hide the output (in a function).\n  74. ClubDataGUIRev0.m (line 41): Add a semicolon after the statement to hide the output (in a function).\n  75. ClubDataGUIRev0.m (line 41): Add a semicolon after the statement to hide the output (in a function).\n  76. ClubDataGUIRev0.m (line 41): Add a semicolon after the statement to hide the output (in a function).\n  77. ClubDataGUIRev0.m (line 42): Add a semicolon after the statement to hide the output (in a function).\n  78. ClubDataGUIRev0.m (line 46): Outer loop index 'i' is set inside a nested function.\n  79. ClubDataGUIRev0.m (line 74): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  80. ClubDataGUIRev0.m (line 165): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  81. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUIRev0.m: Missing arguments validation block\n  82. ClubDataGUIRev0_FIXED_CLEAN.m (line 1): Function might be unused.\n  83. ClubDataGUIRev0_FIXED_CLEAN.m (line 26): This variable, apparently a structure, is changed but the value might be unused.\n  84. ClubDataGUIRev0_FIXED_CLEAN.m (line 32): Add a semicolon after the statement to hide the output (in a function).\n  85. ClubDataGUIRev0_FIXED_CLEAN.m (line 32): Add a semicolon after the statement to hide the output (in a function).\n  86. ClubDataGUIRev0_FIXED_CLEAN.m (line 32): Add a semicolon after the statement to hide the output (in a function).\n  87. ClubDataGUIRev0_FIXED_CLEAN.m (line 32): Add a semicolon after the statement to hide the output (in a function).\n  88. ClubDataGUIRev0_FIXED_CLEAN.m (line 33): Add a semicolon after the statement to hide the output (in a function).\n  89. ClubDataGUIRev0_FIXED_CLEAN.m (line 33): Parse error at ')': usage might be invalid MATLAB syntax.\n  90. ClubDataGUIRev0_FIXED_CLEAN.m (line 35): Add a semicolon after the statement to hide the output (in a script).\n  91. ClubDataGUIRev0_FIXED_CLEAN.m (line 36): Add a semicolon after the statement to hide the output (in a script).\n  92. ClubDataGUIRev0_FIXED_CLEAN.m (line 36): Add a semicolon after the statement to hide the output (in a script).\n  93. ClubDataGUIRev0_FIXED_CLEAN.m (line 36): Add a semicolon after the statement to hide the output (in a script).\n  94. ClubDataGUIRev0_FIXED_CLEAN.m (line 36): Add a semicolon after the statement to hide the output (in a script).\n  95. ClubDataGUIRev0_FIXED_CLEAN.m (line 37): Add a semicolon after the statement to hide the output (in a script).\n  96. ClubDataGUIRev0_FIXED_CLEAN.m (line 69): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  97. ClubDataGUIRev0_FIXED_CLEAN.m (line 73): Value assigned to variable might be unused.\n  98. ClubDataGUIRev0_FIXED_CLEAN.m (line 76): Value assigned to variable might be unused.\n  99. ClubDataGUIRev0_FIXED_CLEAN.m (line 78): Value assigned to variable might be unused.\n  100. ClubDataGUIRev0_FIXED_CLEAN.m (line 83): Value assigned to variable might be unused.\n  101. ClubDataGUIRev0_FIXED_CLEAN.m (line 84): Parse error at ELSEIF: usage might be invalid MATLAB syntax.\n  102. ClubDataGUIRev0_FIXED_CLEAN.m (line 85): Value assigned to variable might be unused.\n  103. ClubDataGUIRev0_FIXED_CLEAN.m (line 86): Parse error at ELSE: usage might be invalid MATLAB syntax.\n  104. ClubDataGUIRev0_FIXED_CLEAN.m (line 149): Parse error at END: usage might be invalid MATLAB syntax.\n  105. ClubDataGUIRev0_FIXED_CLEAN.m (line 182): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  106. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUIRev0_FIXED_CLEAN.m: Missing arguments validation block\n  107. ClubDataGUIRev0_fixed.m (line 34): Add a semicolon after the statement to hide the output (in a function).\n  108. ClubDataGUIRev0_fixed.m (line 34): Add a semicolon after the statement to hide the output (in a function).\n  109. ClubDataGUIRev0_fixed.m (line 35): Add a semicolon after the statement to hide the output (in a function).\n  110. ClubDataGUIRev0_fixed.m (line 35): Add a semicolon after the statement to hide the output (in a function).\n  111. ClubDataGUIRev0_fixed.m (line 35): Add a semicolon after the statement to hide the output (in a function).\n  112. ClubDataGUIRev0_fixed.m (line 35): Add a semicolon after the statement to hide the output (in a function).\n  113. ClubDataGUIRev0_fixed.m (line 36): Add a semicolon after the statement to hide the output (in a function).\n  114. ClubDataGUIRev0_fixed.m (line 40): Outer loop index 'i' is set inside a nested function.\n  115. ClubDataGUIRev0_fixed.m (line 68): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  116. ClubDataGUIRev0_fixed.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  117. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUIRev0_fixed.m: Missing arguments validation block\n  118. ClubDataGUI_1.m (line 143): 'xlsread' is not recommended. With appropriate code changes, use 'readtable', 'readmatrix' or 'readcell' instead.\n  119. ClubDataGUI_1.m (line 216): Input argument might be unused. Consider replacing the argument with ~ instead.\n  120. ClubDataGUI_1.m (line 218): Value assigned to variable might be unused.\n  121. ClubDataGUI_1.m (line 291): Input argument might be unused. Consider replacing the argument with ~ instead.\n  122. ClubDataGUI_1.m (line 299): Input argument might be unused. Consider replacing the argument with ~ instead.\n  123. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_1.m: Missing arguments validation block\n  124. ClubDataGUI_1_MAT.m (line 1): Function might be unused.\n  125. ClubDataGUI_1_MAT.m (line 131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  126. ClubDataGUI_1_MAT.m (line 131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  127. ClubDataGUI_1_MAT.m (line 133): Value assigned to variable might be unused.\n  128. ClubDataGUI_1_MAT.m (line 134): Parse error at ELSE: usage might be invalid MATLAB syntax.\n  129. ClubDataGUI_1_MAT.m (line 138): 'xlsread' is not recommended. With appropriate code changes, use 'readtable', 'readmatrix' or 'readcell' instead.\n  130. ClubDataGUI_1_MAT.m (line 208): Parse error at END: usage might be invalid MATLAB syntax.\n  131. ClubDataGUI_1_MAT.m (line 210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  132. ClubDataGUI_1_MAT.m (line 212): Value assigned to variable might be unused.\n  133. ClubDataGUI_1_MAT.m (line 284): Input argument might be unused. Consider replacing the argument with ~ instead.\n  134. ClubDataGUI_1_MAT.m (line 292): Input argument might be unused. Consider replacing the argument with ~ instead.\n  135. ClubDataGUI_1_MAT.m (line 298): Loop index 'i' is changed inside of a FOR loop.\n  136. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_1_MAT.m: Missing arguments validation block\n  137. ClubDataGUI_1_MAT_FINAL.m (line 1): Function might be unused.\n  138. ClubDataGUI_1_MAT_FINAL.m (line 1): Unable to define local function 'ClubDataGUI_1_MAT_FINAL' because it has the same name as the file.\n  139. ClubDataGUI_1_MAT_FINAL.m (line 132): Input argument might be unused. Consider replacing the argument with ~ instead.\n  140. ClubDataGUI_1_MAT_FINAL.m (line 132): Input argument might be unused. Consider replacing the argument with ~ instead.\n  141. ClubDataGUI_1_MAT_FINAL.m (line 134): Value assigned to variable might be unused.\n  142. ClubDataGUI_1_MAT_FINAL.m (line 138): 'xlsread' is not recommended. With appropriate code changes, use 'readtable', 'readmatrix' or 'readcell' instead.\n  143. ClubDataGUI_1_MAT_FINAL.m (line 208): Parse error at END: usage might be invalid MATLAB syntax.\n  144. ClubDataGUI_1_MAT_FINAL.m (line 211): Input argument might be unused. Consider replacing the argument with ~ instead.\n  145. ClubDataGUI_1_MAT_FINAL.m (line 213): Value assigned to variable might be unused.\n  146. ClubDataGUI_1_MAT_FINAL.m (line 286): Input argument might be unused. Consider replacing the argument with ~ instead.\n  147. ClubDataGUI_1_MAT_FINAL.m (line 308): Parse error at END: usage might be invalid MATLAB syntax.\n  148. ClubDataGUI_1_MAT_FINAL.m (line 309): Parse error at END: usage might be invalid MATLAB syntax.\n  149. ClubDataGUI_1_MAT_FINAL.m (line 318): Parse error at END: usage might be invalid MATLAB syntax.\n  150. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_1_MAT_FINAL.m: Missing arguments validation block\n  151. ClubDataGUI_1_MAT_FINAL_FIXED.m (line 1): Function might be unused.\n  152. ClubDataGUI_1_MAT_FINAL_FIXED.m (line 132): Input argument might be unused. Consider replacing the argument with ~ instead.\n  153. ClubDataGUI_1_MAT_FINAL_FIXED.m (line 132): Input argument might be unused. Consider replacing the argument with ~ instead.\n  154. ClubDataGUI_1_MAT_FINAL_FIXED.m (line 134): Value assigned to variable might be unused.\n  155. ClubDataGUI_1_MAT_FINAL_FIXED.m (line 138): 'xlsread' is not recommended. With appropriate code changes, use 'readtable', 'readmatrix' or 'readcell' instead.\n  156. ClubDataGUI_1_MAT_FINAL_FIXED.m (line 208): Parse error at END: usage might be invalid MATLAB syntax.\n  157. ClubDataGUI_1_MAT_FINAL_FIXED.m (line 211): Input argument might be unused. Consider replacing the argument with ~ instead.\n  158. ClubDataGUI_1_MAT_FINAL_FIXED.m (line 213): Value assigned to variable might be unused.\n  159. ClubDataGUI_1_MAT_FINAL_FIXED.m (line 286): Input argument might be unused. Consider replacing the argument with ~ instead.\n  160. ClubDataGUI_1_MAT_FINAL_FIXED.m (line 308): Parse error at END: usage might be invalid MATLAB syntax.\n  161. ClubDataGUI_1_MAT_FINAL_FIXED.m (line 309): Parse error at END: usage might be invalid MATLAB syntax.\n  162. ClubDataGUI_1_MAT_FINAL_FIXED.m (line 318): Parse error at END: usage might be invalid MATLAB syntax.\n  163. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_1_MAT_FINAL_FIXED.m: Missing arguments validation block\n  164. ClubDataGUI_1_MAT_FIXED.m (line 1): Function might be unused.\n  165. ClubDataGUI_1_MAT_FIXED.m (line 131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  166. ClubDataGUI_1_MAT_FIXED.m (line 131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  167. ClubDataGUI_1_MAT_FIXED.m (line 133): Value assigned to variable might be unused.\n  168. ClubDataGUI_1_MAT_FIXED.m (line 137): 'xlsread' is not recommended. With appropriate code changes, use 'readtable', 'readmatrix' or 'readcell' instead.\n  169. ClubDataGUI_1_MAT_FIXED.m (line 207): Parse error at END: usage might be invalid MATLAB syntax.\n  170. ClubDataGUI_1_MAT_FIXED.m (line 209): Input argument might be unused. Consider replacing the argument with ~ instead.\n  171. ClubDataGUI_1_MAT_FIXED.m (line 211): Value assigned to variable might be unused.\n  172. ClubDataGUI_1_MAT_FIXED.m (line 282): Input argument might be unused. Consider replacing the argument with ~ instead.\n  173. ClubDataGUI_1_MAT_FIXED.m (line 290): Input argument might be unused. Consider replacing the argument with ~ instead.\n  174. ClubDataGUI_1_MAT_FIXED.m (line 296): Loop index 'i' is changed inside of a FOR loop.\n  175. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_1_MAT_FIXED.m: Missing arguments validation block\n  176. ClubDataGUI_1_fixed.m (line 143): 'xlsread' is not recommended. With appropriate code changes, use 'readtable', 'readmatrix' or 'readcell' instead.\n  177. ClubDataGUI_1_fixed.m (line 216): Input argument might be unused. Consider replacing the argument with ~ instead.\n  178. ClubDataGUI_1_fixed.m (line 218): Value assigned to variable might be unused.\n  179. ClubDataGUI_1_fixed.m (line 290): Input argument might be unused. Consider replacing the argument with ~ instead.\n  180. ClubDataGUI_1_fixed.m (line 298): Input argument might be unused. Consider replacing the argument with ~ instead.\n  181. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_1_fixed.m: Missing arguments validation block\n  182. ClubDataGUI_MAT.m (line 28): Outer loop index 'i' is set inside a nested function.\n  183. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_MAT.m: Missing arguments validation block\n  184. ClubDataGUI_MAT_CLEANED.m (line 1): Function might be unused.\n  185. ClubDataGUI_MAT_CLEANED.m (line 139): Input argument might be unused. Consider replacing the argument with ~ instead.\n  186. ClubDataGUI_MAT_CLEANED.m (line 139): Input argument might be unused. Consider replacing the argument with ~ instead.\n  187. ClubDataGUI_MAT_CLEANED.m (line 141): Value assigned to variable might be unused.\n  188. ClubDataGUI_MAT_CLEANED.m (line 142): Parse error at ELSE: usage might be invalid MATLAB syntax.\n  189. ClubDataGUI_MAT_CLEANED.m (line 146): 'xlsread' is not recommended. With appropriate code changes, use 'readtable', 'readmatrix' or 'readcell' instead.\n  190. ClubDataGUI_MAT_CLEANED.m (line 216): Parse error at END: usage might be invalid MATLAB syntax.\n  191. ClubDataGUI_MAT_CLEANED.m (line 294): Input argument might be unused. Consider replacing the argument with ~ instead.\n  192. ClubDataGUI_MAT_CLEANED.m (line 318): This keyword might not be aligned with its matching END on line 363.\n  193. ClubDataGUI_MAT_CLEANED.m (line 323): This keyword might not be aligned with its matching END on line 336.\n  194. ClubDataGUI_MAT_CLEANED.m (line 328): This keyword might not be aligned with its matching END on line 335.\n  195. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_MAT_CLEANED.m: Missing arguments validation block\n  196. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_MAT_Enhanced.m: Missing function docstring\n  197. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_MAT_Enhanced.m: Missing arguments validation block\n  198. ClubDataGUI_PROMPT.m (line 1): Function might be unused.\n  199. ClubDataGUI_PROMPT.m (line 13): This variable, apparently a structure, is changed but the value might be unused.\n  200. ClubDataGUI_PROMPT.m (line 20): Value assigned to variable might be unused.\n  201. ClubDataGUI_PROMPT.m (line 53): Add a semicolon after the statement to hide the output (in a script).\n  202. ClubDataGUI_PROMPT.m (line 61): This keyword might not be aligned with its matching END on line 88.\n  203. ClubDataGUI_PROMPT.m (line 100): 'xlsread' is not recommended. With appropriate code changes, use 'readtable', 'readmatrix' or 'readcell' instead.\n  204. ClubDataGUI_PROMPT.m (line 165): Input argument might be unused. Consider replacing the argument with ~ instead.\n  205. ClubDataGUI_PROMPT.m (line 208): Input argument might be unused. Consider replacing the argument with ~ instead.\n  206. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_PROMPT.m: Missing arguments validation block\n  207. ClubDataGUI_PROMPT_CLEANED.m (line 1): Function might be unused.\n  208. ClubDataGUI_PROMPT_CLEANED.m (line 13): This variable, apparently a structure, is changed but the value might be unused.\n  209. ClubDataGUI_PROMPT_CLEANED.m (line 20): Value assigned to variable might be unused.\n  210. ClubDataGUI_PROMPT_CLEANED.m (line 53): Add a semicolon after the statement to hide the output (in a script).\n  211. ClubDataGUI_PROMPT_CLEANED.m (line 61): This keyword might not be aligned with its matching END on line 88.\n  212. ClubDataGUI_PROMPT_CLEANED.m (line 100): 'xlsread' is not recommended. With appropriate code changes, use 'readtable', 'readmatrix' or 'readcell' instead.\n  213. ClubDataGUI_PROMPT_CLEANED.m (line 113): Variable might be used before it is defined.\n  214. ClubDataGUI_PROMPT_CLEANED.m (line 165): Input argument might be unused. Consider replacing the argument with ~ instead.\n  215. ClubDataGUI_PROMPT_CLEANED.m (line 208): Input argument might be unused. Consider replacing the argument with ~ instead.\n  216. ClubDataGUI_PROMPT_CLEANED.m (line 226): Parse error at END: usage might be invalid MATLAB syntax.\n  217. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_PROMPT_CLEANED.m: Missing arguments validation block\n  218. ClubDataGUI_PROMPT_CLEANED_FIXED.m (line 1): Function might be unused.\n  219. ClubDataGUI_PROMPT_CLEANED_FIXED.m (line 1): Unable to define local function 'ClubDataGUI_PROMPT_CLEANED_FIXED' because it has the same name as the file.\n  220. ClubDataGUI_PROMPT_CLEANED_FIXED.m (line 13): This variable, apparently a structure, is changed but the value might be unused.\n  221. ClubDataGUI_PROMPT_CLEANED_FIXED.m (line 20): Value assigned to variable might be unused.\n  222. ClubDataGUI_PROMPT_CLEANED_FIXED.m (line 51): Add a semicolon after the statement to hide the output (in a script).\n  223. ClubDataGUI_PROMPT_CLEANED_FIXED.m (line 59): This keyword might not be aligned with its matching END on line 85.\n  224. ClubDataGUI_PROMPT_CLEANED_FIXED.m (line 97): 'xlsread' is not recommended. With appropriate code changes, use 'readtable', 'readmatrix' or 'readcell' instead.\n  225. ClubDataGUI_PROMPT_CLEANED_FIXED.m (line 160): Input argument might be unused. Consider replacing the argument with ~ instead.\n  226. ClubDataGUI_PROMPT_CLEANED_FIXED.m (line 203): Input argument might be unused. Consider replacing the argument with ~ instead.\n  227. ClubDataGUI_PROMPT_CLEANED_FIXED.m (line 219): Parse error at END: usage might be invalid MATLAB syntax.\n  228. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_PROMPT_CLEANED_FIXED.m: Missing arguments validation block\n  229. ClubDataGUI_PROMPT_FINAL.m (line 1): Function might be unused.\n  230. ClubDataGUI_PROMPT_FINAL.m (line 13): This variable, apparently a structure, is changed but the value might be unused.\n  231. ClubDataGUI_PROMPT_FINAL.m (line 20): Value assigned to variable might be unused.\n  232. ClubDataGUI_PROMPT_FINAL.m (line 51): Add a semicolon after the statement to hide the output (in a script).\n  233. ClubDataGUI_PROMPT_FINAL.m (line 59): This keyword might not be aligned with its matching END on line 85.\n  234. ClubDataGUI_PROMPT_FINAL.m (line 97): 'xlsread' is not recommended. With appropriate code changes, use 'readtable', 'readmatrix' or 'readcell' instead.\n  235. ClubDataGUI_PROMPT_FINAL.m (line 160): Input argument might be unused. Consider replacing the argument with ~ instead.\n  236. ClubDataGUI_PROMPT_FINAL.m (line 203): Input argument might be unused. Consider replacing the argument with ~ instead.\n  237. ClubDataGUI_PROMPT_FINAL.m (line 219): Parse error at END: usage might be invalid MATLAB syntax.\n  238. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_PROMPT_FINAL.m: Missing arguments validation block\n  239. ClubDataGUI_PROMPT_FINAL_NESTED.m (line 1): Function might be unused.\n  240. ClubDataGUI_PROMPT_FINAL_NESTED.m (line 3): Function might be unused.\n  241. ClubDataGUI_PROMPT_FINAL_NESTED.m (line 15): This variable, apparently a structure, is changed but the value might be unused.\n  242. ClubDataGUI_PROMPT_FINAL_NESTED.m (line 22): Value assigned to variable might be unused.\n  243. ClubDataGUI_PROMPT_FINAL_NESTED.m (line 26): Confusing usage of name 'defaultFile' on lines 26 and 22. Initialize 'defaultFile' before line 26 to make it a shared variable or rename 'defaultFile' on line 22 to disambiguate.\n  244. ClubDataGUI_PROMPT_FINAL_NESTED.m (line 31): Variable is set, but might be unused.\n  245. ClubDataGUI_PROMPT_FINAL_NESTED.m (line 53): Add a semicolon after the statement to hide the output (in a function).\n  246. ClubDataGUI_PROMPT_FINAL_NESTED.m (line 58): Confusing usage of name 'COL' on lines 58 and 7. Initialize 'COL' before line 58 to make it a shared variable or rename 'COL' on line 7 to disambiguate.\n  247. ClubDataGUI_PROMPT_FINAL_NESTED.m (line 61): This keyword might not be aligned with its matching END on line 87.\n  248. ClubDataGUI_PROMPT_FINAL_NESTED.m (line 61): Outer loop index 'i' is set inside a nested function.\n  249. ClubDataGUI_PROMPT_FINAL_NESTED.m (line 100): 'xlsread' is not recommended. With appropriate code changes, use 'readtable', 'readmatrix' or 'readcell' instead.\n  250. ClubDataGUI_PROMPT_FINAL_NESTED.m (line 164): Input argument might be unused. Consider replacing the argument with ~ instead.\n  251. ClubDataGUI_PROMPT_FINAL_NESTED.m (line 209): Input argument might be unused. Consider replacing the argument with ~ instead.\n  252. ClubDataGUI_PROMPT_FINAL_NESTED.m (line 227): Parse error at END: usage might be invalid MATLAB syntax.\n  253. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_PROMPT_FINAL_NESTED.m: Missing function docstring\n  254. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_PROMPT_FINAL_NESTED.m: Missing arguments validation block\n  255. ClubDataGUI_PROMPT_FIXED.m (line 1): Function might be unused.\n  256. ClubDataGUI_PROMPT_FIXED.m (line 13): This variable, apparently a structure, is changed but the value might be unused.\n  257. ClubDataGUI_PROMPT_FIXED.m (line 20): Value assigned to variable might be unused.\n  258. ClubDataGUI_PROMPT_FIXED.m (line 53): Add a semicolon after the statement to hide the output (in a script).\n  259. ClubDataGUI_PROMPT_FIXED.m (line 61): This keyword might not be aligned with its matching END on line 88.\n  260. ClubDataGUI_PROMPT_FIXED.m (line 100): 'xlsread' is not recommended. With appropriate code changes, use 'readtable', 'readmatrix' or 'readcell' instead.\n  261. ClubDataGUI_PROMPT_FIXED.m (line 113): Variable might be used before it is defined.\n  262. ClubDataGUI_PROMPT_FIXED.m (line 165): Input argument might be unused. Consider replacing the argument with ~ instead.\n  263. ClubDataGUI_PROMPT_FIXED.m (line 208): Input argument might be unused. Consider replacing the argument with ~ instead.\n  264. ClubDataGUI_PROMPT_FIXED.m (line 223): Input argument might be unused. Consider replacing the argument with ~ instead.\n  265. ClubDataGUI_PROMPT_FIXED.m (line 223): A '(' might be missing a closing ')', causing invalid syntax at ','.\n  266. ClubDataGUI_PROMPT_FIXED.m (line 223): Add a semicolon after the statement to hide the output (in a function).\n  267. ClubDataGUI_PROMPT_FIXED.m (line 223): Use a newline, semicolon, or comma before this statement.\n  268. ClubDataGUI_PROMPT_FIXED.m (line 223): Parse error at ')': usage might be invalid MATLAB syntax.\n  269. ClubDataGUI_PROMPT_FIXED.m (line 227): Parse error at END: usage might be invalid MATLAB syntax.\n  270. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_PROMPT_FIXED.m: Missing arguments validation block\n  271. ClubDataGUI_Working.m (line 1): Function name 'ClubDataGUI_PROMPT_FINAL' is known to MATLAB by its file name: 'ClubDataGUI_Working'.\n  272. ClubDataGUI_Working.m (line 121): 'xlsread' is not recommended. With appropriate code changes, use 'readtable', 'readmatrix' or 'readcell' instead.\n  273. ClubDataGUI_Working.m (line 195): Input argument might be unused. Consider replacing the argument with ~ instead.\n  274. ClubDataGUI_Working.m (line 197): Value assigned to variable might be unused.\n  275. ClubDataGUI_Working.m (line 257): Input argument might be unused. Consider replacing the argument with ~ instead.\n  276. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_Working.m: Missing arguments validation block\n  277. ClubDataGUI_v2_backup.m (line 4): Function name 'ClubDataGUI_v2' is known to MATLAB by its file name: 'ClubDataGUI_v2_backup'.\n  278. ClubDataGUI_v2_backup.m (line 8): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  279. ClubDataGUI_v2_backup.m (line 9): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  280. ClubDataGUI_v2_backup.m (line 10): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  281. ClubDataGUI_v2_backup.m (line 219): TRY statement should have a CATCH statement to check for unexpected errors.\n  282. ClubDataGUI_v2_backup.m (line 219): Extra comma is unnecessary.\n  283. ClubDataGUI_v2_backup.m (line 277): Value assigned to variable might be unused.\n  284. ClubDataGUI_v2_backup.m (line 341): Function might be unused.\n  285. ClubDataGUI_v2_backup.m (line 347): Function might be unused.\n  286. ClubDataGUI_v2_backup.m (line 357): Function might be unused.\n  287. ClubDataGUI_v2_backup.m (line 366): Function might be unused.\n  288. ClubDataGUI_v2_backup.m (line 382): Function might be unused.\n  289. ClubDataGUI_v2_backup.m (line 387): Outer loop index 'i' is set inside a nested function.\n  290. ClubDataGUI_v2_backup.m (line 389): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  291. ClubDataGUI_v2_backup.m (line 390): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  292. ClubDataGUI_v2_backup.m (line 400): Function might be unused.\n  293. ClubDataGUI_v2_backup.m (line 406): Function might be unused.\n  294. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\ClubDataGUI_v2_backup.m: Missing arguments validation block\n  295. Copy_2_of_ClubDataGUI_v2.m (line 4): Function name 'ClubDataGUI_v2' is known to MATLAB by its file name: 'Copy_2_of_ClubDataGUI_v2'.\n  296. Copy_2_of_ClubDataGUI_v2.m (line 8): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  297. Copy_2_of_ClubDataGUI_v2.m (line 9): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  298. Copy_2_of_ClubDataGUI_v2.m (line 10): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  299. Copy_2_of_ClubDataGUI_v2.m (line 219): TRY statement should have a CATCH statement to check for unexpected errors.\n  300. Copy_2_of_ClubDataGUI_v2.m (line 219): Extra comma is unnecessary.\n  301. Copy_2_of_ClubDataGUI_v2.m (line 277): Value assigned to variable might be unused.\n  302. Copy_2_of_ClubDataGUI_v2.m (line 341): Function might be unused.\n  303. Copy_2_of_ClubDataGUI_v2.m (line 347): Function might be unused.\n  304. Copy_2_of_ClubDataGUI_v2.m (line 357): Function might be unused.\n  305. Copy_2_of_ClubDataGUI_v2.m (line 366): Function might be unused.\n  306. Copy_2_of_ClubDataGUI_v2.m (line 382): Function might be unused.\n  307. Copy_2_of_ClubDataGUI_v2.m (line 387): Outer loop index 'i' is set inside a nested function.\n  308. Copy_2_of_ClubDataGUI_v2.m (line 389): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  309. Copy_2_of_ClubDataGUI_v2.m (line 390): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  310. Copy_2_of_ClubDataGUI_v2.m (line 400): Function might be unused.\n  311. Copy_2_of_ClubDataGUI_v2.m (line 406): Function might be unused.\n  312. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\Copy_2_of_ClubDataGUI_v2.m: Missing arguments validation block\n  313. Copy_3_of_ClubDataGUI_v2.m (line 4): Function name 'ClubDataGUI_v2' is known to MATLAB by its file name: 'Copy_3_of_ClubDataGUI_v2'.\n  314. Copy_3_of_ClubDataGUI_v2.m (line 8): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  315. Copy_3_of_ClubDataGUI_v2.m (line 9): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  316. Copy_3_of_ClubDataGUI_v2.m (line 10): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  317. Copy_3_of_ClubDataGUI_v2.m (line 219): TRY statement should have a CATCH statement to check for unexpected errors.\n  318. Copy_3_of_ClubDataGUI_v2.m (line 219): Extra comma is unnecessary.\n  319. Copy_3_of_ClubDataGUI_v2.m (line 277): Value assigned to variable might be unused.\n  320. Copy_3_of_ClubDataGUI_v2.m (line 341): Function might be unused.\n  321. Copy_3_of_ClubDataGUI_v2.m (line 347): Function might be unused.\n  322. Copy_3_of_ClubDataGUI_v2.m (line 357): Function might be unused.\n  323. Copy_3_of_ClubDataGUI_v2.m (line 366): Function might be unused.\n  324. Copy_3_of_ClubDataGUI_v2.m (line 382): Function might be unused.\n  325. Copy_3_of_ClubDataGUI_v2.m (line 387): Outer loop index 'i' is set inside a nested function.\n  326. Copy_3_of_ClubDataGUI_v2.m (line 389): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  327. Copy_3_of_ClubDataGUI_v2.m (line 390): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  328. Copy_3_of_ClubDataGUI_v2.m (line 400): Function might be unused.\n  329. Copy_3_of_ClubDataGUI_v2.m (line 406): Function might be unused.\n  330. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\Copy_3_of_ClubDataGUI_v2.m: Missing arguments validation block\n  331. Copy_of_ClubDataGUI_v2.m (line 4): Function name 'ClubDataGUI_v2' is known to MATLAB by its file name: 'Copy_of_ClubDataGUI_v2'.\n  332. Copy_of_ClubDataGUI_v2.m (line 8): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  333. Copy_of_ClubDataGUI_v2.m (line 9): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  334. Copy_of_ClubDataGUI_v2.m (line 10): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  335. Copy_of_ClubDataGUI_v2.m (line 219): TRY statement should have a CATCH statement to check for unexpected errors.\n  336. Copy_of_ClubDataGUI_v2.m (line 219): Extra comma is unnecessary.\n  337. Copy_of_ClubDataGUI_v2.m (line 277): Value assigned to variable might be unused.\n  338. Copy_of_ClubDataGUI_v2.m (line 341): Function might be unused.\n  339. Copy_of_ClubDataGUI_v2.m (line 347): Function might be unused.\n  340. Copy_of_ClubDataGUI_v2.m (line 357): Function might be unused.\n  341. Copy_of_ClubDataGUI_v2.m (line 366): Function might be unused.\n  342. Copy_of_ClubDataGUI_v2.m (line 382): Function might be unused.\n  343. Copy_of_ClubDataGUI_v2.m (line 387): Outer loop index 'i' is set inside a nested function.\n  344. Copy_of_ClubDataGUI_v2.m (line 389): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  345. Copy_of_ClubDataGUI_v2.m (line 390): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  346. Copy_of_ClubDataGUI_v2.m (line 400): Function might be unused.\n  347. Copy_of_ClubDataGUI_v2.m (line 406): Function might be unused.\n  348. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\Copy_of_ClubDataGUI_v2.m: Missing arguments validation block\n  349. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Data\\Data from Rob Neal\\Old Revs\\animateTW_WiffleClub.m: Missing arguments validation block\n  350. compareInputFilesorModelWorkspace.m (line 27): Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.\n  351. compareInputFilesorModelWorkspace.m (line 44): Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.\n  352. compareInputFilesorModelWorkspace.m (line 61): Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.\n  353. compareInputFilesorModelWorkspace.m (line 78): Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.\n  354. compareInputFilesorModelWorkspace.m (line 117): Value assigned to variable might be unused.\n  355. compareInputFilesorModelWorkspace.m (line 125): Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.\n  356. compareInputFilesorModelWorkspace.m (line 125): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  357. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Model\\Model Functions\\readJointStateTargets_GolfSwing3D.m: Missing function docstring\n  358. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Model\\Model Functions\\readJointStateTargets_GolfSwing3D.m: Missing arguments validation block\n  359. setJointPriorities_GolfSwing3D.m (line 1): Function name 'setJointStateTargets_GolfSwing3D' is known to MATLAB by its file name: 'setJointPriorities_GolfSwing3D'.\n  360. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Model\\Model Functions\\setJointPriorities_GolfSwing3D.m: Missing arguments validation block\n  361. MASTER_SCRIPT_ZTCF_ZVCF_PLOT_GENERATOR_3D.m (line 128): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  362. MASTER_SCRIPT_ZTCF_ZVCF_PLOT_GENERATOR_3D.m (line 234): Value assigned to variable might be unused.\n  363. runParallelSimulations_14cores.m (line 179): The entire array or structure 'config' is a broadcast variable. This might result in unnecessary communication overhead.\n  364. runParallelSimulations_14cores.m (line 280): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  365. runParallelSimulations_14cores.m (line 280): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  366. runParallelSimulations_14cores.m (line 392): Value assigned to variable might be unused.\n  367. runParallelSimulations_14cores.m (line 410): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  368. runParallelSimulations_14cores.m (line 474): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  369. runParallelSimulations_14cores.m (line 538): Value assigned to variable might be unused.\n  370. runParallelSimulations_14cores.m (line 543): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  371. runParallelSimulations_14cores.m (line 589): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  372. runParallelSimulations_14cores.m (line 634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  373. runParallelSimulations_14cores.m (line 668): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  374. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\runParallelSimulations_14cores.m: Missing arguments validation block\n  375. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  376. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  377. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  378. Dataset_GUI.m (line 313): Function might be unused.\n  379. Dataset_GUI.m (line 404): Value assigned to variable might be unused.\n  380. Dataset_GUI.m (line 626): Input argument might be unused. Consider replacing the argument with ~ instead.\n  381. Dataset_GUI.m (line 650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  382. Dataset_GUI.m (line 662): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  383. Dataset_GUI.m (line 686): Value assigned to variable might be unused.\n  384. Dataset_GUI.m (line 938): Value assigned to variable might be unused.\n  385. Dataset_GUI.m (line 959): Value assigned to variable might be unused.\n  386. Dataset_GUI.m (line 1133): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  387. Dataset_GUI.m (line 1133): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  388. Dataset_GUI.m (line 1166): Input argument might be unused. Consider replacing the argument with ~ instead.\n  389. Dataset_GUI.m (line 1247): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  390. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  391. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  392. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  393. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  394. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  395. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  396. Dataset_GUI.m (line 1520): Input argument might be unused. Consider replacing the argument with ~ instead.\n  397. Dataset_GUI.m (line 1557): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  398. Dataset_GUI.m (line 1557): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  399. Dataset_GUI.m (line 1717): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  400. Dataset_GUI.m (line 1717): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  401. Dataset_GUI.m (line 1821): Value assigned to variable might be unused.\n  402. Dataset_GUI.m (line 1927): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  403. Dataset_GUI.m (line 1927): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  404. Dataset_GUI.m (line 2329): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  405. Dataset_GUI.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  406. Dataset_GUI.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  407. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  408. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  409. Dataset_GUI.m (line 2594): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  410. Dataset_GUI.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  411. Dataset_GUI.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  412. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  413. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  414. Dataset_GUI.m (line 2630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  415. Dataset_GUI.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  416. Dataset_GUI.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  417. Dataset_GUI.m (line 2665): Value assigned to variable might be unused.\n  418. Dataset_GUI.m (line 2690): Input argument might be unused. Consider replacing the argument with ~ instead.\n  419. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  420. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  421. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  422. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  423. Dataset_GUI.m (line 2864): Input argument might be unused. Consider replacing the argument with ~ instead.\n  424. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  425. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  426. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  427. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  428. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  429. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  430. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  431. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  432. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  433. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  434. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  435. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  436. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  437. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  438. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  439. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  440. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  441. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  442. Dataset_GUI.m (line 3168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  443. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  444. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  445. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  446. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  447. Dataset_GUI.m (line 3199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  448. Dataset_GUI.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  449. Dataset_GUI.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  450. Dataset_GUI.m (line 3212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  451. Dataset_GUI.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  452. Dataset_GUI.m (line 3218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  453. Dataset_GUI.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  454. Dataset_GUI.m (line 3259): Value assigned to variable might be unused.\n  455. Dataset_GUI.m (line 3495): Value assigned to variable might be unused.\n  456. Dataset_GUI.m (line 3682): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  457. Dataset_GUI.m (line 3812): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  458. Dataset_GUI.m (line 3812): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  459. Dataset_GUI.m (line 4045): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  460. Dataset_GUI.m (line 4045): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  461. Dataset_GUI.m (line 4080): Function might be unused.\n  462. Dataset_GUI.m (line 4131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  463. Dataset_GUI.m (line 4213): Input argument might be unused. Consider replacing the argument with ~ instead.\n  464. Dataset_GUI.m (line 4330): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  465. Dataset_GUI.m (line 4400): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  466. Dataset_GUI.m (line 4400): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  467. Dataset_GUI.m (line 4753): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  468. Dataset_GUI.m (line 5044): Input argument might be unused. Consider replacing the argument with ~ instead.\n  469. Dataset_GUI.m (line 5047): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  470. Dataset_GUI.m (line 5047): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  471. Dataset_GUI.m (line 5142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  472. Dataset_GUI.m (line 5292): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  473. Dataset_GUI.m (line 5292): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  474. Dataset_GUI.m (line 5324): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  475. Dataset_GUI.m (line 5324): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  476. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Dataset_GUI.m: Missing arguments validation block\n  477. cleanup_matlab_path.m (line 32): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  478. exportCodeIssues.m (line 84): Value assigned to variable might be unused.\n  479. exportCodeIssues.m (line 118): No Code Analyzer check is found for this check ID.\n  480. exportCodeIssues.m (line 125): string('...') is not recommended. Use \"...\" instead.\n  481. exportCodeIssues.m (line 240): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  482. exportCodeIssues.m (line 282): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  483. exportCodeIssues.m (line 366): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  484. exportCodeIssues.m (line 371): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  485. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\exportCodeIssues.m: Missing arguments validation block\n  486. Data_GUI_TenThousandDataSet.m (line 45): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_TenThousandDataSet'.\n  487. Data_GUI_TenThousandDataSet.m (line 280): Value assigned to variable might be unused.\n  488. Data_GUI_TenThousandDataSet.m (line 380): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  489. Data_GUI_TenThousandDataSet.m (line 380): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  490. Data_GUI_TenThousandDataSet.m (line 781): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  491. Data_GUI_TenThousandDataSet.m (line 782): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  492. Data_GUI_TenThousandDataSet.m (line 783): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  493. Data_GUI_TenThousandDataSet.m (line 784): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  494. Data_GUI_TenThousandDataSet.m (line 785): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  495. Data_GUI_TenThousandDataSet.m (line 801): Function might be unused.\n  496. Data_GUI_TenThousandDataSet.m (line 1026): Function might be unused.\n  497. Data_GUI_TenThousandDataSet.m (line 1041): Value assigned to variable might be unused.\n  498. Data_GUI_TenThousandDataSet.m (line 1063): Function might be unused.\n  499. Data_GUI_TenThousandDataSet.m (line 1240): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  500. Data_GUI_TenThousandDataSet.m (line 1241): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  501. Data_GUI_TenThousandDataSet.m (line 1242): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  502. Data_GUI_TenThousandDataSet.m (line 1243): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  503. Data_GUI_TenThousandDataSet.m (line 1244): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  504. Data_GUI_TenThousandDataSet.m (line 1274): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  505. Data_GUI_TenThousandDataSet.m (line 1275): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  506. Data_GUI_TenThousandDataSet.m (line 1276): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  507. Data_GUI_TenThousandDataSet.m (line 1296): Function might be unused.\n  508. Data_GUI_TenThousandDataSet.m (line 1337): Function might be unused.\n  509. Data_GUI_TenThousandDataSet.m (line 1413): Input argument might be unused. Consider replacing the argument with ~ instead.\n  510. Data_GUI_TenThousandDataSet.m (line 1483): Value assigned to variable might be unused.\n  511. Data_GUI_TenThousandDataSet.m (line 1570): Input argument might be unused. Consider replacing the argument with ~ instead.\n  512. Data_GUI_TenThousandDataSet.m (line 1570): Input argument might be unused. Consider replacing the argument with ~ instead.\n  513. Data_GUI_TenThousandDataSet.m (line 1628): Input argument might be unused. Consider replacing the argument with ~ instead.\n  514. Data_GUI_TenThousandDataSet.m (line 1628): Input argument might be unused. Consider replacing the argument with ~ instead.\n  515. Data_GUI_TenThousandDataSet.m (line 1638): Input argument might be unused. Consider replacing the argument with ~ instead.\n  516. Data_GUI_TenThousandDataSet.m (line 1638): Input argument might be unused. Consider replacing the argument with ~ instead.\n  517. Data_GUI_TenThousandDataSet.m (line 1651): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  518. Data_GUI_TenThousandDataSet.m (line 1652): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  519. Data_GUI_TenThousandDataSet.m (line 1653): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  520. Data_GUI_TenThousandDataSet.m (line 1654): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  521. Data_GUI_TenThousandDataSet.m (line 1683): Input argument might be unused. Consider replacing the argument with ~ instead.\n  522. Data_GUI_TenThousandDataSet.m (line 1683): Input argument might be unused. Consider replacing the argument with ~ instead.\n  523. Data_GUI_TenThousandDataSet.m (line 1696): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  524. Data_GUI_TenThousandDataSet.m (line 1697): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  525. Data_GUI_TenThousandDataSet.m (line 1698): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  526. Data_GUI_TenThousandDataSet.m (line 1709): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  527. Data_GUI_TenThousandDataSet.m (line 1710): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  528. Data_GUI_TenThousandDataSet.m (line 1715): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  529. Data_GUI_TenThousandDataSet.m (line 1716): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  530. Data_GUI_TenThousandDataSet.m (line 1755): Input argument might be unused. Consider replacing the argument with ~ instead.\n  531. Data_GUI_TenThousandDataSet.m (line 1755): Input argument might be unused. Consider replacing the argument with ~ instead.\n  532. Data_GUI_TenThousandDataSet.m (line 1768): Input argument might be unused. Consider replacing the argument with ~ instead.\n  533. Data_GUI_TenThousandDataSet.m (line 1768): Input argument might be unused. Consider replacing the argument with ~ instead.\n  534. Data_GUI_TenThousandDataSet.m (line 1781): Input argument might be unused. Consider replacing the argument with ~ instead.\n  535. Data_GUI_TenThousandDataSet.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  536. Data_GUI_TenThousandDataSet.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  537. Data_GUI_TenThousandDataSet.m (line 1849): Input argument might be unused. Consider replacing the argument with ~ instead.\n  538. Data_GUI_TenThousandDataSet.m (line 1849): Input argument might be unused. Consider replacing the argument with ~ instead.\n  539. Data_GUI_TenThousandDataSet.m (line 1899): Input argument might be unused. Consider replacing the argument with ~ instead.\n  540. Data_GUI_TenThousandDataSet.m (line 1899): Input argument might be unused. Consider replacing the argument with ~ instead.\n  541. Data_GUI_TenThousandDataSet.m (line 1946): Input argument might be unused. Consider replacing the argument with ~ instead.\n  542. Data_GUI_TenThousandDataSet.m (line 1946): Input argument might be unused. Consider replacing the argument with ~ instead.\n  543. Data_GUI_TenThousandDataSet.m (line 1976): Input argument might be unused. Consider replacing the argument with ~ instead.\n  544. Data_GUI_TenThousandDataSet.m (line 1976): Input argument might be unused. Consider replacing the argument with ~ instead.\n  545. Data_GUI_TenThousandDataSet.m (line 1998): Input argument might be unused. Consider replacing the argument with ~ instead.\n  546. Data_GUI_TenThousandDataSet.m (line 1998): Input argument might be unused. Consider replacing the argument with ~ instead.\n  547. Data_GUI_TenThousandDataSet.m (line 2019): Input argument might be unused. Consider replacing the argument with ~ instead.\n  548. Data_GUI_TenThousandDataSet.m (line 2019): Input argument might be unused. Consider replacing the argument with ~ instead.\n  549. Data_GUI_TenThousandDataSet.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  550. Data_GUI_TenThousandDataSet.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  551. Data_GUI_TenThousandDataSet.m (line 2068): Input argument might be unused. Consider replacing the argument with ~ instead.\n  552. Data_GUI_TenThousandDataSet.m (line 2068): Input argument might be unused. Consider replacing the argument with ~ instead.\n  553. Data_GUI_TenThousandDataSet.m (line 2083): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  554. Data_GUI_TenThousandDataSet.m (line 2094): Input argument might be unused. Consider replacing the argument with ~ instead.\n  555. Data_GUI_TenThousandDataSet.m (line 2094): Input argument might be unused. Consider replacing the argument with ~ instead.\n  556. Data_GUI_TenThousandDataSet.m (line 2099): Function might be unused.\n  557. Data_GUI_TenThousandDataSet.m (line 2099): Input argument might be unused. Consider replacing the argument with ~ instead.\n  558. Data_GUI_TenThousandDataSet.m (line 2099): Input argument might be unused. Consider replacing the argument with ~ instead.\n  559. Data_GUI_TenThousandDataSet.m (line 2112): Input argument might be unused. Consider replacing the argument with ~ instead.\n  560. Data_GUI_TenThousandDataSet.m (line 2112): Input argument might be unused. Consider replacing the argument with ~ instead.\n  561. Data_GUI_TenThousandDataSet.m (line 2126): Input argument might be unused. Consider replacing the argument with ~ instead.\n  562. Data_GUI_TenThousandDataSet.m (line 2126): Input argument might be unused. Consider replacing the argument with ~ instead.\n  563. Data_GUI_TenThousandDataSet.m (line 2327): Value assigned to variable might be unused.\n  564. Data_GUI_TenThousandDataSet.m (line 2386): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  565. Data_GUI_TenThousandDataSet.m (line 2530): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  566. Data_GUI_TenThousandDataSet.m (line 2669): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  567. Data_GUI_TenThousandDataSet.m (line 2669): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  568. Data_GUI_TenThousandDataSet.m (line 2791): Function might be unused.\n  569. Data_GUI_TenThousandDataSet.m (line 2968): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  570. Data_GUI_TenThousandDataSet.m (line 2968): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  571. Data_GUI_TenThousandDataSet.m (line 3000): Function might be unused.\n  572. Data_GUI_TenThousandDataSet.m (line 3151): Function might be unused.\n  573. Data_GUI_TenThousandDataSet.m (line 3229): Function might be unused.\n  574. Data_GUI_TenThousandDataSet.m (line 3244): This keyword might not be aligned with its matching END on line 3255.\n  575. Data_GUI_TenThousandDataSet.m (line 3257): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  576. Data_GUI_TenThousandDataSet.m (line 3473): This keyword might not be aligned with its matching END on line 3475.\n  577. Data_GUI_TenThousandDataSet.m (line 3577): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  578. Data_GUI_TenThousandDataSet.m (line 3612): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  579. Data_GUI_TenThousandDataSet.m (line 3646): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  580. Data_GUI_TenThousandDataSet.m (line 3660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  581. Data_GUI_TenThousandDataSet.m (line 3668): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  582. Data_GUI_TenThousandDataSet.m (line 3668): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  583. Data_GUI_TenThousandDataSet.m (line 3878): Input argument might be unused. Consider replacing the argument with ~ instead.\n  584. Data_GUI_TenThousandDataSet.m (line 3918): Function might be unused.\n  585. Data_GUI_TenThousandDataSet.m (line 3950): Function might be unused.\n  586. Data_GUI_TenThousandDataSet.m (line 3962): Value assigned to variable might be unused.\n  587. Data_GUI_TenThousandDataSet.m (line 3972): Value assigned to variable might be unused.\n  588. Data_GUI_TenThousandDataSet.m (line 3977): Value assigned to variable might be unused.\n  589. Data_GUI_TenThousandDataSet.m (line 3982): Value assigned to variable might be unused.\n  590. Data_GUI_TenThousandDataSet.m (line 3999): Value assigned to variable might be unused.\n  591. Data_GUI_TenThousandDataSet.m (line 4108): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  592. Data_GUI_TenThousandDataSet.m (line 4109): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  593. Data_GUI_TenThousandDataSet.m (line 4116): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  594. Data_GUI_TenThousandDataSet.m (line 4117): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  595. Data_GUI_TenThousandDataSet.m (line 4130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  596. Data_GUI_TenThousandDataSet.m (line 4132): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  597. Data_GUI_TenThousandDataSet.m (line 4154): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  598. Data_GUI_TenThousandDataSet.m (line 4155): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  599. Data_GUI_TenThousandDataSet.m (line 4175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  600. Data_GUI_TenThousandDataSet.m (line 4176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  601. Data_GUI_TenThousandDataSet.m (line 4188): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  602. Data_GUI_TenThousandDataSet.m (line 4189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  603. Data_GUI_TenThousandDataSet.m (line 4207): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  604. Data_GUI_TenThousandDataSet.m (line 4208): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  605. Data_GUI_TenThousandDataSet.m (line 4252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  606. Data_GUI_TenThousandDataSet.m (line 4253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  607. Data_GUI_TenThousandDataSet.m (line 4260): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  608. Data_GUI_TenThousandDataSet.m (line 4261): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  609. Data_GUI_TenThousandDataSet.m (line 4280): Function might be unused.\n  610. Data_GUI_TenThousandDataSet.m (line 4338): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  611. Data_GUI_TenThousandDataSet.m (line 4339): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  612. Data_GUI_TenThousandDataSet.m (line 4349): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  613. Data_GUI_TenThousandDataSet.m (line 4350): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  614. Data_GUI_TenThousandDataSet.m (line 4369): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  615. Data_GUI_TenThousandDataSet.m (line 4370): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  616. Data_GUI_TenThousandDataSet.m (line 4423): Function might be unused.\n  617. Data_GUI_TenThousandDataSet.m (line 4470): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  618. Data_GUI_TenThousandDataSet.m (line 4535): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  619. Data_GUI_TenThousandDataSet.m (line 4536): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  620. Data_GUI_TenThousandDataSet.m (line 4584): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  621. Data_GUI_TenThousandDataSet.m (line 4593): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  622. Data_GUI_TenThousandDataSet.m (line 4598): This statement (and possibly following ones) cannot be reached.\n  623. Data_GUI_TenThousandDataSet.m (line 4600): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  624. Data_GUI_TenThousandDataSet.m (line 4607): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  625. Data_GUI_TenThousandDataSet.m (line 4637): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  626. Data_GUI_TenThousandDataSet.m (line 4677): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  627. Data_GUI_TenThousandDataSet.m (line 4700): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  628. Data_GUI_TenThousandDataSet.m (line 4711): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  629. Data_GUI_TenThousandDataSet.m (line 4723): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  630. Data_GUI_TenThousandDataSet.m (line 4736): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  631. Data_GUI_TenThousandDataSet.m (line 4830): Function might be unused.\n  632. Data_GUI_TenThousandDataSet.m (line 4836): Value assigned to variable might be unused.\n  633. Data_GUI_TenThousandDataSet.m (line 4864): Value assigned to variable might be unused.\n  634. Data_GUI_TenThousandDataSet.m (line 4889): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  635. Data_GUI_TenThousandDataSet.m (line 4911): Value assigned to variable might be unused.\n  636. Data_GUI_TenThousandDataSet.m (line 4945): Value assigned to variable might be unused.\n  637. Data_GUI_TenThousandDataSet.m (line 4974): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  638. Data_GUI_TenThousandDataSet.m (line 5007): Function might be unused.\n  639. Data_GUI_TenThousandDataSet.m (line 5051): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  640. Data_GUI_TenThousandDataSet.m (line 5052): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  641. Data_GUI_TenThousandDataSet.m (line 5075): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  642. Data_GUI_TenThousandDataSet.m (line 5076): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  643. Data_GUI_TenThousandDataSet.m (line 5096): Function might be unused.\n  644. Data_GUI_TenThousandDataSet.m (line 5173): Function might be unused.\n  645. Data_GUI_TenThousandDataSet.m (line 5190): Value assigned to variable might be unused.\n  646. Data_GUI_TenThousandDataSet.m (line 5248): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  647. Data_GUI_TenThousandDataSet.m (line 5249): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  648. Data_GUI_TenThousandDataSet.m (line 5253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  649. Data_GUI_TenThousandDataSet.m (line 5254): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  650. Data_GUI_TenThousandDataSet.m (line 5272): Function might be unused.\n  651. Data_GUI_TenThousandDataSet.m (line 5330): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  652. Data_GUI_TenThousandDataSet.m (line 5330): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  653. Data_GUI_TenThousandDataSet.m (line 5362): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  654. Data_GUI_TenThousandDataSet.m (line 5362): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  655. Data_GUI_TenThousandDataSet.m (line 5525): Function might be unused.\n  656. Data_GUI_TenThousandDataSet.m (line 5555): Function might be unused.\n  657. Data_GUI_TenThousandDataSet.m (line 5646): Function might be unused.\n  658. Data_GUI_TenThousandDataSet.m (line 5684): Input argument might be unused. Consider replacing the argument with ~ instead.\n  659. Data_GUI_TenThousandDataSet.m (line 5715): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  660. Data_GUI_TenThousandDataSet.m (line 5751): Input argument might be unused. Consider replacing the argument with ~ instead.\n  661. Data_GUI_TenThousandDataSet.m (line 5753): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  662. Data_GUI_TenThousandDataSet.m (line 5753): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  663. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Data_GUI_TenThousandDataSet.m: Missing arguments validation block\n  664. Dataset_GUI_backup.m (line 1): Function name 'Dataset_GUI' is known to MATLAB by its file name: 'Dataset_GUI_backup'.\n  665. Dataset_GUI_backup.m (line 313): Function might be unused.\n  666. Dataset_GUI_backup.m (line 404): Value assigned to variable might be unused.\n  667. Dataset_GUI_backup.m (line 626): Input argument might be unused. Consider replacing the argument with ~ instead.\n  668. Dataset_GUI_backup.m (line 650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  669. Dataset_GUI_backup.m (line 662): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  670. Dataset_GUI_backup.m (line 686): Value assigned to variable might be unused.\n  671. Dataset_GUI_backup.m (line 938): Value assigned to variable might be unused.\n  672. Dataset_GUI_backup.m (line 959): Value assigned to variable might be unused.\n  673. Dataset_GUI_backup.m (line 1133): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  674. Dataset_GUI_backup.m (line 1133): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  675. Dataset_GUI_backup.m (line 1166): Input argument might be unused. Consider replacing the argument with ~ instead.\n  676. Dataset_GUI_backup.m (line 1247): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  677. Dataset_GUI_backup.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  678. Dataset_GUI_backup.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  679. Dataset_GUI_backup.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  680. Dataset_GUI_backup.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  681. Dataset_GUI_backup.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  682. Dataset_GUI_backup.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  683. Dataset_GUI_backup.m (line 1520): Input argument might be unused. Consider replacing the argument with ~ instead.\n  684. Dataset_GUI_backup.m (line 1557): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  685. Dataset_GUI_backup.m (line 1557): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  686. Dataset_GUI_backup.m (line 1717): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  687. Dataset_GUI_backup.m (line 1717): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  688. Dataset_GUI_backup.m (line 1821): Value assigned to variable might be unused.\n  689. Dataset_GUI_backup.m (line 1927): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  690. Dataset_GUI_backup.m (line 1927): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  691. Dataset_GUI_backup.m (line 2329): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  692. Dataset_GUI_backup.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  693. Dataset_GUI_backup.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  694. Dataset_GUI_backup.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  695. Dataset_GUI_backup.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  696. Dataset_GUI_backup.m (line 2594): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  697. Dataset_GUI_backup.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  698. Dataset_GUI_backup.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  699. Dataset_GUI_backup.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  700. Dataset_GUI_backup.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  701. Dataset_GUI_backup.m (line 2630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  702. Dataset_GUI_backup.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  703. Dataset_GUI_backup.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  704. Dataset_GUI_backup.m (line 2665): Value assigned to variable might be unused.\n  705. Dataset_GUI_backup.m (line 2690): Input argument might be unused. Consider replacing the argument with ~ instead.\n  706. Dataset_GUI_backup.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  707. Dataset_GUI_backup.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  708. Dataset_GUI_backup.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  709. Dataset_GUI_backup.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  710. Dataset_GUI_backup.m (line 2864): Input argument might be unused. Consider replacing the argument with ~ instead.\n  711. Dataset_GUI_backup.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  712. Dataset_GUI_backup.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  713. Dataset_GUI_backup.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  714. Dataset_GUI_backup.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  715. Dataset_GUI_backup.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  716. Dataset_GUI_backup.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  717. Dataset_GUI_backup.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  718. Dataset_GUI_backup.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  719. Dataset_GUI_backup.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  720. Dataset_GUI_backup.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  721. Dataset_GUI_backup.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  722. Dataset_GUI_backup.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  723. Dataset_GUI_backup.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  724. Dataset_GUI_backup.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  725. Dataset_GUI_backup.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  726. Dataset_GUI_backup.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  727. Dataset_GUI_backup.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  728. Dataset_GUI_backup.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  729. Dataset_GUI_backup.m (line 3168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  730. Dataset_GUI_backup.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  731. Dataset_GUI_backup.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  732. Dataset_GUI_backup.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  733. Dataset_GUI_backup.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  734. Dataset_GUI_backup.m (line 3199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  735. Dataset_GUI_backup.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  736. Dataset_GUI_backup.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  737. Dataset_GUI_backup.m (line 3212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  738. Dataset_GUI_backup.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  739. Dataset_GUI_backup.m (line 3218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  740. Dataset_GUI_backup.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  741. Dataset_GUI_backup.m (line 3259): Value assigned to variable might be unused.\n  742. Dataset_GUI_backup.m (line 3498): Value assigned to variable might be unused.\n  743. Dataset_GUI_backup.m (line 3688): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  744. Dataset_GUI_backup.m (line 3827): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  745. Dataset_GUI_backup.m (line 3827): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  746. Dataset_GUI_backup.m (line 3949): Function might be unused.\n  747. Dataset_GUI_backup.m (line 4127): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  748. Dataset_GUI_backup.m (line 4127): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  749. Dataset_GUI_backup.m (line 4162): Function might be unused.\n  750. Dataset_GUI_backup.m (line 4213): Input argument might be unused. Consider replacing the argument with ~ instead.\n  751. Dataset_GUI_backup.m (line 4295): Input argument might be unused. Consider replacing the argument with ~ instead.\n  752. Dataset_GUI_backup.m (line 4412): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  753. Dataset_GUI_backup.m (line 4482): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  754. Dataset_GUI_backup.m (line 4482): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  755. Dataset_GUI_backup.m (line 4835): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  756. Dataset_GUI_backup.m (line 5126): Input argument might be unused. Consider replacing the argument with ~ instead.\n  757. Dataset_GUI_backup.m (line 5129): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  758. Dataset_GUI_backup.m (line 5129): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  759. Dataset_GUI_backup.m (line 5224): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  760. Dataset_GUI_backup.m (line 5336): Input argument might be unused. Consider replacing the argument with ~ instead.\n  761. Dataset_GUI_backup.m (line 5336): Input argument might be unused. Consider replacing the argument with ~ instead.\n  762. Dataset_GUI_backup.m (line 5340): Value assigned to variable might be unused.\n  763. Dataset_GUI_backup.m (line 5508): This variable, apparently a structure, is changed but the value might be unused.\n  764. Dataset_GUI_backup.m (line 5529): Value assigned to variable might be unused.\n  765. Dataset_GUI_backup.m (line 5530): Value assigned to variable might be unused.\n  766. Dataset_GUI_backup.m (line 5546): Value assigned to variable might be unused.\n  767. Dataset_GUI_backup.m (line 5556): Value assigned to variable might be unused.\n  768. Dataset_GUI_backup.m (line 5561): Value assigned to variable might be unused.\n  769. Dataset_GUI_backup.m (line 5566): Value assigned to variable might be unused.\n  770. Dataset_GUI_backup.m (line 5606): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  771. Dataset_GUI_backup.m (line 5607): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  772. Dataset_GUI_backup.m (line 5611): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  773. Dataset_GUI_backup.m (line 5612): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  774. Dataset_GUI_backup.m (line 5620): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  775. Dataset_GUI_backup.m (line 5622): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  776. Dataset_GUI_backup.m (line 5637): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  777. Dataset_GUI_backup.m (line 5638): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  778. Dataset_GUI_backup.m (line 5644): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  779. Dataset_GUI_backup.m (line 5645): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  780. Dataset_GUI_backup.m (line 5651): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  781. Dataset_GUI_backup.m (line 5652): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  782. Dataset_GUI_backup.m (line 5659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  783. Dataset_GUI_backup.m (line 5660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  784. Dataset_GUI_backup.m (line 5670): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  785. Dataset_GUI_backup.m (line 5671): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  786. Dataset_GUI_backup.m (line 5679): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  787. Dataset_GUI_backup.m (line 5680): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  788. Dataset_GUI_backup.m (line 5784): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  789. Dataset_GUI_backup.m (line 5829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  790. Dataset_GUI_backup.m (line 5863): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  791. Dataset_GUI_backup.m (line 5864): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  792. Dataset_GUI_backup.m (line 5870): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  793. Dataset_GUI_backup.m (line 5871): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  794. Dataset_GUI_backup.m (line 5885): The current use of 'validateCoefficientBounds' is inconsistent with its previous use or definition (line 5336).\n  795. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Dataset_GUI_backup.m: Missing arguments validation block\n  796. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  797. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  798. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  799. Dataset_GUI.m (line 2): Function name 'Data_GUI_Enhanced' is known to MATLAB by its file name: 'Dataset_GUI'.\n  800. Dataset_GUI.m (line 314): Function might be unused.\n  801. Dataset_GUI.m (line 405): Value assigned to variable might be unused.\n  802. Dataset_GUI.m (line 627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  803. Dataset_GUI.m (line 651): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  804. Dataset_GUI.m (line 663): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  805. Dataset_GUI.m (line 687): Value assigned to variable might be unused.\n  806. Dataset_GUI.m (line 939): Value assigned to variable might be unused.\n  807. Dataset_GUI.m (line 960): Value assigned to variable might be unused.\n  808. Dataset_GUI.m (line 1134): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  809. Dataset_GUI.m (line 1134): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  810. Dataset_GUI.m (line 1167): Input argument might be unused. Consider replacing the argument with ~ instead.\n  811. Dataset_GUI.m (line 1248): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  812. Dataset_GUI.m (line 1488): Input argument might be unused. Consider replacing the argument with ~ instead.\n  813. Dataset_GUI.m (line 1488): Input argument might be unused. Consider replacing the argument with ~ instead.\n  814. Dataset_GUI.m (line 1494): Input argument might be unused. Consider replacing the argument with ~ instead.\n  815. Dataset_GUI.m (line 1494): Input argument might be unused. Consider replacing the argument with ~ instead.\n  816. Dataset_GUI.m (line 1505): Input argument might be unused. Consider replacing the argument with ~ instead.\n  817. Dataset_GUI.m (line 1505): Input argument might be unused. Consider replacing the argument with ~ instead.\n  818. Dataset_GUI.m (line 1521): Input argument might be unused. Consider replacing the argument with ~ instead.\n  819. Dataset_GUI.m (line 1558): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  820. Dataset_GUI.m (line 1558): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  821. Dataset_GUI.m (line 1718): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  822. Dataset_GUI.m (line 1718): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  823. Dataset_GUI.m (line 1822): Value assigned to variable might be unused.\n  824. Dataset_GUI.m (line 1928): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  825. Dataset_GUI.m (line 1928): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  826. Dataset_GUI.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  827. Dataset_GUI.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  828. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  829. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  830. Dataset_GUI.m (line 2334): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  831. Dataset_GUI.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  832. Dataset_GUI.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  833. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  834. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  835. Dataset_GUI.m (line 2599): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  836. Dataset_GUI.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  837. Dataset_GUI.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  838. Dataset_GUI.m (line 2633): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  839. Dataset_GUI.m (line 2666): Value assigned to variable might be unused.\n  840. Dataset_GUI.m (line 2691): Input argument might be unused. Consider replacing the argument with ~ instead.\n  841. Dataset_GUI.m (line 2839): Input argument might be unused. Consider replacing the argument with ~ instead.\n  842. Dataset_GUI.m (line 2839): Input argument might be unused. Consider replacing the argument with ~ instead.\n  843. Dataset_GUI.m (line 2852): Input argument might be unused. Consider replacing the argument with ~ instead.\n  844. Dataset_GUI.m (line 2852): Input argument might be unused. Consider replacing the argument with ~ instead.\n  845. Dataset_GUI.m (line 2865): Input argument might be unused. Consider replacing the argument with ~ instead.\n  846. Dataset_GUI.m (line 2877): Input argument might be unused. Consider replacing the argument with ~ instead.\n  847. Dataset_GUI.m (line 2877): Input argument might be unused. Consider replacing the argument with ~ instead.\n  848. Dataset_GUI.m (line 2933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  849. Dataset_GUI.m (line 2933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  850. Dataset_GUI.m (line 2984): Input argument might be unused. Consider replacing the argument with ~ instead.\n  851. Dataset_GUI.m (line 2984): Input argument might be unused. Consider replacing the argument with ~ instead.\n  852. Dataset_GUI.m (line 3031): Input argument might be unused. Consider replacing the argument with ~ instead.\n  853. Dataset_GUI.m (line 3031): Input argument might be unused. Consider replacing the argument with ~ instead.\n  854. Dataset_GUI.m (line 3061): Input argument might be unused. Consider replacing the argument with ~ instead.\n  855. Dataset_GUI.m (line 3061): Input argument might be unused. Consider replacing the argument with ~ instead.\n  856. Dataset_GUI.m (line 3083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  857. Dataset_GUI.m (line 3083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  858. Dataset_GUI.m (line 3104): Input argument might be unused. Consider replacing the argument with ~ instead.\n  859. Dataset_GUI.m (line 3104): Input argument might be unused. Consider replacing the argument with ~ instead.\n  860. Dataset_GUI.m (line 3129): Input argument might be unused. Consider replacing the argument with ~ instead.\n  861. Dataset_GUI.m (line 3129): Input argument might be unused. Consider replacing the argument with ~ instead.\n  862. Dataset_GUI.m (line 3154): Input argument might be unused. Consider replacing the argument with ~ instead.\n  863. Dataset_GUI.m (line 3154): Input argument might be unused. Consider replacing the argument with ~ instead.\n  864. Dataset_GUI.m (line 3169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  865. Dataset_GUI.m (line 3181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  866. Dataset_GUI.m (line 3181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  867. Dataset_GUI.m (line 3187): Input argument might be unused. Consider replacing the argument with ~ instead.\n  868. Dataset_GUI.m (line 3187): Input argument might be unused. Consider replacing the argument with ~ instead.\n  869. Dataset_GUI.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  870. Dataset_GUI.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  871. Dataset_GUI.m (line 3202): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  872. Dataset_GUI.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  873. Dataset_GUI.m (line 3214): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  874. Dataset_GUI.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  875. Dataset_GUI.m (line 3220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  876. Dataset_GUI.m (line 3260): Value assigned to variable might be unused.\n  877. Dataset_GUI.m (line 3463): Value assigned to variable might be unused.\n  878. Dataset_GUI.m (line 3653): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  879. Dataset_GUI.m (line 3792): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  880. Dataset_GUI.m (line 3792): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  881. Dataset_GUI.m (line 3914): Function might be unused.\n  882. Dataset_GUI.m (line 4092): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  883. Dataset_GUI.m (line 4092): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  884. Dataset_GUI.m (line 4127): Function might be unused.\n  885. Dataset_GUI.m (line 4178): Input argument might be unused. Consider replacing the argument with ~ instead.\n  886. Dataset_GUI.m (line 4260): Input argument might be unused. Consider replacing the argument with ~ instead.\n  887. Dataset_GUI.m (line 4377): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  888. Dataset_GUI.m (line 4425): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  889. Dataset_GUI.m (line 4425): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  890. Dataset_GUI.m (line 4778): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  891. Dataset_GUI.m (line 5069): Input argument might be unused. Consider replacing the argument with ~ instead.\n  892. Dataset_GUI.m (line 5072): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  893. Dataset_GUI.m (line 5072): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  894. Dataset_GUI.m (line 5149): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  895. Dataset_GUI.m (line 5183): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  896. Dataset_GUI.m (line 5197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  897. Dataset_GUI.m (line 5205): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  898. Dataset_GUI.m (line 5205): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  899. Dataset_GUI.m (line 5312): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  900. Dataset_GUI.m (line 5312): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  901. Dataset_GUI.m (line 5344): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  902. Dataset_GUI.m (line 5344): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  903. Dataset_GUI.m (line 5511): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  904. Dataset_GUI.m (line 5525): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  905. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Backup_Scripts\\Run_Backup_20250822_163833\\Dataset_GUI.m: Missing arguments validation block\n  906. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  907. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  908. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  909. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Backup_Scripts\\Run_Backup_20250822_163833\\extractSimscapeDataRecursive.m: Missing function docstring\n  910. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Backup_Scripts\\Run_Backup_20250822_163833\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  911. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  912. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  913. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Backup_Scripts\\Run_Backup_20250822_163833\\traverseSimlogNode.m: Missing arguments validation block\n  914. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  915. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  916. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  917. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  918. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  919. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  920. Data_GUI.m (line 725): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  921. Data_GUI.m (line 726): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  922. Data_GUI.m (line 727): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  923. Data_GUI.m (line 728): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  924. Data_GUI.m (line 729): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  925. Data_GUI.m (line 745): Function might be unused.\n  926. Data_GUI.m (line 970): Function might be unused.\n  927. Data_GUI.m (line 985): Value assigned to variable might be unused.\n  928. Data_GUI.m (line 1007): Function might be unused.\n  929. Data_GUI.m (line 1184): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  930. Data_GUI.m (line 1185): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  931. Data_GUI.m (line 1186): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  932. Data_GUI.m (line 1187): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  933. Data_GUI.m (line 1188): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  934. Data_GUI.m (line 1218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  935. Data_GUI.m (line 1219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  936. Data_GUI.m (line 1220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  937. Data_GUI.m (line 1240): Function might be unused.\n  938. Data_GUI.m (line 1281): Function might be unused.\n  939. Data_GUI.m (line 1357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  940. Data_GUI.m (line 1427): Value assigned to variable might be unused.\n  941. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  942. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  943. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  944. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  945. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  946. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  947. Data_GUI.m (line 1595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  948. Data_GUI.m (line 1596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  949. Data_GUI.m (line 1597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  950. Data_GUI.m (line 1598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  951. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  952. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  953. Data_GUI.m (line 1640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  954. Data_GUI.m (line 1641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  955. Data_GUI.m (line 1642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  956. Data_GUI.m (line 1653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  957. Data_GUI.m (line 1654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  958. Data_GUI.m (line 1659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  959. Data_GUI.m (line 1660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  960. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  961. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  962. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  963. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  964. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  965. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  966. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  967. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  968. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  969. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  970. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  971. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  972. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  973. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  974. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  975. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  976. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  977. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  978. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  979. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  980. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  981. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  982. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  983. Data_GUI.m (line 2027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  984. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  985. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  986. Data_GUI.m (line 2043): Function might be unused.\n  987. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  988. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  989. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  990. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  991. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  992. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  993. Data_GUI.m (line 2252): Value assigned to variable might be unused.\n  994. Data_GUI.m (line 2311): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  995. Data_GUI.m (line 2455): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  996. Data_GUI.m (line 2594): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  997. Data_GUI.m (line 2594): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  998. Data_GUI.m (line 2716): Function might be unused.\n  999. Data_GUI.m (line 2893): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1000. Data_GUI.m (line 2893): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1001. Data_GUI.m (line 2925): Function might be unused.\n  1002. Data_GUI.m (line 3076): Function might be unused.\n  1003. Data_GUI.m (line 3154): Function might be unused.\n  1004. Data_GUI.m (line 3169): This keyword might not be aligned with its matching END on line 3180.\n  1005. Data_GUI.m (line 3182): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  1006. Data_GUI.m (line 3398): This keyword might not be aligned with its matching END on line 3400.\n  1007. Data_GUI.m (line 3502): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  1008. Data_GUI.m (line 3537): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1009. Data_GUI.m (line 3571): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1010. Data_GUI.m (line 3585): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1011. Data_GUI.m (line 3593): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1012. Data_GUI.m (line 3593): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1013. Data_GUI.m (line 3792): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1014. Data_GUI.m (line 3832): Function might be unused.\n  1015. Data_GUI.m (line 3864): Function might be unused.\n  1016. Data_GUI.m (line 3876): Value assigned to variable might be unused.\n  1017. Data_GUI.m (line 3886): Value assigned to variable might be unused.\n  1018. Data_GUI.m (line 3891): Value assigned to variable might be unused.\n  1019. Data_GUI.m (line 3896): Value assigned to variable might be unused.\n  1020. Data_GUI.m (line 3913): Value assigned to variable might be unused.\n  1021. Data_GUI.m (line 4022): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1022. Data_GUI.m (line 4023): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1023. Data_GUI.m (line 4030): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1024. Data_GUI.m (line 4031): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1025. Data_GUI.m (line 4044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1026. Data_GUI.m (line 4046): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1027. Data_GUI.m (line 4068): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1028. Data_GUI.m (line 4069): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1029. Data_GUI.m (line 4089): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1030. Data_GUI.m (line 4090): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1031. Data_GUI.m (line 4102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1032. Data_GUI.m (line 4103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1033. Data_GUI.m (line 4121): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1034. Data_GUI.m (line 4122): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1035. Data_GUI.m (line 4166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1036. Data_GUI.m (line 4167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1037. Data_GUI.m (line 4174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1038. Data_GUI.m (line 4175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1039. Data_GUI.m (line 4194): Function might be unused.\n  1040. Data_GUI.m (line 4252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1041. Data_GUI.m (line 4253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1042. Data_GUI.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1043. Data_GUI.m (line 4264): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1044. Data_GUI.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1045. Data_GUI.m (line 4284): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1046. Data_GUI.m (line 4337): Function might be unused.\n  1047. Data_GUI.m (line 4384): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1048. Data_GUI.m (line 4449): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1049. Data_GUI.m (line 4450): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1050. Data_GUI.m (line 4498): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1051. Data_GUI.m (line 4507): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1052. Data_GUI.m (line 4512): This statement (and possibly following ones) cannot be reached.\n  1053. Data_GUI.m (line 4514): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1054. Data_GUI.m (line 4521): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1055. Data_GUI.m (line 4551): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1056. Data_GUI.m (line 4591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1057. Data_GUI.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1058. Data_GUI.m (line 4625): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1059. Data_GUI.m (line 4637): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1060. Data_GUI.m (line 4650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1061. Data_GUI.m (line 4744): Function might be unused.\n  1062. Data_GUI.m (line 4750): Value assigned to variable might be unused.\n  1063. Data_GUI.m (line 4778): Value assigned to variable might be unused.\n  1064. Data_GUI.m (line 4803): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1065. Data_GUI.m (line 4825): Value assigned to variable might be unused.\n  1066. Data_GUI.m (line 4859): Value assigned to variable might be unused.\n  1067. Data_GUI.m (line 4888): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1068. Data_GUI.m (line 4921): Function might be unused.\n  1069. Data_GUI.m (line 4965): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1070. Data_GUI.m (line 4966): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1071. Data_GUI.m (line 4989): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1072. Data_GUI.m (line 4990): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1073. Data_GUI.m (line 5010): Function might be unused.\n  1074. Data_GUI.m (line 5087): Function might be unused.\n  1075. Data_GUI.m (line 5104): Value assigned to variable might be unused.\n  1076. Data_GUI.m (line 5162): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1077. Data_GUI.m (line 5163): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1078. Data_GUI.m (line 5167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1079. Data_GUI.m (line 5168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1080. Data_GUI.m (line 5186): Function might be unused.\n  1081. Data_GUI.m (line 5244): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1082. Data_GUI.m (line 5244): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1083. Data_GUI.m (line 5276): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1084. Data_GUI.m (line 5276): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1085. Data_GUI.m (line 5439): Function might be unused.\n  1086. Data_GUI.m (line 5469): Function might be unused.\n  1087. Data_GUI.m (line 5560): Function might be unused.\n  1088. Data_GUI.m (line 5598): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1089. Data_GUI.m (line 5629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1090. Data_GUI.m (line 5665): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1091. Data_GUI.m (line 5667): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1092. Data_GUI.m (line 5667): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1093. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\Data_GUI.m: Missing arguments validation block\n  1094. Data_GUI_BROKEN.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_BROKEN'.\n  1095. Data_GUI_BROKEN.m (line 239): Value assigned to variable might be unused.\n  1096. Data_GUI_BROKEN.m (line 340): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1097. Data_GUI_BROKEN.m (line 340): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1098. Data_GUI_BROKEN.m (line 734): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1099. Data_GUI_BROKEN.m (line 735): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1100. Data_GUI_BROKEN.m (line 736): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1101. Data_GUI_BROKEN.m (line 737): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1102. Data_GUI_BROKEN.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1103. Data_GUI_BROKEN.m (line 754): Function might be unused.\n  1104. Data_GUI_BROKEN.m (line 979): Function might be unused.\n  1105. Data_GUI_BROKEN.m (line 994): Value assigned to variable might be unused.\n  1106. Data_GUI_BROKEN.m (line 1016): Function might be unused.\n  1107. Data_GUI_BROKEN.m (line 1193): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1108. Data_GUI_BROKEN.m (line 1194): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1109. Data_GUI_BROKEN.m (line 1195): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1110. Data_GUI_BROKEN.m (line 1196): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1111. Data_GUI_BROKEN.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1112. Data_GUI_BROKEN.m (line 1227): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1113. Data_GUI_BROKEN.m (line 1228): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1114. Data_GUI_BROKEN.m (line 1229): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1115. Data_GUI_BROKEN.m (line 1249): Function might be unused.\n  1116. Data_GUI_BROKEN.m (line 1290): Function might be unused.\n  1117. Data_GUI_BROKEN.m (line 1366): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1118. Data_GUI_BROKEN.m (line 1436): Value assigned to variable might be unused.\n  1119. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1120. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1121. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1122. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1123. Data_GUI_BROKEN.m (line 1652): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1124. Data_GUI_BROKEN.m (line 1654): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1125. Data_GUI_BROKEN.m (line 1654): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1126. Data_GUI_BROKEN.m (line 1664): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1127. Data_GUI_BROKEN.m (line 1665): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1128. Data_GUI_BROKEN.m (line 1666): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1129. Data_GUI_BROKEN.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1130. Data_GUI_BROKEN.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1131. Data_GUI_BROKEN.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1132. Data_GUI_BROKEN.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1133. Data_GUI_BROKEN.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1134. Data_GUI_BROKEN.m (line 1672): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1135. Data_GUI_BROKEN.m (line 1673): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1136. Data_GUI_BROKEN.m (line 1674): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1137. Data_GUI_BROKEN.m (line 1675): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1138. Data_GUI_BROKEN.m (line 1676): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1139. Data_GUI_BROKEN.m (line 1677): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1140. Data_GUI_BROKEN.m (line 1678): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1141. Data_GUI_BROKEN.m (line 1679): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1142. Data_GUI_BROKEN.m (line 1680): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1143. Data_GUI_BROKEN.m (line 1681): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1144. Data_GUI_BROKEN.m (line 1682): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1145. Data_GUI_BROKEN.m (line 1683): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1146. Data_GUI_BROKEN.m (line 1684): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1147. Data_GUI_BROKEN.m (line 1685): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1148. Data_GUI_BROKEN.m (line 1686): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1149. Data_GUI_BROKEN.m (line 1687): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1150. Data_GUI_BROKEN.m (line 1688): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1151. Data_GUI_BROKEN.m (line 1689): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1152. Data_GUI_BROKEN.m (line 1690): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1153. Data_GUI_BROKEN.m (line 1691): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1154. Data_GUI_BROKEN.m (line 1692): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1155. Data_GUI_BROKEN.m (line 1693): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1156. Data_GUI_BROKEN.m (line 1694): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1157. Data_GUI_BROKEN.m (line 1695): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1158. Data_GUI_BROKEN.m (line 1696): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1159. Data_GUI_BROKEN.m (line 1697): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1160. Data_GUI_BROKEN.m (line 1698): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1161. Data_GUI_BROKEN.m (line 1699): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1162. Data_GUI_BROKEN.m (line 1700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1163. Data_GUI_BROKEN.m (line 1701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1164. Data_GUI_BROKEN.m (line 1702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1165. Data_GUI_BROKEN.m (line 1703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1166. Data_GUI_BROKEN.m (line 1704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1167. Data_GUI_BROKEN.m (line 1705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1168. Data_GUI_BROKEN.m (line 1706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1169. Data_GUI_BROKEN.m (line 1707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1170. Data_GUI_BROKEN.m (line 1708): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1171. Data_GUI_BROKEN.m (line 1709): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1172. Data_GUI_BROKEN.m (line 1710): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1173. Data_GUI_BROKEN.m (line 1711): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1174. Data_GUI_BROKEN.m (line 1712): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1175. Data_GUI_BROKEN.m (line 1713): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1176. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1177. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1178. Data_GUI_BROKEN.m (line 1767): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1179. Data_GUI_BROKEN.m (line 1768): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1180. Data_GUI_BROKEN.m (line 1769): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1181. Data_GUI_BROKEN.m (line 1770): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1182. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1183. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1184. Data_GUI_BROKEN.m (line 1812): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1185. Data_GUI_BROKEN.m (line 1813): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1186. Data_GUI_BROKEN.m (line 1814): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1187. Data_GUI_BROKEN.m (line 1825): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1188. Data_GUI_BROKEN.m (line 1826): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1189. Data_GUI_BROKEN.m (line 1831): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1190. Data_GUI_BROKEN.m (line 1832): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1191. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1192. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1193. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1194. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1195. Data_GUI_BROKEN.m (line 1897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1196. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1197. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1198. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1199. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1200. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1201. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1202. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1203. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1204. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1205. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1206. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1207. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1208. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1209. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1210. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1211. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1212. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1213. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1214. Data_GUI_BROKEN.m (line 2199): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1215. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1216. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1217. Data_GUI_BROKEN.m (line 2215): Function might be unused.\n  1218. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1219. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1220. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1221. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1222. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1223. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1224. Data_GUI_BROKEN.m (line 2427): Value assigned to variable might be unused.\n  1225. Data_GUI_BROKEN.m (line 2486): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  1226. Data_GUI_BROKEN.m (line 2630): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  1227. Data_GUI_BROKEN.m (line 2769): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1228. Data_GUI_BROKEN.m (line 2769): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1229. Data_GUI_BROKEN.m (line 2891): Function might be unused.\n  1230. Data_GUI_BROKEN.m (line 3068): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1231. Data_GUI_BROKEN.m (line 3068): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1232. Data_GUI_BROKEN.m (line 3100): Function might be unused.\n  1233. Data_GUI_BROKEN.m (line 3251): Function might be unused.\n  1234. Data_GUI_BROKEN.m (line 3329): Function might be unused.\n  1235. Data_GUI_BROKEN.m (line 3344): This keyword might not be aligned with its matching END on line 3355.\n  1236. Data_GUI_BROKEN.m (line 3357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  1237. Data_GUI_BROKEN.m (line 3573): This keyword might not be aligned with its matching END on line 3575.\n  1238. Data_GUI_BROKEN.m (line 3677): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  1239. Data_GUI_BROKEN.m (line 3712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1240. Data_GUI_BROKEN.m (line 3746): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1241. Data_GUI_BROKEN.m (line 3760): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1242. Data_GUI_BROKEN.m (line 3768): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1243. Data_GUI_BROKEN.m (line 3768): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1244. Data_GUI_BROKEN.m (line 3967): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1245. Data_GUI_BROKEN.m (line 4007): Function might be unused.\n  1246. Data_GUI_BROKEN.m (line 4039): Function might be unused.\n  1247. Data_GUI_BROKEN.m (line 4051): Value assigned to variable might be unused.\n  1248. Data_GUI_BROKEN.m (line 4061): Value assigned to variable might be unused.\n  1249. Data_GUI_BROKEN.m (line 4066): Value assigned to variable might be unused.\n  1250. Data_GUI_BROKEN.m (line 4071): Value assigned to variable might be unused.\n  1251. Data_GUI_BROKEN.m (line 4088): Value assigned to variable might be unused.\n  1252. Data_GUI_BROKEN.m (line 4197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1253. Data_GUI_BROKEN.m (line 4198): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1254. Data_GUI_BROKEN.m (line 4205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1255. Data_GUI_BROKEN.m (line 4206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1256. Data_GUI_BROKEN.m (line 4219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1257. Data_GUI_BROKEN.m (line 4221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1258. Data_GUI_BROKEN.m (line 4243): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1259. Data_GUI_BROKEN.m (line 4244): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1260. Data_GUI_BROKEN.m (line 4262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1261. Data_GUI_BROKEN.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1262. Data_GUI_BROKEN.m (line 4282): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1263. Data_GUI_BROKEN.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1264. Data_GUI_BROKEN.m (line 4294): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1265. Data_GUI_BROKEN.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1266. Data_GUI_BROKEN.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1267. Data_GUI_BROKEN.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1268. Data_GUI_BROKEN.m (line 4325): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1269. Data_GUI_BROKEN.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1270. Data_GUI_BROKEN.m (line 4370): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1271. Data_GUI_BROKEN.m (line 4371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1272. Data_GUI_BROKEN.m (line 4378): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1273. Data_GUI_BROKEN.m (line 4379): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1274. Data_GUI_BROKEN.m (line 4398): Function might be unused.\n  1275. Data_GUI_BROKEN.m (line 4456): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1276. Data_GUI_BROKEN.m (line 4457): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1277. Data_GUI_BROKEN.m (line 4467): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1278. Data_GUI_BROKEN.m (line 4468): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1279. Data_GUI_BROKEN.m (line 4487): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1280. Data_GUI_BROKEN.m (line 4488): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1281. Data_GUI_BROKEN.m (line 4541): Function might be unused.\n  1282. Data_GUI_BROKEN.m (line 4588): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1283. Data_GUI_BROKEN.m (line 4653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1284. Data_GUI_BROKEN.m (line 4654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1285. Data_GUI_BROKEN.m (line 4702): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1286. Data_GUI_BROKEN.m (line 4711): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1287. Data_GUI_BROKEN.m (line 4716): This statement (and possibly following ones) cannot be reached.\n  1288. Data_GUI_BROKEN.m (line 4718): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1289. Data_GUI_BROKEN.m (line 4725): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1290. Data_GUI_BROKEN.m (line 4755): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1291. Data_GUI_BROKEN.m (line 4795): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1292. Data_GUI_BROKEN.m (line 4818): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1293. Data_GUI_BROKEN.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1294. Data_GUI_BROKEN.m (line 4841): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1295. Data_GUI_BROKEN.m (line 4854): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1296. Data_GUI_BROKEN.m (line 4948): Function might be unused.\n  1297. Data_GUI_BROKEN.m (line 4954): Value assigned to variable might be unused.\n  1298. Data_GUI_BROKEN.m (line 4982): Value assigned to variable might be unused.\n  1299. Data_GUI_BROKEN.m (line 5007): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1300. Data_GUI_BROKEN.m (line 5029): Value assigned to variable might be unused.\n  1301. Data_GUI_BROKEN.m (line 5063): Value assigned to variable might be unused.\n  1302. Data_GUI_BROKEN.m (line 5092): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1303. Data_GUI_BROKEN.m (line 5125): Function might be unused.\n  1304. Data_GUI_BROKEN.m (line 5169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1305. Data_GUI_BROKEN.m (line 5170): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1306. Data_GUI_BROKEN.m (line 5193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1307. Data_GUI_BROKEN.m (line 5194): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1308. Data_GUI_BROKEN.m (line 5214): Function might be unused.\n  1309. Data_GUI_BROKEN.m (line 5291): Function might be unused.\n  1310. Data_GUI_BROKEN.m (line 5308): Value assigned to variable might be unused.\n  1311. Data_GUI_BROKEN.m (line 5366): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1312. Data_GUI_BROKEN.m (line 5367): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1313. Data_GUI_BROKEN.m (line 5371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1314. Data_GUI_BROKEN.m (line 5372): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1315. Data_GUI_BROKEN.m (line 5390): Function might be unused.\n  1316. Data_GUI_BROKEN.m (line 5448): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1317. Data_GUI_BROKEN.m (line 5448): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1318. Data_GUI_BROKEN.m (line 5480): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1319. Data_GUI_BROKEN.m (line 5480): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1320. Data_GUI_BROKEN.m (line 5643): Function might be unused.\n  1321. Data_GUI_BROKEN.m (line 5673): Function might be unused.\n  1322. Data_GUI_BROKEN.m (line 5764): Function might be unused.\n  1323. Data_GUI_BROKEN.m (line 5802): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1324. Data_GUI_BROKEN.m (line 5833): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1325. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\Data_GUI_BROKEN.m: Missing arguments validation block\n  1326. Data_GUI_No_Batch.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_No_Batch'.\n  1327. Data_GUI_No_Batch.m (line 237): Value assigned to variable might be unused.\n  1328. Data_GUI_No_Batch.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1329. Data_GUI_No_Batch.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1330. Data_GUI_No_Batch.m (line 700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1331. Data_GUI_No_Batch.m (line 701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1332. Data_GUI_No_Batch.m (line 702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1333. Data_GUI_No_Batch.m (line 703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1334. Data_GUI_No_Batch.m (line 704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1335. Data_GUI_No_Batch.m (line 720): Function might be unused.\n  1336. Data_GUI_No_Batch.m (line 945): Function might be unused.\n  1337. Data_GUI_No_Batch.m (line 960): Value assigned to variable might be unused.\n  1338. Data_GUI_No_Batch.m (line 982): Function might be unused.\n  1339. Data_GUI_No_Batch.m (line 1157): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1340. Data_GUI_No_Batch.m (line 1158): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1341. Data_GUI_No_Batch.m (line 1159): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1342. Data_GUI_No_Batch.m (line 1160): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1343. Data_GUI_No_Batch.m (line 1161): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1344. Data_GUI_No_Batch.m (line 1191): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1345. Data_GUI_No_Batch.m (line 1192): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1346. Data_GUI_No_Batch.m (line 1193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1347. Data_GUI_No_Batch.m (line 1213): Function might be unused.\n  1348. Data_GUI_No_Batch.m (line 1254): Function might be unused.\n  1349. Data_GUI_No_Batch.m (line 1330): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1350. Data_GUI_No_Batch.m (line 1400): Value assigned to variable might be unused.\n  1351. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1352. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1353. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1354. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1355. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1356. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1357. Data_GUI_No_Batch.m (line 1565): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1358. Data_GUI_No_Batch.m (line 1566): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1359. Data_GUI_No_Batch.m (line 1567): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1360. Data_GUI_No_Batch.m (line 1568): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1361. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1362. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1363. Data_GUI_No_Batch.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1364. Data_GUI_No_Batch.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1365. Data_GUI_No_Batch.m (line 1612): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1366. Data_GUI_No_Batch.m (line 1623): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1367. Data_GUI_No_Batch.m (line 1624): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1368. Data_GUI_No_Batch.m (line 1629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1369. Data_GUI_No_Batch.m (line 1630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1370. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1371. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1372. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1373. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1374. Data_GUI_No_Batch.m (line 1695): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1375. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1376. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1377. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1378. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1379. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1380. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1381. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1382. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1383. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1384. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1385. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1386. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1387. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1388. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1389. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1390. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1391. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1392. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1393. Data_GUI_No_Batch.m (line 1997): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1394. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1395. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1396. Data_GUI_No_Batch.m (line 2013): Function might be unused.\n  1397. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1398. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1399. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1400. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1401. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1402. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1403. Data_GUI_No_Batch.m (line 2222): Value assigned to variable might be unused.\n  1404. Data_GUI_No_Batch.m (line 2281): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  1405. Data_GUI_No_Batch.m (line 2385): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  1406. Data_GUI_No_Batch.m (line 2524): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1407. Data_GUI_No_Batch.m (line 2524): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1408. Data_GUI_No_Batch.m (line 2646): Function might be unused.\n  1409. Data_GUI_No_Batch.m (line 2821): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1410. Data_GUI_No_Batch.m (line 2821): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1411. Data_GUI_No_Batch.m (line 2853): Function might be unused.\n  1412. Data_GUI_No_Batch.m (line 2971): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1413. Data_GUI_No_Batch.m (line 3151): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1414. Data_GUI_No_Batch.m (line 3249): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  1415. Data_GUI_No_Batch.m (line 3297): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1416. Data_GUI_No_Batch.m (line 3297): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1417. Data_GUI_No_Batch.m (line 3626): This keyword might not be aligned with its matching END on line 3637.\n  1418. Data_GUI_No_Batch.m (line 3639): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  1419. Data_GUI_No_Batch.m (line 3855): This keyword might not be aligned with its matching END on line 3857.\n  1420. Data_GUI_No_Batch.m (line 3959): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  1421. Data_GUI_No_Batch.m (line 3969): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1422. Data_GUI_No_Batch.m (line 3970): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1423. Data_GUI_No_Batch.m (line 3971): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1424. Data_GUI_No_Batch.m (line 4014): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1425. Data_GUI_No_Batch.m (line 4015): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1426. Data_GUI_No_Batch.m (line 4025): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  1427. Data_GUI_No_Batch.m (line 4041): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1428. Data_GUI_No_Batch.m (line 4042): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1429. Data_GUI_No_Batch.m (line 4083): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1430. Data_GUI_No_Batch.m (line 4117): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1431. Data_GUI_No_Batch.m (line 4131): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1432. Data_GUI_No_Batch.m (line 4139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1433. Data_GUI_No_Batch.m (line 4139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1434. Data_GUI_No_Batch.m (line 4338): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1435. Data_GUI_No_Batch.m (line 4378): Function might be unused.\n  1436. Data_GUI_No_Batch.m (line 4422): Value assigned to variable might be unused.\n  1437. Data_GUI_No_Batch.m (line 4432): Value assigned to variable might be unused.\n  1438. Data_GUI_No_Batch.m (line 4437): Value assigned to variable might be unused.\n  1439. Data_GUI_No_Batch.m (line 4442): Value assigned to variable might be unused.\n  1440. Data_GUI_No_Batch.m (line 4459): Value assigned to variable might be unused.\n  1441. Data_GUI_No_Batch.m (line 4568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1442. Data_GUI_No_Batch.m (line 4569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1443. Data_GUI_No_Batch.m (line 4576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1444. Data_GUI_No_Batch.m (line 4577): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1445. Data_GUI_No_Batch.m (line 4590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1446. Data_GUI_No_Batch.m (line 4592): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1447. Data_GUI_No_Batch.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1448. Data_GUI_No_Batch.m (line 4615): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1449. Data_GUI_No_Batch.m (line 4635): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1450. Data_GUI_No_Batch.m (line 4636): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1451. Data_GUI_No_Batch.m (line 4648): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1452. Data_GUI_No_Batch.m (line 4649): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1453. Data_GUI_No_Batch.m (line 4667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1454. Data_GUI_No_Batch.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1455. Data_GUI_No_Batch.m (line 4712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1456. Data_GUI_No_Batch.m (line 4713): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1457. Data_GUI_No_Batch.m (line 4720): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1458. Data_GUI_No_Batch.m (line 4721): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1459. Data_GUI_No_Batch.m (line 4798): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1460. Data_GUI_No_Batch.m (line 4799): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1461. Data_GUI_No_Batch.m (line 4809): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1462. Data_GUI_No_Batch.m (line 4810): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1463. Data_GUI_No_Batch.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1464. Data_GUI_No_Batch.m (line 4830): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1465. Data_GUI_No_Batch.m (line 4930): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1466. Data_GUI_No_Batch.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1467. Data_GUI_No_Batch.m (line 4996): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1468. Data_GUI_No_Batch.m (line 5044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1469. Data_GUI_No_Batch.m (line 5053): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1470. Data_GUI_No_Batch.m (line 5058): This statement (and possibly following ones) cannot be reached.\n  1471. Data_GUI_No_Batch.m (line 5060): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1472. Data_GUI_No_Batch.m (line 5067): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1473. Data_GUI_No_Batch.m (line 5097): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1474. Data_GUI_No_Batch.m (line 5137): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1475. Data_GUI_No_Batch.m (line 5160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1476. Data_GUI_No_Batch.m (line 5171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1477. Data_GUI_No_Batch.m (line 5183): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1478. Data_GUI_No_Batch.m (line 5196): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1479. Data_GUI_No_Batch.m (line 5225): Value assigned to variable might be unused.\n  1480. Data_GUI_No_Batch.m (line 5252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1481. Data_GUI_No_Batch.m (line 5284): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  1482. Data_GUI_No_Batch.m (line 5298): Value assigned to variable might be unused.\n  1483. Data_GUI_No_Batch.m (line 5316): Value assigned to variable might be unused.\n  1484. Data_GUI_No_Batch.m (line 5332): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1485. Data_GUI_No_Batch.m (line 5360): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1486. Data_GUI_No_Batch.m (line 5447): Function might be unused.\n  1487. Data_GUI_No_Batch.m (line 5453): Value assigned to variable might be unused.\n  1488. Data_GUI_No_Batch.m (line 5481): Value assigned to variable might be unused.\n  1489. Data_GUI_No_Batch.m (line 5506): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1490. Data_GUI_No_Batch.m (line 5528): Value assigned to variable might be unused.\n  1491. Data_GUI_No_Batch.m (line 5562): Value assigned to variable might be unused.\n  1492. Data_GUI_No_Batch.m (line 5591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1493. Data_GUI_No_Batch.m (line 5624): Function might be unused.\n  1494. Data_GUI_No_Batch.m (line 5668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1495. Data_GUI_No_Batch.m (line 5669): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1496. Data_GUI_No_Batch.m (line 5692): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1497. Data_GUI_No_Batch.m (line 5693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1498. Data_GUI_No_Batch.m (line 5790): Function might be unused.\n  1499. Data_GUI_No_Batch.m (line 5807): Value assigned to variable might be unused.\n  1500. Data_GUI_No_Batch.m (line 5865): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1501. Data_GUI_No_Batch.m (line 5866): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1502. Data_GUI_No_Batch.m (line 5870): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1503. Data_GUI_No_Batch.m (line 5871): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1504. Data_GUI_No_Batch.m (line 5889): Function might be unused.\n  1505. Data_GUI_No_Batch.m (line 5947): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1506. Data_GUI_No_Batch.m (line 5947): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1507. Data_GUI_No_Batch.m (line 5979): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1508. Data_GUI_No_Batch.m (line 5979): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1509. Data_GUI_No_Batch.m (line 6142): Function might be unused.\n  1510. Data_GUI_No_Batch.m (line 6172): Function might be unused.\n  1511. Data_GUI_No_Batch.m (line 6263): Function might be unused.\n  1512. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\Data_GUI_No_Batch.m: Missing arguments validation block\n  1513. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  1514. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\addModelWorkspaceData.m: Missing arguments validation block\n  1515. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\checkHighMemoryUsage.m: Missing function docstring\n  1516. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\checkHighMemoryUsage.m: Missing arguments validation block\n  1517. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\checkModelConfiguration.m: Missing arguments validation block\n  1518. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\checkStopRequest.m: Missing function docstring\n  1519. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\checkStopRequest.m: Missing arguments validation block\n  1520. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1521. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1522. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1523. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1524. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1525. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1526. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1527. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\check_model_configuration.m: Missing arguments validation block\n  1528. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1529. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1530. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1531. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\checkpoint_recovery.m: Missing arguments validation block\n  1532. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\combineDataSources.m: Missing arguments validation block\n  1533. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  1534. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1535. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1536. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1537. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1538. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1539. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1540. data_extraction_functions.m (line 146): Function might be unused.\n  1541. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1542. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1543. data_extraction_functions.m (line 202): Function might be unused.\n  1544. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1545. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1546. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1547. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1548. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\data_extraction_functions.m: Missing function docstring\n  1549. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\data_extraction_functions.m: Missing arguments validation block\n  1550. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1551. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\endPhase.m: Missing arguments validation block\n  1552. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  1553. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1554. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1555. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1556. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1557. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1558. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1559. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractAllSignalsFromBus.m: Missing arguments validation block\n  1560. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  1561. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractCoefficientsFromTable.m: Missing function docstring\n  1562. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractCoefficientsFromTable.m: Missing arguments validation block\n  1563. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1564. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1565. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1566. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1567. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1568. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1569. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1570. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1571. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1572. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1573. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1574. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1575. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractCombinedSignalBusData.m: Missing function docstring\n  1576. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractCombinedSignalBusData.m: Missing arguments validation block\n  1577. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1578. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1579. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1580. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1581. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1582. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractConstantMatrixData.m: Missing function docstring\n  1583. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractConstantMatrixData.m: Missing arguments validation block\n  1584. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractDataFromField.m: Missing arguments validation block\n  1585. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  1586. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  1587. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractDataWithOptions.m: Missing arguments validation block\n  1588. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  1589. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  1590. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  1591. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  1592. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  1593. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1594. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1595. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1596. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1597. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1598. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1599. extractFromCombinedSignalBus.m (line 200): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1600. extractFromCombinedSignalBus.m (line 201): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1601. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1602. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1603. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1604. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1605. extractFromCombinedSignalBus.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1606. extractFromCombinedSignalBus.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1607. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1608. extractFromCombinedSignalBus.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1609. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractFromCombinedSignalBus.m: Missing function docstring\n  1610. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  1611. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  1612. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  1613. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  1614. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  1615. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  1616. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  1617. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1618. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1619. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1620. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1621. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1622. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1623. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1624. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1625. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1626. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1627. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1628. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1629. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1630. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1631. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1632. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1633. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  1634. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  1635. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1636. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1637. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractFromNestedStruct.m: Missing arguments validation block\n  1638. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1639. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1640. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1641. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1642. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1643. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1644. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractLogsoutDataFixed.m: Missing function docstring\n  1645. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractLogsoutDataFixed.m: Missing arguments validation block\n  1646. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractSignalsFromSimOut.m: Missing arguments validation block\n  1647. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1648. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1649. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1650. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractSimscapeDataRecursive.m: Missing function docstring\n  1651. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  1652. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractTimeSeriesData.m: Missing function docstring\n  1653. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractTimeSeriesData.m: Missing arguments validation block\n  1654. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1655. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1656. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1657. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1658. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractWorkspaceOutputs.m: Missing function docstring\n  1659. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\extractWorkspaceOutputs.m: Missing arguments validation block\n  1660. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1661. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1662. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  1663. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1664. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1665. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1666. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\fallbackSimlogExtraction.m: Missing function docstring\n  1667. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\fallbackSimlogExtraction.m: Missing arguments validation block\n  1668. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\generateRandomCoefficients.m: Missing arguments validation block\n  1669. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\getMemoryInfo.m: Missing function docstring\n  1670. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\getMemoryInfo.m: Missing arguments validation block\n  1671. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\getMemoryUsage.m: Missing arguments validation block\n  1672. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1673. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1674. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1675. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1676. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1677. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1678. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1679. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  1680. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1681. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1682. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1683. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1684. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1685. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\getPolynomialParameterInfo.m: Missing arguments validation block\n  1686. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\getShortenedJointName.m: Missing arguments validation block\n  1687. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1688. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1689. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  1690. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  1691. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\loadInputFile.m: Missing function docstring\n  1692. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\loadInputFile.m: Missing arguments validation block\n  1693. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\logBatchResult.m: Missing arguments validation block\n  1694. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1695. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\logMessage.m: Missing arguments validation block\n  1696. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\logical2str.m: Missing function docstring\n  1697. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\logical2str.m: Missing arguments validation block\n  1698. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  1699. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\memory_monitor.m: Missing arguments validation block\n  1700. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\mergeTables.m: Missing function docstring\n  1701. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\mergeTables.m: Missing arguments validation block\n  1702. performance_monitor.m (line 11): Persistent variable might be unused.\n  1703. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1704. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1705. performance_monitor.m (line 77): Function might be unused.\n  1706. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1707. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1708. performance_monitor.m (line 118): Function might be unused.\n  1709. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1710. performance_monitor.m (line 133): Function might be unused.\n  1711. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1712. performance_monitor.m (line 149): Function might be unused.\n  1713. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1714. performance_monitor.m (line 162): Function might be unused.\n  1715. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1716. performance_monitor.m (line 175): Function might be unused.\n  1717. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1718. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1719. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1720. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\performance_monitor.m: Missing arguments validation block\n  1721. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  1722. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  1723. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1724. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1725. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\processSimulationOutput.m: Missing function docstring\n  1726. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\processSimulationOutput.m: Missing arguments validation block\n  1727. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1728. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\recordBatchTime.m: Missing arguments validation block\n  1729. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1730. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\recordPhase.m: Missing arguments validation block\n  1731. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\resampleDataToFrequency.m: Missing function docstring\n  1732. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\resampleDataToFrequency.m: Missing arguments validation block\n  1733. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\restoreWorkspace.m: Missing arguments validation block\n  1734. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\runSingleTrial.m: Missing arguments validation block\n  1735. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\setModelParameters.m: Missing arguments validation block\n  1736. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1737. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\setPolynomialCoefficients.m: Missing arguments validation block\n  1738. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\shouldShowDebug.m: Missing function docstring\n  1739. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\shouldShowDebug.m: Missing arguments validation block\n  1740. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\shouldShowNormal.m: Missing function docstring\n  1741. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\shouldShowNormal.m: Missing arguments validation block\n  1742. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\shouldShowVerbose.m: Missing function docstring\n  1743. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\shouldShowVerbose.m: Missing arguments validation block\n  1744. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  1745. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1746. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\traverseSimlogNode.m: Missing arguments validation block\n  1747. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1748. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1749. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1750. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1751. verbosity_control.m (line 203): Function might be unused.\n  1752. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1753. verbosity_control.m (line 225): Function might be unused.\n  1754. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1755. verbosity_control.m (line 248): Function might be unused.\n  1756. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1757. verbosity_control.m (line 274): Function might be unused.\n  1758. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1759. verbosity_control.m (line 293): Function might be unused.\n  1760. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1761. verbosity_control.m (line 320): Function might be unused.\n  1762. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1763. verbosity_control.m (line 335): Function might be unused.\n  1764. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  1765. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_113724\\verbosity_control.m: Missing arguments validation block\n  1766. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  1767. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  1768. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  1769. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  1770. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1771. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1772. Data_GUI.m (line 725): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1773. Data_GUI.m (line 726): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1774. Data_GUI.m (line 727): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1775. Data_GUI.m (line 728): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1776. Data_GUI.m (line 729): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1777. Data_GUI.m (line 745): Function might be unused.\n  1778. Data_GUI.m (line 970): Function might be unused.\n  1779. Data_GUI.m (line 985): Value assigned to variable might be unused.\n  1780. Data_GUI.m (line 1007): Function might be unused.\n  1781. Data_GUI.m (line 1184): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1782. Data_GUI.m (line 1185): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1783. Data_GUI.m (line 1186): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1784. Data_GUI.m (line 1187): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1785. Data_GUI.m (line 1188): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1786. Data_GUI.m (line 1218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1787. Data_GUI.m (line 1219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1788. Data_GUI.m (line 1220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1789. Data_GUI.m (line 1240): Function might be unused.\n  1790. Data_GUI.m (line 1281): Function might be unused.\n  1791. Data_GUI.m (line 1357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1792. Data_GUI.m (line 1427): Value assigned to variable might be unused.\n  1793. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1794. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1795. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1796. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1797. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1798. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1799. Data_GUI.m (line 1595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1800. Data_GUI.m (line 1596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1801. Data_GUI.m (line 1597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1802. Data_GUI.m (line 1598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1803. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1804. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1805. Data_GUI.m (line 1640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1806. Data_GUI.m (line 1641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1807. Data_GUI.m (line 1642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1808. Data_GUI.m (line 1653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1809. Data_GUI.m (line 1654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1810. Data_GUI.m (line 1659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1811. Data_GUI.m (line 1660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1812. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1813. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1814. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1815. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1816. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1817. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1818. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1819. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1820. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1821. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1822. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1823. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1824. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1825. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1826. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1827. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1828. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1829. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1830. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1831. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1832. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1833. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1834. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1835. Data_GUI.m (line 2027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1836. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1837. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1838. Data_GUI.m (line 2043): Function might be unused.\n  1839. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1840. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1841. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1842. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1843. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1844. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1845. Data_GUI.m (line 2252): Value assigned to variable might be unused.\n  1846. Data_GUI.m (line 2311): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  1847. Data_GUI.m (line 2455): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  1848. Data_GUI.m (line 2594): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1849. Data_GUI.m (line 2594): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1850. Data_GUI.m (line 2716): Function might be unused.\n  1851. Data_GUI.m (line 2893): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1852. Data_GUI.m (line 2893): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1853. Data_GUI.m (line 2925): Function might be unused.\n  1854. Data_GUI.m (line 3076): Function might be unused.\n  1855. Data_GUI.m (line 3154): Function might be unused.\n  1856. Data_GUI.m (line 3169): This keyword might not be aligned with its matching END on line 3180.\n  1857. Data_GUI.m (line 3182): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  1858. Data_GUI.m (line 3398): This keyword might not be aligned with its matching END on line 3400.\n  1859. Data_GUI.m (line 3502): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  1860. Data_GUI.m (line 3537): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1861. Data_GUI.m (line 3571): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1862. Data_GUI.m (line 3585): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1863. Data_GUI.m (line 3593): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1864. Data_GUI.m (line 3593): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1865. Data_GUI.m (line 3792): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1866. Data_GUI.m (line 3832): Function might be unused.\n  1867. Data_GUI.m (line 3864): Function might be unused.\n  1868. Data_GUI.m (line 3876): Value assigned to variable might be unused.\n  1869. Data_GUI.m (line 3886): Value assigned to variable might be unused.\n  1870. Data_GUI.m (line 3891): Value assigned to variable might be unused.\n  1871. Data_GUI.m (line 3896): Value assigned to variable might be unused.\n  1872. Data_GUI.m (line 3913): Value assigned to variable might be unused.\n  1873. Data_GUI.m (line 4022): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1874. Data_GUI.m (line 4023): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1875. Data_GUI.m (line 4030): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1876. Data_GUI.m (line 4031): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1877. Data_GUI.m (line 4044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1878. Data_GUI.m (line 4046): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1879. Data_GUI.m (line 4068): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1880. Data_GUI.m (line 4069): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1881. Data_GUI.m (line 4089): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1882. Data_GUI.m (line 4090): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1883. Data_GUI.m (line 4102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1884. Data_GUI.m (line 4103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1885. Data_GUI.m (line 4121): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1886. Data_GUI.m (line 4122): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1887. Data_GUI.m (line 4166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1888. Data_GUI.m (line 4167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1889. Data_GUI.m (line 4174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1890. Data_GUI.m (line 4175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1891. Data_GUI.m (line 4194): Function might be unused.\n  1892. Data_GUI.m (line 4252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1893. Data_GUI.m (line 4253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1894. Data_GUI.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1895. Data_GUI.m (line 4264): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1896. Data_GUI.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1897. Data_GUI.m (line 4284): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1898. Data_GUI.m (line 4337): Function might be unused.\n  1899. Data_GUI.m (line 4384): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1900. Data_GUI.m (line 4449): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1901. Data_GUI.m (line 4450): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1902. Data_GUI.m (line 4498): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1903. Data_GUI.m (line 4507): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1904. Data_GUI.m (line 4512): This statement (and possibly following ones) cannot be reached.\n  1905. Data_GUI.m (line 4514): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1906. Data_GUI.m (line 4521): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1907. Data_GUI.m (line 4551): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1908. Data_GUI.m (line 4591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1909. Data_GUI.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1910. Data_GUI.m (line 4625): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1911. Data_GUI.m (line 4637): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1912. Data_GUI.m (line 4650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1913. Data_GUI.m (line 4744): Function might be unused.\n  1914. Data_GUI.m (line 4750): Value assigned to variable might be unused.\n  1915. Data_GUI.m (line 4778): Value assigned to variable might be unused.\n  1916. Data_GUI.m (line 4803): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1917. Data_GUI.m (line 4825): Value assigned to variable might be unused.\n  1918. Data_GUI.m (line 4859): Value assigned to variable might be unused.\n  1919. Data_GUI.m (line 4888): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1920. Data_GUI.m (line 4921): Function might be unused.\n  1921. Data_GUI.m (line 4965): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1922. Data_GUI.m (line 4966): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1923. Data_GUI.m (line 4989): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1924. Data_GUI.m (line 4990): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1925. Data_GUI.m (line 5010): Function might be unused.\n  1926. Data_GUI.m (line 5087): Function might be unused.\n  1927. Data_GUI.m (line 5104): Value assigned to variable might be unused.\n  1928. Data_GUI.m (line 5162): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1929. Data_GUI.m (line 5163): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1930. Data_GUI.m (line 5167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1931. Data_GUI.m (line 5168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1932. Data_GUI.m (line 5186): Function might be unused.\n  1933. Data_GUI.m (line 5244): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1934. Data_GUI.m (line 5244): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1935. Data_GUI.m (line 5276): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1936. Data_GUI.m (line 5276): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1937. Data_GUI.m (line 5439): Function might be unused.\n  1938. Data_GUI.m (line 5469): Function might be unused.\n  1939. Data_GUI.m (line 5560): Function might be unused.\n  1940. Data_GUI.m (line 5598): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1941. Data_GUI.m (line 5629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1942. Data_GUI.m (line 5665): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1943. Data_GUI.m (line 5667): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1944. Data_GUI.m (line 5667): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1945. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\Data_GUI.m: Missing arguments validation block\n  1946. Data_GUI_BROKEN.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_BROKEN'.\n  1947. Data_GUI_BROKEN.m (line 239): Value assigned to variable might be unused.\n  1948. Data_GUI_BROKEN.m (line 340): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1949. Data_GUI_BROKEN.m (line 340): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1950. Data_GUI_BROKEN.m (line 734): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1951. Data_GUI_BROKEN.m (line 735): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1952. Data_GUI_BROKEN.m (line 736): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1953. Data_GUI_BROKEN.m (line 737): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1954. Data_GUI_BROKEN.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1955. Data_GUI_BROKEN.m (line 754): Function might be unused.\n  1956. Data_GUI_BROKEN.m (line 979): Function might be unused.\n  1957. Data_GUI_BROKEN.m (line 994): Value assigned to variable might be unused.\n  1958. Data_GUI_BROKEN.m (line 1016): Function might be unused.\n  1959. Data_GUI_BROKEN.m (line 1193): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1960. Data_GUI_BROKEN.m (line 1194): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1961. Data_GUI_BROKEN.m (line 1195): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1962. Data_GUI_BROKEN.m (line 1196): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1963. Data_GUI_BROKEN.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1964. Data_GUI_BROKEN.m (line 1227): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1965. Data_GUI_BROKEN.m (line 1228): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1966. Data_GUI_BROKEN.m (line 1229): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  1967. Data_GUI_BROKEN.m (line 1249): Function might be unused.\n  1968. Data_GUI_BROKEN.m (line 1290): Function might be unused.\n  1969. Data_GUI_BROKEN.m (line 1366): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1970. Data_GUI_BROKEN.m (line 1436): Value assigned to variable might be unused.\n  1971. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1972. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1973. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1974. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1975. Data_GUI_BROKEN.m (line 1652): Input argument might be unused. Consider replacing the argument with ~ instead.\n  1976. Data_GUI_BROKEN.m (line 1654): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  1977. Data_GUI_BROKEN.m (line 1654): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  1978. Data_GUI_BROKEN.m (line 1664): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1979. Data_GUI_BROKEN.m (line 1665): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1980. Data_GUI_BROKEN.m (line 1666): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1981. Data_GUI_BROKEN.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1982. Data_GUI_BROKEN.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1983. Data_GUI_BROKEN.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1984. Data_GUI_BROKEN.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1985. Data_GUI_BROKEN.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1986. Data_GUI_BROKEN.m (line 1672): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1987. Data_GUI_BROKEN.m (line 1673): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1988. Data_GUI_BROKEN.m (line 1674): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1989. Data_GUI_BROKEN.m (line 1675): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1990. Data_GUI_BROKEN.m (line 1676): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1991. Data_GUI_BROKEN.m (line 1677): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1992. Data_GUI_BROKEN.m (line 1678): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1993. Data_GUI_BROKEN.m (line 1679): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1994. Data_GUI_BROKEN.m (line 1680): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1995. Data_GUI_BROKEN.m (line 1681): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1996. Data_GUI_BROKEN.m (line 1682): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1997. Data_GUI_BROKEN.m (line 1683): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1998. Data_GUI_BROKEN.m (line 1684): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  1999. Data_GUI_BROKEN.m (line 1685): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2000. Data_GUI_BROKEN.m (line 1686): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2001. Data_GUI_BROKEN.m (line 1687): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2002. Data_GUI_BROKEN.m (line 1688): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2003. Data_GUI_BROKEN.m (line 1689): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2004. Data_GUI_BROKEN.m (line 1690): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2005. Data_GUI_BROKEN.m (line 1691): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2006. Data_GUI_BROKEN.m (line 1692): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2007. Data_GUI_BROKEN.m (line 1693): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2008. Data_GUI_BROKEN.m (line 1694): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2009. Data_GUI_BROKEN.m (line 1695): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2010. Data_GUI_BROKEN.m (line 1696): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2011. Data_GUI_BROKEN.m (line 1697): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2012. Data_GUI_BROKEN.m (line 1698): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2013. Data_GUI_BROKEN.m (line 1699): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2014. Data_GUI_BROKEN.m (line 1700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2015. Data_GUI_BROKEN.m (line 1701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2016. Data_GUI_BROKEN.m (line 1702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2017. Data_GUI_BROKEN.m (line 1703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2018. Data_GUI_BROKEN.m (line 1704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2019. Data_GUI_BROKEN.m (line 1705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2020. Data_GUI_BROKEN.m (line 1706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2021. Data_GUI_BROKEN.m (line 1707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2022. Data_GUI_BROKEN.m (line 1708): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2023. Data_GUI_BROKEN.m (line 1709): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2024. Data_GUI_BROKEN.m (line 1710): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2025. Data_GUI_BROKEN.m (line 1711): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2026. Data_GUI_BROKEN.m (line 1712): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2027. Data_GUI_BROKEN.m (line 1713): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2028. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2029. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2030. Data_GUI_BROKEN.m (line 1767): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2031. Data_GUI_BROKEN.m (line 1768): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2032. Data_GUI_BROKEN.m (line 1769): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2033. Data_GUI_BROKEN.m (line 1770): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2034. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2035. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2036. Data_GUI_BROKEN.m (line 1812): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2037. Data_GUI_BROKEN.m (line 1813): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2038. Data_GUI_BROKEN.m (line 1814): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2039. Data_GUI_BROKEN.m (line 1825): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2040. Data_GUI_BROKEN.m (line 1826): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2041. Data_GUI_BROKEN.m (line 1831): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2042. Data_GUI_BROKEN.m (line 1832): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2043. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2044. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2045. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2046. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2047. Data_GUI_BROKEN.m (line 1897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2048. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2049. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2050. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2051. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2052. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2053. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2054. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2055. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2056. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2057. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2058. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2059. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2060. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2061. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2062. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2063. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2064. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2065. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2066. Data_GUI_BROKEN.m (line 2199): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2067. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2068. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2069. Data_GUI_BROKEN.m (line 2215): Function might be unused.\n  2070. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2071. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2072. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2073. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2074. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2075. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2076. Data_GUI_BROKEN.m (line 2427): Value assigned to variable might be unused.\n  2077. Data_GUI_BROKEN.m (line 2486): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  2078. Data_GUI_BROKEN.m (line 2630): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  2079. Data_GUI_BROKEN.m (line 2769): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2080. Data_GUI_BROKEN.m (line 2769): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2081. Data_GUI_BROKEN.m (line 2891): Function might be unused.\n  2082. Data_GUI_BROKEN.m (line 3068): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2083. Data_GUI_BROKEN.m (line 3068): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2084. Data_GUI_BROKEN.m (line 3100): Function might be unused.\n  2085. Data_GUI_BROKEN.m (line 3251): Function might be unused.\n  2086. Data_GUI_BROKEN.m (line 3329): Function might be unused.\n  2087. Data_GUI_BROKEN.m (line 3344): This keyword might not be aligned with its matching END on line 3355.\n  2088. Data_GUI_BROKEN.m (line 3357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  2089. Data_GUI_BROKEN.m (line 3573): This keyword might not be aligned with its matching END on line 3575.\n  2090. Data_GUI_BROKEN.m (line 3677): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  2091. Data_GUI_BROKEN.m (line 3712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2092. Data_GUI_BROKEN.m (line 3746): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2093. Data_GUI_BROKEN.m (line 3760): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2094. Data_GUI_BROKEN.m (line 3768): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2095. Data_GUI_BROKEN.m (line 3768): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2096. Data_GUI_BROKEN.m (line 3967): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2097. Data_GUI_BROKEN.m (line 4007): Function might be unused.\n  2098. Data_GUI_BROKEN.m (line 4039): Function might be unused.\n  2099. Data_GUI_BROKEN.m (line 4051): Value assigned to variable might be unused.\n  2100. Data_GUI_BROKEN.m (line 4061): Value assigned to variable might be unused.\n  2101. Data_GUI_BROKEN.m (line 4066): Value assigned to variable might be unused.\n  2102. Data_GUI_BROKEN.m (line 4071): Value assigned to variable might be unused.\n  2103. Data_GUI_BROKEN.m (line 4088): Value assigned to variable might be unused.\n  2104. Data_GUI_BROKEN.m (line 4197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2105. Data_GUI_BROKEN.m (line 4198): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2106. Data_GUI_BROKEN.m (line 4205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2107. Data_GUI_BROKEN.m (line 4206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2108. Data_GUI_BROKEN.m (line 4219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2109. Data_GUI_BROKEN.m (line 4221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2110. Data_GUI_BROKEN.m (line 4243): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2111. Data_GUI_BROKEN.m (line 4244): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2112. Data_GUI_BROKEN.m (line 4262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2113. Data_GUI_BROKEN.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2114. Data_GUI_BROKEN.m (line 4282): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2115. Data_GUI_BROKEN.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2116. Data_GUI_BROKEN.m (line 4294): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2117. Data_GUI_BROKEN.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2118. Data_GUI_BROKEN.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2119. Data_GUI_BROKEN.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2120. Data_GUI_BROKEN.m (line 4325): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2121. Data_GUI_BROKEN.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2122. Data_GUI_BROKEN.m (line 4370): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2123. Data_GUI_BROKEN.m (line 4371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2124. Data_GUI_BROKEN.m (line 4378): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2125. Data_GUI_BROKEN.m (line 4379): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2126. Data_GUI_BROKEN.m (line 4398): Function might be unused.\n  2127. Data_GUI_BROKEN.m (line 4456): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2128. Data_GUI_BROKEN.m (line 4457): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2129. Data_GUI_BROKEN.m (line 4467): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2130. Data_GUI_BROKEN.m (line 4468): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2131. Data_GUI_BROKEN.m (line 4487): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2132. Data_GUI_BROKEN.m (line 4488): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2133. Data_GUI_BROKEN.m (line 4541): Function might be unused.\n  2134. Data_GUI_BROKEN.m (line 4588): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2135. Data_GUI_BROKEN.m (line 4653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2136. Data_GUI_BROKEN.m (line 4654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2137. Data_GUI_BROKEN.m (line 4702): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2138. Data_GUI_BROKEN.m (line 4711): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2139. Data_GUI_BROKEN.m (line 4716): This statement (and possibly following ones) cannot be reached.\n  2140. Data_GUI_BROKEN.m (line 4718): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2141. Data_GUI_BROKEN.m (line 4725): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2142. Data_GUI_BROKEN.m (line 4755): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2143. Data_GUI_BROKEN.m (line 4795): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2144. Data_GUI_BROKEN.m (line 4818): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2145. Data_GUI_BROKEN.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2146. Data_GUI_BROKEN.m (line 4841): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2147. Data_GUI_BROKEN.m (line 4854): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2148. Data_GUI_BROKEN.m (line 4948): Function might be unused.\n  2149. Data_GUI_BROKEN.m (line 4954): Value assigned to variable might be unused.\n  2150. Data_GUI_BROKEN.m (line 4982): Value assigned to variable might be unused.\n  2151. Data_GUI_BROKEN.m (line 5007): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2152. Data_GUI_BROKEN.m (line 5029): Value assigned to variable might be unused.\n  2153. Data_GUI_BROKEN.m (line 5063): Value assigned to variable might be unused.\n  2154. Data_GUI_BROKEN.m (line 5092): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2155. Data_GUI_BROKEN.m (line 5125): Function might be unused.\n  2156. Data_GUI_BROKEN.m (line 5169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2157. Data_GUI_BROKEN.m (line 5170): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2158. Data_GUI_BROKEN.m (line 5193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2159. Data_GUI_BROKEN.m (line 5194): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2160. Data_GUI_BROKEN.m (line 5214): Function might be unused.\n  2161. Data_GUI_BROKEN.m (line 5291): Function might be unused.\n  2162. Data_GUI_BROKEN.m (line 5308): Value assigned to variable might be unused.\n  2163. Data_GUI_BROKEN.m (line 5366): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2164. Data_GUI_BROKEN.m (line 5367): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2165. Data_GUI_BROKEN.m (line 5371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2166. Data_GUI_BROKEN.m (line 5372): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2167. Data_GUI_BROKEN.m (line 5390): Function might be unused.\n  2168. Data_GUI_BROKEN.m (line 5448): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2169. Data_GUI_BROKEN.m (line 5448): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2170. Data_GUI_BROKEN.m (line 5480): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2171. Data_GUI_BROKEN.m (line 5480): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2172. Data_GUI_BROKEN.m (line 5643): Function might be unused.\n  2173. Data_GUI_BROKEN.m (line 5673): Function might be unused.\n  2174. Data_GUI_BROKEN.m (line 5764): Function might be unused.\n  2175. Data_GUI_BROKEN.m (line 5802): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2176. Data_GUI_BROKEN.m (line 5833): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2177. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\Data_GUI_BROKEN.m: Missing arguments validation block\n  2178. Data_GUI_No_Batch.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_No_Batch'.\n  2179. Data_GUI_No_Batch.m (line 237): Value assigned to variable might be unused.\n  2180. Data_GUI_No_Batch.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2181. Data_GUI_No_Batch.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2182. Data_GUI_No_Batch.m (line 700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2183. Data_GUI_No_Batch.m (line 701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2184. Data_GUI_No_Batch.m (line 702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2185. Data_GUI_No_Batch.m (line 703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2186. Data_GUI_No_Batch.m (line 704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2187. Data_GUI_No_Batch.m (line 720): Function might be unused.\n  2188. Data_GUI_No_Batch.m (line 945): Function might be unused.\n  2189. Data_GUI_No_Batch.m (line 960): Value assigned to variable might be unused.\n  2190. Data_GUI_No_Batch.m (line 982): Function might be unused.\n  2191. Data_GUI_No_Batch.m (line 1157): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2192. Data_GUI_No_Batch.m (line 1158): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2193. Data_GUI_No_Batch.m (line 1159): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2194. Data_GUI_No_Batch.m (line 1160): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2195. Data_GUI_No_Batch.m (line 1161): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2196. Data_GUI_No_Batch.m (line 1191): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2197. Data_GUI_No_Batch.m (line 1192): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2198. Data_GUI_No_Batch.m (line 1193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2199. Data_GUI_No_Batch.m (line 1213): Function might be unused.\n  2200. Data_GUI_No_Batch.m (line 1254): Function might be unused.\n  2201. Data_GUI_No_Batch.m (line 1330): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2202. Data_GUI_No_Batch.m (line 1400): Value assigned to variable might be unused.\n  2203. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2204. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2205. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2206. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2207. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2208. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2209. Data_GUI_No_Batch.m (line 1565): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2210. Data_GUI_No_Batch.m (line 1566): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2211. Data_GUI_No_Batch.m (line 1567): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2212. Data_GUI_No_Batch.m (line 1568): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2213. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2214. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2215. Data_GUI_No_Batch.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2216. Data_GUI_No_Batch.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2217. Data_GUI_No_Batch.m (line 1612): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2218. Data_GUI_No_Batch.m (line 1623): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2219. Data_GUI_No_Batch.m (line 1624): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2220. Data_GUI_No_Batch.m (line 1629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2221. Data_GUI_No_Batch.m (line 1630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2222. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2223. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2224. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2225. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2226. Data_GUI_No_Batch.m (line 1695): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2227. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2228. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2229. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2230. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2231. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2232. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2233. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2234. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2235. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2236. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2237. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2238. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2239. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2240. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2241. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2242. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2243. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2244. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2245. Data_GUI_No_Batch.m (line 1997): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2246. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2247. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2248. Data_GUI_No_Batch.m (line 2013): Function might be unused.\n  2249. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2250. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2251. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2252. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2253. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2254. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2255. Data_GUI_No_Batch.m (line 2222): Value assigned to variable might be unused.\n  2256. Data_GUI_No_Batch.m (line 2281): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  2257. Data_GUI_No_Batch.m (line 2385): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  2258. Data_GUI_No_Batch.m (line 2524): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2259. Data_GUI_No_Batch.m (line 2524): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2260. Data_GUI_No_Batch.m (line 2646): Function might be unused.\n  2261. Data_GUI_No_Batch.m (line 2821): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2262. Data_GUI_No_Batch.m (line 2821): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2263. Data_GUI_No_Batch.m (line 2853): Function might be unused.\n  2264. Data_GUI_No_Batch.m (line 2971): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2265. Data_GUI_No_Batch.m (line 3151): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2266. Data_GUI_No_Batch.m (line 3249): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  2267. Data_GUI_No_Batch.m (line 3297): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2268. Data_GUI_No_Batch.m (line 3297): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2269. Data_GUI_No_Batch.m (line 3626): This keyword might not be aligned with its matching END on line 3637.\n  2270. Data_GUI_No_Batch.m (line 3639): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  2271. Data_GUI_No_Batch.m (line 3855): This keyword might not be aligned with its matching END on line 3857.\n  2272. Data_GUI_No_Batch.m (line 3959): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  2273. Data_GUI_No_Batch.m (line 3969): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2274. Data_GUI_No_Batch.m (line 3970): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2275. Data_GUI_No_Batch.m (line 3971): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2276. Data_GUI_No_Batch.m (line 4014): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2277. Data_GUI_No_Batch.m (line 4015): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2278. Data_GUI_No_Batch.m (line 4025): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  2279. Data_GUI_No_Batch.m (line 4041): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2280. Data_GUI_No_Batch.m (line 4042): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2281. Data_GUI_No_Batch.m (line 4083): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2282. Data_GUI_No_Batch.m (line 4117): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2283. Data_GUI_No_Batch.m (line 4131): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2284. Data_GUI_No_Batch.m (line 4139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2285. Data_GUI_No_Batch.m (line 4139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2286. Data_GUI_No_Batch.m (line 4338): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2287. Data_GUI_No_Batch.m (line 4378): Function might be unused.\n  2288. Data_GUI_No_Batch.m (line 4422): Value assigned to variable might be unused.\n  2289. Data_GUI_No_Batch.m (line 4432): Value assigned to variable might be unused.\n  2290. Data_GUI_No_Batch.m (line 4437): Value assigned to variable might be unused.\n  2291. Data_GUI_No_Batch.m (line 4442): Value assigned to variable might be unused.\n  2292. Data_GUI_No_Batch.m (line 4459): Value assigned to variable might be unused.\n  2293. Data_GUI_No_Batch.m (line 4568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2294. Data_GUI_No_Batch.m (line 4569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2295. Data_GUI_No_Batch.m (line 4576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2296. Data_GUI_No_Batch.m (line 4577): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2297. Data_GUI_No_Batch.m (line 4590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2298. Data_GUI_No_Batch.m (line 4592): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2299. Data_GUI_No_Batch.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2300. Data_GUI_No_Batch.m (line 4615): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2301. Data_GUI_No_Batch.m (line 4635): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2302. Data_GUI_No_Batch.m (line 4636): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2303. Data_GUI_No_Batch.m (line 4648): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2304. Data_GUI_No_Batch.m (line 4649): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2305. Data_GUI_No_Batch.m (line 4667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2306. Data_GUI_No_Batch.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2307. Data_GUI_No_Batch.m (line 4712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2308. Data_GUI_No_Batch.m (line 4713): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2309. Data_GUI_No_Batch.m (line 4720): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2310. Data_GUI_No_Batch.m (line 4721): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2311. Data_GUI_No_Batch.m (line 4798): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2312. Data_GUI_No_Batch.m (line 4799): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2313. Data_GUI_No_Batch.m (line 4809): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2314. Data_GUI_No_Batch.m (line 4810): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2315. Data_GUI_No_Batch.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2316. Data_GUI_No_Batch.m (line 4830): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2317. Data_GUI_No_Batch.m (line 4930): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2318. Data_GUI_No_Batch.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2319. Data_GUI_No_Batch.m (line 4996): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2320. Data_GUI_No_Batch.m (line 5044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2321. Data_GUI_No_Batch.m (line 5053): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2322. Data_GUI_No_Batch.m (line 5058): This statement (and possibly following ones) cannot be reached.\n  2323. Data_GUI_No_Batch.m (line 5060): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2324. Data_GUI_No_Batch.m (line 5067): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2325. Data_GUI_No_Batch.m (line 5097): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2326. Data_GUI_No_Batch.m (line 5137): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2327. Data_GUI_No_Batch.m (line 5160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2328. Data_GUI_No_Batch.m (line 5171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2329. Data_GUI_No_Batch.m (line 5183): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2330. Data_GUI_No_Batch.m (line 5196): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2331. Data_GUI_No_Batch.m (line 5225): Value assigned to variable might be unused.\n  2332. Data_GUI_No_Batch.m (line 5252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2333. Data_GUI_No_Batch.m (line 5284): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  2334. Data_GUI_No_Batch.m (line 5298): Value assigned to variable might be unused.\n  2335. Data_GUI_No_Batch.m (line 5316): Value assigned to variable might be unused.\n  2336. Data_GUI_No_Batch.m (line 5332): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2337. Data_GUI_No_Batch.m (line 5360): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2338. Data_GUI_No_Batch.m (line 5447): Function might be unused.\n  2339. Data_GUI_No_Batch.m (line 5453): Value assigned to variable might be unused.\n  2340. Data_GUI_No_Batch.m (line 5481): Value assigned to variable might be unused.\n  2341. Data_GUI_No_Batch.m (line 5506): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2342. Data_GUI_No_Batch.m (line 5528): Value assigned to variable might be unused.\n  2343. Data_GUI_No_Batch.m (line 5562): Value assigned to variable might be unused.\n  2344. Data_GUI_No_Batch.m (line 5591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2345. Data_GUI_No_Batch.m (line 5624): Function might be unused.\n  2346. Data_GUI_No_Batch.m (line 5668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2347. Data_GUI_No_Batch.m (line 5669): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2348. Data_GUI_No_Batch.m (line 5692): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2349. Data_GUI_No_Batch.m (line 5693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2350. Data_GUI_No_Batch.m (line 5790): Function might be unused.\n  2351. Data_GUI_No_Batch.m (line 5807): Value assigned to variable might be unused.\n  2352. Data_GUI_No_Batch.m (line 5865): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2353. Data_GUI_No_Batch.m (line 5866): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2354. Data_GUI_No_Batch.m (line 5870): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2355. Data_GUI_No_Batch.m (line 5871): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2356. Data_GUI_No_Batch.m (line 5889): Function might be unused.\n  2357. Data_GUI_No_Batch.m (line 5947): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2358. Data_GUI_No_Batch.m (line 5947): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2359. Data_GUI_No_Batch.m (line 5979): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2360. Data_GUI_No_Batch.m (line 5979): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2361. Data_GUI_No_Batch.m (line 6142): Function might be unused.\n  2362. Data_GUI_No_Batch.m (line 6172): Function might be unused.\n  2363. Data_GUI_No_Batch.m (line 6263): Function might be unused.\n  2364. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\Data_GUI_No_Batch.m: Missing arguments validation block\n  2365. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  2366. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\addModelWorkspaceData.m: Missing arguments validation block\n  2367. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\checkHighMemoryUsage.m: Missing function docstring\n  2368. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\checkHighMemoryUsage.m: Missing arguments validation block\n  2369. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\checkModelConfiguration.m: Missing arguments validation block\n  2370. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\checkStopRequest.m: Missing function docstring\n  2371. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\checkStopRequest.m: Missing arguments validation block\n  2372. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2373. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2374. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2375. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2376. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2377. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2378. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2379. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\check_model_configuration.m: Missing arguments validation block\n  2380. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2381. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2382. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2383. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\checkpoint_recovery.m: Missing arguments validation block\n  2384. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\combineDataSources.m: Missing arguments validation block\n  2385. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  2386. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2387. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2388. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2389. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2390. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2391. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2392. data_extraction_functions.m (line 146): Function might be unused.\n  2393. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2394. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2395. data_extraction_functions.m (line 202): Function might be unused.\n  2396. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2397. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2398. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2399. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2400. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\data_extraction_functions.m: Missing function docstring\n  2401. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\data_extraction_functions.m: Missing arguments validation block\n  2402. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2403. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\endPhase.m: Missing arguments validation block\n  2404. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  2405. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2406. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2407. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2408. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2409. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2410. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2411. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractAllSignalsFromBus.m: Missing arguments validation block\n  2412. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  2413. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractCoefficientsFromTable.m: Missing function docstring\n  2414. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractCoefficientsFromTable.m: Missing arguments validation block\n  2415. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2416. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2417. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2418. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2419. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2420. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2421. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2422. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2423. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2424. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2425. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2426. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2427. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractCombinedSignalBusData.m: Missing function docstring\n  2428. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractCombinedSignalBusData.m: Missing arguments validation block\n  2429. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2430. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2431. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2432. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2433. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2434. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractConstantMatrixData.m: Missing function docstring\n  2435. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractConstantMatrixData.m: Missing arguments validation block\n  2436. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractDataFromField.m: Missing arguments validation block\n  2437. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  2438. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  2439. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractDataWithOptions.m: Missing arguments validation block\n  2440. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  2441. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  2442. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  2443. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  2444. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  2445. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2446. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2447. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2448. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2449. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2450. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2451. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2452. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2453. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2454. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2455. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2456. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2457. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2458. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2459. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2460. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2461. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2462. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2463. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractFromCombinedSignalBus.m: Missing function docstring\n  2464. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  2465. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  2466. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  2467. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  2468. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  2469. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  2470. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  2471. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2472. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2473. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2474. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2475. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2476. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2477. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2478. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2479. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2480. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2481. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2482. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2483. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2484. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2485. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2486. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2487. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  2488. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  2489. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2490. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2491. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractFromNestedStruct.m: Missing arguments validation block\n  2492. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2493. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2494. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2495. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2496. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2497. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2498. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractLogsoutDataFixed.m: Missing function docstring\n  2499. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractLogsoutDataFixed.m: Missing arguments validation block\n  2500. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractSignalsFromSimOut.m: Missing arguments validation block\n  2501. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2502. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2503. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2504. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractSimscapeDataRecursive.m: Missing function docstring\n  2505. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  2506. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractTimeSeriesData.m: Missing function docstring\n  2507. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractTimeSeriesData.m: Missing arguments validation block\n  2508. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2509. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2510. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2511. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2512. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractWorkspaceOutputs.m: Missing function docstring\n  2513. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\extractWorkspaceOutputs.m: Missing arguments validation block\n  2514. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2515. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2516. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  2517. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2518. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2519. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2520. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\fallbackSimlogExtraction.m: Missing function docstring\n  2521. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\fallbackSimlogExtraction.m: Missing arguments validation block\n  2522. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\generateRandomCoefficients.m: Missing arguments validation block\n  2523. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\getMemoryInfo.m: Missing function docstring\n  2524. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\getMemoryInfo.m: Missing arguments validation block\n  2525. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\getMemoryUsage.m: Missing arguments validation block\n  2526. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2527. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2528. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2529. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2530. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2531. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2532. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2533. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  2534. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2535. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2536. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2537. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2538. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2539. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\getPolynomialParameterInfo.m: Missing arguments validation block\n  2540. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\getShortenedJointName.m: Missing arguments validation block\n  2541. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2542. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2543. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  2544. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  2545. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\loadInputFile.m: Missing function docstring\n  2546. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\loadInputFile.m: Missing arguments validation block\n  2547. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\logBatchResult.m: Missing arguments validation block\n  2548. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2549. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\logMessage.m: Missing arguments validation block\n  2550. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\logical2str.m: Missing function docstring\n  2551. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\logical2str.m: Missing arguments validation block\n  2552. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  2553. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\memory_monitor.m: Missing arguments validation block\n  2554. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\mergeTables.m: Missing function docstring\n  2555. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\mergeTables.m: Missing arguments validation block\n  2556. performance_monitor.m (line 11): Persistent variable might be unused.\n  2557. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2558. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2559. performance_monitor.m (line 77): Function might be unused.\n  2560. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2561. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2562. performance_monitor.m (line 118): Function might be unused.\n  2563. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2564. performance_monitor.m (line 133): Function might be unused.\n  2565. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2566. performance_monitor.m (line 149): Function might be unused.\n  2567. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2568. performance_monitor.m (line 162): Function might be unused.\n  2569. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2570. performance_monitor.m (line 175): Function might be unused.\n  2571. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2572. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2573. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2574. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\performance_monitor.m: Missing arguments validation block\n  2575. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  2576. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  2577. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2578. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2579. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\processSimulationOutput.m: Missing function docstring\n  2580. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\processSimulationOutput.m: Missing arguments validation block\n  2581. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2582. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\recordBatchTime.m: Missing arguments validation block\n  2583. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2584. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\recordPhase.m: Missing arguments validation block\n  2585. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\resampleDataToFrequency.m: Missing function docstring\n  2586. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\resampleDataToFrequency.m: Missing arguments validation block\n  2587. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\restoreWorkspace.m: Missing arguments validation block\n  2588. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\runSingleTrial.m: Missing arguments validation block\n  2589. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\setModelParameters.m: Missing arguments validation block\n  2590. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2591. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\setPolynomialCoefficients.m: Missing arguments validation block\n  2592. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\shouldShowDebug.m: Missing function docstring\n  2593. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\shouldShowDebug.m: Missing arguments validation block\n  2594. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\shouldShowNormal.m: Missing function docstring\n  2595. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\shouldShowNormal.m: Missing arguments validation block\n  2596. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\shouldShowVerbose.m: Missing function docstring\n  2597. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\shouldShowVerbose.m: Missing arguments validation block\n  2598. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  2599. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2600. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\traverseSimlogNode.m: Missing arguments validation block\n  2601. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2602. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2603. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2604. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2605. verbosity_control.m (line 203): Function might be unused.\n  2606. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2607. verbosity_control.m (line 225): Function might be unused.\n  2608. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2609. verbosity_control.m (line 248): Function might be unused.\n  2610. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2611. verbosity_control.m (line 274): Function might be unused.\n  2612. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2613. verbosity_control.m (line 293): Function might be unused.\n  2614. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2615. verbosity_control.m (line 320): Function might be unused.\n  2616. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2617. verbosity_control.m (line 335): Function might be unused.\n  2618. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  2619. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_120628\\verbosity_control.m: Missing arguments validation block\n  2620. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  2621. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2622. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2623. Data_GUI.m (line 725): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2624. Data_GUI.m (line 726): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2625. Data_GUI.m (line 727): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2626. Data_GUI.m (line 728): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2627. Data_GUI.m (line 729): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2628. Data_GUI.m (line 745): Function might be unused.\n  2629. Data_GUI.m (line 970): Function might be unused.\n  2630. Data_GUI.m (line 985): Value assigned to variable might be unused.\n  2631. Data_GUI.m (line 1007): Function might be unused.\n  2632. Data_GUI.m (line 1184): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2633. Data_GUI.m (line 1185): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2634. Data_GUI.m (line 1186): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2635. Data_GUI.m (line 1187): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2636. Data_GUI.m (line 1188): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2637. Data_GUI.m (line 1218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2638. Data_GUI.m (line 1219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2639. Data_GUI.m (line 1220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2640. Data_GUI.m (line 1240): Function might be unused.\n  2641. Data_GUI.m (line 1281): Function might be unused.\n  2642. Data_GUI.m (line 1357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2643. Data_GUI.m (line 1427): Value assigned to variable might be unused.\n  2644. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2645. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2646. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2647. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2648. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2649. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2650. Data_GUI.m (line 1595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2651. Data_GUI.m (line 1596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2652. Data_GUI.m (line 1597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2653. Data_GUI.m (line 1598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2654. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2655. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2656. Data_GUI.m (line 1640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2657. Data_GUI.m (line 1641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2658. Data_GUI.m (line 1642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2659. Data_GUI.m (line 1653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2660. Data_GUI.m (line 1654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2661. Data_GUI.m (line 1659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2662. Data_GUI.m (line 1660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2663. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2664. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2665. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2666. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2667. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2668. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2669. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2670. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2671. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2672. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2673. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2674. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2675. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2676. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2677. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2678. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2679. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2680. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2681. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2682. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2683. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2684. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2685. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2686. Data_GUI.m (line 2027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2687. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2688. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2689. Data_GUI.m (line 2043): Function might be unused.\n  2690. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2691. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2692. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2693. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2694. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2695. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2696. Data_GUI.m (line 2257): Value assigned to variable might be unused.\n  2697. Data_GUI.m (line 2316): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  2698. Data_GUI.m (line 2460): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  2699. Data_GUI.m (line 2599): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2700. Data_GUI.m (line 2599): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2701. Data_GUI.m (line 2721): Function might be unused.\n  2702. Data_GUI.m (line 2898): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2703. Data_GUI.m (line 2898): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2704. Data_GUI.m (line 2930): Function might be unused.\n  2705. Data_GUI.m (line 3081): Function might be unused.\n  2706. Data_GUI.m (line 3159): Function might be unused.\n  2707. Data_GUI.m (line 3174): This keyword might not be aligned with its matching END on line 3185.\n  2708. Data_GUI.m (line 3187): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  2709. Data_GUI.m (line 3403): This keyword might not be aligned with its matching END on line 3405.\n  2710. Data_GUI.m (line 3507): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  2711. Data_GUI.m (line 3542): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2712. Data_GUI.m (line 3576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2713. Data_GUI.m (line 3590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2714. Data_GUI.m (line 3598): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2715. Data_GUI.m (line 3598): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2716. Data_GUI.m (line 3797): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2717. Data_GUI.m (line 3837): Function might be unused.\n  2718. Data_GUI.m (line 3869): Function might be unused.\n  2719. Data_GUI.m (line 3881): Value assigned to variable might be unused.\n  2720. Data_GUI.m (line 3891): Value assigned to variable might be unused.\n  2721. Data_GUI.m (line 3896): Value assigned to variable might be unused.\n  2722. Data_GUI.m (line 3901): Value assigned to variable might be unused.\n  2723. Data_GUI.m (line 3918): Value assigned to variable might be unused.\n  2724. Data_GUI.m (line 4027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2725. Data_GUI.m (line 4028): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2726. Data_GUI.m (line 4035): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2727. Data_GUI.m (line 4036): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2728. Data_GUI.m (line 4049): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2729. Data_GUI.m (line 4051): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2730. Data_GUI.m (line 4073): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2731. Data_GUI.m (line 4074): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2732. Data_GUI.m (line 4094): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2733. Data_GUI.m (line 4095): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2734. Data_GUI.m (line 4107): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2735. Data_GUI.m (line 4108): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2736. Data_GUI.m (line 4126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2737. Data_GUI.m (line 4127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2738. Data_GUI.m (line 4171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2739. Data_GUI.m (line 4172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2740. Data_GUI.m (line 4179): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2741. Data_GUI.m (line 4180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2742. Data_GUI.m (line 4199): Function might be unused.\n  2743. Data_GUI.m (line 4257): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2744. Data_GUI.m (line 4258): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2745. Data_GUI.m (line 4268): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2746. Data_GUI.m (line 4269): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2747. Data_GUI.m (line 4288): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2748. Data_GUI.m (line 4289): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2749. Data_GUI.m (line 4342): Function might be unused.\n  2750. Data_GUI.m (line 4389): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2751. Data_GUI.m (line 4454): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2752. Data_GUI.m (line 4455): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2753. Data_GUI.m (line 4503): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2754. Data_GUI.m (line 4512): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2755. Data_GUI.m (line 4517): This statement (and possibly following ones) cannot be reached.\n  2756. Data_GUI.m (line 4519): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2757. Data_GUI.m (line 4526): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2758. Data_GUI.m (line 4556): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2759. Data_GUI.m (line 4596): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2760. Data_GUI.m (line 4619): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2761. Data_GUI.m (line 4630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2762. Data_GUI.m (line 4642): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2763. Data_GUI.m (line 4655): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2764. Data_GUI.m (line 4749): Function might be unused.\n  2765. Data_GUI.m (line 4755): Value assigned to variable might be unused.\n  2766. Data_GUI.m (line 4783): Value assigned to variable might be unused.\n  2767. Data_GUI.m (line 4808): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2768. Data_GUI.m (line 4830): Value assigned to variable might be unused.\n  2769. Data_GUI.m (line 4864): Value assigned to variable might be unused.\n  2770. Data_GUI.m (line 4893): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2771. Data_GUI.m (line 4926): Function might be unused.\n  2772. Data_GUI.m (line 4970): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2773. Data_GUI.m (line 4971): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2774. Data_GUI.m (line 4994): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2775. Data_GUI.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2776. Data_GUI.m (line 5015): Function might be unused.\n  2777. Data_GUI.m (line 5092): Function might be unused.\n  2778. Data_GUI.m (line 5109): Value assigned to variable might be unused.\n  2779. Data_GUI.m (line 5167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2780. Data_GUI.m (line 5168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2781. Data_GUI.m (line 5172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2782. Data_GUI.m (line 5173): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2783. Data_GUI.m (line 5191): Function might be unused.\n  2784. Data_GUI.m (line 5249): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2785. Data_GUI.m (line 5249): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2786. Data_GUI.m (line 5281): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2787. Data_GUI.m (line 5281): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2788. Data_GUI.m (line 5444): Function might be unused.\n  2789. Data_GUI.m (line 5474): Function might be unused.\n  2790. Data_GUI.m (line 5565): Function might be unused.\n  2791. Data_GUI.m (line 5603): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2792. Data_GUI.m (line 5634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2793. Data_GUI.m (line 5670): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2794. Data_GUI.m (line 5672): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2795. Data_GUI.m (line 5672): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2796. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124152\\Data_GUI.m: Missing arguments validation block\n  2797. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2798. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2799. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2800. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2801. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2802. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124152\\extractConstantMatrixData.m: Missing function docstring\n  2803. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124152\\extractConstantMatrixData.m: Missing arguments validation block\n  2804. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  2805. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  2806. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  2807. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  2808. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  2809. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2810. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2811. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2812. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2813. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2814. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2815. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2816. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2817. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2818. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2819. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2820. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2821. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2822. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2823. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2824. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2825. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2826. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2827. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124152\\extractFromCombinedSignalBus.m: Missing function docstring\n  2828. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124152\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  2829. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2830. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2831. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2832. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2833. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2834. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2835. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2836. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  2837. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2838. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2839. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2840. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2841. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2842. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124152\\getPolynomialParameterInfo.m: Missing arguments validation block\n  2843. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124152\\setModelParameters.m: Missing arguments validation block\n  2844. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  2845. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2846. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124152\\traverseSimlogNode.m: Missing arguments validation block\n  2847. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  2848. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2849. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2850. Data_GUI.m (line 725): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2851. Data_GUI.m (line 726): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2852. Data_GUI.m (line 727): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2853. Data_GUI.m (line 728): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2854. Data_GUI.m (line 729): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2855. Data_GUI.m (line 745): Function might be unused.\n  2856. Data_GUI.m (line 970): Function might be unused.\n  2857. Data_GUI.m (line 985): Value assigned to variable might be unused.\n  2858. Data_GUI.m (line 1007): Function might be unused.\n  2859. Data_GUI.m (line 1184): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2860. Data_GUI.m (line 1185): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2861. Data_GUI.m (line 1186): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2862. Data_GUI.m (line 1187): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2863. Data_GUI.m (line 1188): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2864. Data_GUI.m (line 1218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2865. Data_GUI.m (line 1219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2866. Data_GUI.m (line 1220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2867. Data_GUI.m (line 1240): Function might be unused.\n  2868. Data_GUI.m (line 1281): Function might be unused.\n  2869. Data_GUI.m (line 1357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2870. Data_GUI.m (line 1427): Value assigned to variable might be unused.\n  2871. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2872. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2873. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2874. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2875. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2876. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2877. Data_GUI.m (line 1595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2878. Data_GUI.m (line 1596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2879. Data_GUI.m (line 1597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2880. Data_GUI.m (line 1598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2881. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2882. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2883. Data_GUI.m (line 1640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2884. Data_GUI.m (line 1641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2885. Data_GUI.m (line 1642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  2886. Data_GUI.m (line 1653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2887. Data_GUI.m (line 1654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2888. Data_GUI.m (line 1659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2889. Data_GUI.m (line 1660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2890. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2891. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2892. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2893. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2894. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2895. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2896. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2897. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2898. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2899. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2900. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2901. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2902. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2903. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2904. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2905. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2906. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2907. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2908. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2909. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2910. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2911. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2912. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2913. Data_GUI.m (line 2027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2914. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2915. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2916. Data_GUI.m (line 2043): Function might be unused.\n  2917. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2918. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2919. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2920. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2921. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2922. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2923. Data_GUI.m (line 2257): Value assigned to variable might be unused.\n  2924. Data_GUI.m (line 2316): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  2925. Data_GUI.m (line 2460): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  2926. Data_GUI.m (line 2599): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2927. Data_GUI.m (line 2599): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2928. Data_GUI.m (line 2721): Function might be unused.\n  2929. Data_GUI.m (line 2898): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2930. Data_GUI.m (line 2898): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2931. Data_GUI.m (line 2930): Function might be unused.\n  2932. Data_GUI.m (line 3081): Function might be unused.\n  2933. Data_GUI.m (line 3159): Function might be unused.\n  2934. Data_GUI.m (line 3174): This keyword might not be aligned with its matching END on line 3185.\n  2935. Data_GUI.m (line 3187): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  2936. Data_GUI.m (line 3403): This keyword might not be aligned with its matching END on line 3405.\n  2937. Data_GUI.m (line 3507): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  2938. Data_GUI.m (line 3542): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2939. Data_GUI.m (line 3576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2940. Data_GUI.m (line 3590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2941. Data_GUI.m (line 3598): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  2942. Data_GUI.m (line 3598): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  2943. Data_GUI.m (line 3797): Input argument might be unused. Consider replacing the argument with ~ instead.\n  2944. Data_GUI.m (line 3837): Function might be unused.\n  2945. Data_GUI.m (line 3869): Function might be unused.\n  2946. Data_GUI.m (line 3881): Value assigned to variable might be unused.\n  2947. Data_GUI.m (line 3891): Value assigned to variable might be unused.\n  2948. Data_GUI.m (line 3896): Value assigned to variable might be unused.\n  2949. Data_GUI.m (line 3901): Value assigned to variable might be unused.\n  2950. Data_GUI.m (line 3918): Value assigned to variable might be unused.\n  2951. Data_GUI.m (line 4027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2952. Data_GUI.m (line 4028): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2953. Data_GUI.m (line 4035): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2954. Data_GUI.m (line 4036): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2955. Data_GUI.m (line 4049): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2956. Data_GUI.m (line 4051): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2957. Data_GUI.m (line 4073): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2958. Data_GUI.m (line 4074): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2959. Data_GUI.m (line 4094): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2960. Data_GUI.m (line 4095): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2961. Data_GUI.m (line 4107): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2962. Data_GUI.m (line 4108): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2963. Data_GUI.m (line 4126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2964. Data_GUI.m (line 4127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2965. Data_GUI.m (line 4171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2966. Data_GUI.m (line 4172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2967. Data_GUI.m (line 4179): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2968. Data_GUI.m (line 4180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2969. Data_GUI.m (line 4199): Function might be unused.\n  2970. Data_GUI.m (line 4257): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2971. Data_GUI.m (line 4258): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2972. Data_GUI.m (line 4268): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2973. Data_GUI.m (line 4269): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2974. Data_GUI.m (line 4288): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2975. Data_GUI.m (line 4289): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2976. Data_GUI.m (line 4342): Function might be unused.\n  2977. Data_GUI.m (line 4389): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2978. Data_GUI.m (line 4454): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2979. Data_GUI.m (line 4455): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2980. Data_GUI.m (line 4503): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2981. Data_GUI.m (line 4512): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2982. Data_GUI.m (line 4517): This statement (and possibly following ones) cannot be reached.\n  2983. Data_GUI.m (line 4519): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2984. Data_GUI.m (line 4526): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2985. Data_GUI.m (line 4556): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2986. Data_GUI.m (line 4596): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2987. Data_GUI.m (line 4619): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2988. Data_GUI.m (line 4630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2989. Data_GUI.m (line 4642): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2990. Data_GUI.m (line 4655): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2991. Data_GUI.m (line 4749): Function might be unused.\n  2992. Data_GUI.m (line 4755): Value assigned to variable might be unused.\n  2993. Data_GUI.m (line 4783): Value assigned to variable might be unused.\n  2994. Data_GUI.m (line 4808): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2995. Data_GUI.m (line 4830): Value assigned to variable might be unused.\n  2996. Data_GUI.m (line 4864): Value assigned to variable might be unused.\n  2997. Data_GUI.m (line 4893): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  2998. Data_GUI.m (line 4926): Function might be unused.\n  2999. Data_GUI.m (line 4970): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3000. Data_GUI.m (line 4971): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3001. Data_GUI.m (line 4994): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3002. Data_GUI.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3003. Data_GUI.m (line 5015): Function might be unused.\n  3004. Data_GUI.m (line 5092): Function might be unused.\n  3005. Data_GUI.m (line 5109): Value assigned to variable might be unused.\n  3006. Data_GUI.m (line 5167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3007. Data_GUI.m (line 5168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3008. Data_GUI.m (line 5172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3009. Data_GUI.m (line 5173): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3010. Data_GUI.m (line 5191): Function might be unused.\n  3011. Data_GUI.m (line 5249): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3012. Data_GUI.m (line 5249): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3013. Data_GUI.m (line 5281): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3014. Data_GUI.m (line 5281): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3015. Data_GUI.m (line 5444): Function might be unused.\n  3016. Data_GUI.m (line 5474): Function might be unused.\n  3017. Data_GUI.m (line 5565): Function might be unused.\n  3018. Data_GUI.m (line 5603): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3019. Data_GUI.m (line 5634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3020. Data_GUI.m (line 5670): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3021. Data_GUI.m (line 5672): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3022. Data_GUI.m (line 5672): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3023. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\Data_GUI.m: Missing arguments validation block\n  3024. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  3025. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\addModelWorkspaceData.m: Missing arguments validation block\n  3026. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\checkHighMemoryUsage.m: Missing function docstring\n  3027. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\checkHighMemoryUsage.m: Missing arguments validation block\n  3028. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\checkStopRequest.m: Missing function docstring\n  3029. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\checkStopRequest.m: Missing arguments validation block\n  3030. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  3031. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\extractCoefficientsFromTable.m: Missing function docstring\n  3032. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\extractCoefficientsFromTable.m: Missing arguments validation block\n  3033. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3034. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3035. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3036. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3037. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3038. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\extractConstantMatrixData.m: Missing function docstring\n  3039. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\extractConstantMatrixData.m: Missing arguments validation block\n  3040. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  3041. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  3042. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  3043. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  3044. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  3045. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3046. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3047. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3048. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3049. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3050. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3051. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3052. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3053. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3054. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3055. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3056. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3057. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3058. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3059. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3060. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3061. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3062. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3063. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\extractFromCombinedSignalBus.m: Missing function docstring\n  3064. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  3065. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\getMemoryInfo.m: Missing function docstring\n  3066. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\getMemoryInfo.m: Missing arguments validation block\n  3067. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3068. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3069. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3070. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3071. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3072. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3073. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3074. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  3075. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3076. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3077. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3078. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3079. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3080. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\getPolynomialParameterInfo.m: Missing arguments validation block\n  3081. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  3082. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\resampleDataToFrequency.m: Missing function docstring\n  3083. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\resampleDataToFrequency.m: Missing arguments validation block\n  3084. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\restoreWorkspace.m: Missing arguments validation block\n  3085. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\runSingleTrial.m: Missing arguments validation block\n  3086. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\setModelParameters.m: Missing arguments validation block\n  3087. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  3088. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3089. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124718\\traverseSimlogNode.m: Missing arguments validation block\n  3090. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  3091. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3092. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3093. Data_GUI.m (line 725): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3094. Data_GUI.m (line 726): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3095. Data_GUI.m (line 727): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3096. Data_GUI.m (line 728): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3097. Data_GUI.m (line 729): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3098. Data_GUI.m (line 745): Function might be unused.\n  3099. Data_GUI.m (line 970): Function might be unused.\n  3100. Data_GUI.m (line 985): Value assigned to variable might be unused.\n  3101. Data_GUI.m (line 1007): Function might be unused.\n  3102. Data_GUI.m (line 1184): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3103. Data_GUI.m (line 1185): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3104. Data_GUI.m (line 1186): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3105. Data_GUI.m (line 1187): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3106. Data_GUI.m (line 1188): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3107. Data_GUI.m (line 1218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3108. Data_GUI.m (line 1219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3109. Data_GUI.m (line 1220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3110. Data_GUI.m (line 1240): Function might be unused.\n  3111. Data_GUI.m (line 1281): Function might be unused.\n  3112. Data_GUI.m (line 1357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3113. Data_GUI.m (line 1427): Value assigned to variable might be unused.\n  3114. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3115. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3116. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3117. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3118. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3119. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3120. Data_GUI.m (line 1595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3121. Data_GUI.m (line 1596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3122. Data_GUI.m (line 1597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3123. Data_GUI.m (line 1598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3124. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3125. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3126. Data_GUI.m (line 1640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3127. Data_GUI.m (line 1641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3128. Data_GUI.m (line 1642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3129. Data_GUI.m (line 1653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3130. Data_GUI.m (line 1654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3131. Data_GUI.m (line 1659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3132. Data_GUI.m (line 1660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3133. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3134. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3135. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3136. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3137. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3138. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3139. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3140. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3141. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3142. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3143. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3144. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3145. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3146. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3147. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3148. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3149. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3150. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3151. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3152. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3153. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3154. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3155. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3156. Data_GUI.m (line 2027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3157. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3158. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3159. Data_GUI.m (line 2043): Function might be unused.\n  3160. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3161. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3162. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3163. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3164. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3165. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3166. Data_GUI.m (line 2257): Value assigned to variable might be unused.\n  3167. Data_GUI.m (line 2316): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  3168. Data_GUI.m (line 2460): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  3169. Data_GUI.m (line 2599): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3170. Data_GUI.m (line 2599): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3171. Data_GUI.m (line 2721): Function might be unused.\n  3172. Data_GUI.m (line 2898): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3173. Data_GUI.m (line 2898): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3174. Data_GUI.m (line 2930): Function might be unused.\n  3175. Data_GUI.m (line 3081): Function might be unused.\n  3176. Data_GUI.m (line 3159): Function might be unused.\n  3177. Data_GUI.m (line 3174): This keyword might not be aligned with its matching END on line 3185.\n  3178. Data_GUI.m (line 3187): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  3179. Data_GUI.m (line 3403): This keyword might not be aligned with its matching END on line 3405.\n  3180. Data_GUI.m (line 3507): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  3181. Data_GUI.m (line 3542): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3182. Data_GUI.m (line 3576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3183. Data_GUI.m (line 3590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3184. Data_GUI.m (line 3598): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3185. Data_GUI.m (line 3598): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3186. Data_GUI.m (line 3797): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3187. Data_GUI.m (line 3837): Function might be unused.\n  3188. Data_GUI.m (line 3869): Function might be unused.\n  3189. Data_GUI.m (line 3881): Value assigned to variable might be unused.\n  3190. Data_GUI.m (line 3891): Value assigned to variable might be unused.\n  3191. Data_GUI.m (line 3896): Value assigned to variable might be unused.\n  3192. Data_GUI.m (line 3901): Value assigned to variable might be unused.\n  3193. Data_GUI.m (line 3918): Value assigned to variable might be unused.\n  3194. Data_GUI.m (line 4027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3195. Data_GUI.m (line 4028): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3196. Data_GUI.m (line 4035): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3197. Data_GUI.m (line 4036): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3198. Data_GUI.m (line 4049): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3199. Data_GUI.m (line 4051): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3200. Data_GUI.m (line 4073): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3201. Data_GUI.m (line 4074): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3202. Data_GUI.m (line 4094): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3203. Data_GUI.m (line 4095): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3204. Data_GUI.m (line 4107): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3205. Data_GUI.m (line 4108): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3206. Data_GUI.m (line 4126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3207. Data_GUI.m (line 4127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3208. Data_GUI.m (line 4171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3209. Data_GUI.m (line 4172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3210. Data_GUI.m (line 4179): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3211. Data_GUI.m (line 4180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3212. Data_GUI.m (line 4199): Function might be unused.\n  3213. Data_GUI.m (line 4257): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3214. Data_GUI.m (line 4258): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3215. Data_GUI.m (line 4268): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3216. Data_GUI.m (line 4269): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3217. Data_GUI.m (line 4288): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3218. Data_GUI.m (line 4289): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3219. Data_GUI.m (line 4342): Function might be unused.\n  3220. Data_GUI.m (line 4389): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3221. Data_GUI.m (line 4454): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3222. Data_GUI.m (line 4455): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3223. Data_GUI.m (line 4503): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3224. Data_GUI.m (line 4512): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3225. Data_GUI.m (line 4517): This statement (and possibly following ones) cannot be reached.\n  3226. Data_GUI.m (line 4519): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3227. Data_GUI.m (line 4526): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3228. Data_GUI.m (line 4556): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3229. Data_GUI.m (line 4596): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3230. Data_GUI.m (line 4619): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3231. Data_GUI.m (line 4630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3232. Data_GUI.m (line 4642): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3233. Data_GUI.m (line 4655): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3234. Data_GUI.m (line 4749): Function might be unused.\n  3235. Data_GUI.m (line 4755): Value assigned to variable might be unused.\n  3236. Data_GUI.m (line 4783): Value assigned to variable might be unused.\n  3237. Data_GUI.m (line 4808): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3238. Data_GUI.m (line 4830): Value assigned to variable might be unused.\n  3239. Data_GUI.m (line 4864): Value assigned to variable might be unused.\n  3240. Data_GUI.m (line 4893): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3241. Data_GUI.m (line 4926): Function might be unused.\n  3242. Data_GUI.m (line 4970): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3243. Data_GUI.m (line 4971): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3244. Data_GUI.m (line 4994): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3245. Data_GUI.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3246. Data_GUI.m (line 5015): Function might be unused.\n  3247. Data_GUI.m (line 5092): Function might be unused.\n  3248. Data_GUI.m (line 5109): Value assigned to variable might be unused.\n  3249. Data_GUI.m (line 5167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3250. Data_GUI.m (line 5168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3251. Data_GUI.m (line 5172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3252. Data_GUI.m (line 5173): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3253. Data_GUI.m (line 5191): Function might be unused.\n  3254. Data_GUI.m (line 5249): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3255. Data_GUI.m (line 5249): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3256. Data_GUI.m (line 5281): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3257. Data_GUI.m (line 5281): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3258. Data_GUI.m (line 5444): Function might be unused.\n  3259. Data_GUI.m (line 5474): Function might be unused.\n  3260. Data_GUI.m (line 5565): Function might be unused.\n  3261. Data_GUI.m (line 5603): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3262. Data_GUI.m (line 5634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3263. Data_GUI.m (line 5670): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3264. Data_GUI.m (line 5672): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3265. Data_GUI.m (line 5672): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3266. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\Data_GUI.m: Missing arguments validation block\n  3267. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  3268. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\addModelWorkspaceData.m: Missing arguments validation block\n  3269. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\checkHighMemoryUsage.m: Missing function docstring\n  3270. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\checkHighMemoryUsage.m: Missing arguments validation block\n  3271. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\checkStopRequest.m: Missing function docstring\n  3272. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\checkStopRequest.m: Missing arguments validation block\n  3273. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  3274. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\extractCoefficientsFromTable.m: Missing function docstring\n  3275. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\extractCoefficientsFromTable.m: Missing arguments validation block\n  3276. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3277. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3278. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3279. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3280. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3281. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\extractConstantMatrixData.m: Missing function docstring\n  3282. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\extractConstantMatrixData.m: Missing arguments validation block\n  3283. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  3284. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  3285. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  3286. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  3287. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  3288. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3289. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3290. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3291. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3292. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3293. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3294. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3295. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3296. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3297. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3298. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3299. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3300. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3301. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3302. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3303. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3304. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3305. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3306. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\extractFromCombinedSignalBus.m: Missing function docstring\n  3307. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  3308. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\getMemoryInfo.m: Missing function docstring\n  3309. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\getMemoryInfo.m: Missing arguments validation block\n  3310. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3311. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3312. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3313. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3314. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3315. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3316. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3317. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  3318. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3319. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3320. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3321. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3322. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3323. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\getPolynomialParameterInfo.m: Missing arguments validation block\n  3324. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  3325. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\resampleDataToFrequency.m: Missing function docstring\n  3326. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\resampleDataToFrequency.m: Missing arguments validation block\n  3327. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\restoreWorkspace.m: Missing arguments validation block\n  3328. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\runSingleTrial.m: Missing arguments validation block\n  3329. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\setModelParameters.m: Missing arguments validation block\n  3330. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3331. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\setPolynomialCoefficients.m: Missing arguments validation block\n  3332. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  3333. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3334. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_124813\\traverseSimlogNode.m: Missing arguments validation block\n  3335. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  3336. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  3337. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  3338. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  3339. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3340. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3341. Data_GUI.m (line 725): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3342. Data_GUI.m (line 726): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3343. Data_GUI.m (line 727): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3344. Data_GUI.m (line 728): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3345. Data_GUI.m (line 729): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3346. Data_GUI.m (line 745): Function might be unused.\n  3347. Data_GUI.m (line 970): Function might be unused.\n  3348. Data_GUI.m (line 985): Value assigned to variable might be unused.\n  3349. Data_GUI.m (line 1007): Function might be unused.\n  3350. Data_GUI.m (line 1184): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3351. Data_GUI.m (line 1185): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3352. Data_GUI.m (line 1186): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3353. Data_GUI.m (line 1187): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3354. Data_GUI.m (line 1188): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3355. Data_GUI.m (line 1218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3356. Data_GUI.m (line 1219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3357. Data_GUI.m (line 1220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3358. Data_GUI.m (line 1240): Function might be unused.\n  3359. Data_GUI.m (line 1281): Function might be unused.\n  3360. Data_GUI.m (line 1357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3361. Data_GUI.m (line 1427): Value assigned to variable might be unused.\n  3362. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3363. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3364. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3365. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3366. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3367. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3368. Data_GUI.m (line 1595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3369. Data_GUI.m (line 1596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3370. Data_GUI.m (line 1597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3371. Data_GUI.m (line 1598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3372. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3373. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3374. Data_GUI.m (line 1640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3375. Data_GUI.m (line 1641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3376. Data_GUI.m (line 1642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3377. Data_GUI.m (line 1653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3378. Data_GUI.m (line 1654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3379. Data_GUI.m (line 1659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3380. Data_GUI.m (line 1660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3381. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3382. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3383. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3384. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3385. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3386. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3387. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3388. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3389. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3390. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3391. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3392. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3393. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3394. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3395. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3396. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3397. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3398. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3399. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3400. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3401. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3402. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3403. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3404. Data_GUI.m (line 2027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3405. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3406. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3407. Data_GUI.m (line 2043): Function might be unused.\n  3408. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3409. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3410. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3411. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3412. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3413. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3414. Data_GUI.m (line 2257): Value assigned to variable might be unused.\n  3415. Data_GUI.m (line 2316): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  3416. Data_GUI.m (line 2460): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  3417. Data_GUI.m (line 2599): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3418. Data_GUI.m (line 2599): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3419. Data_GUI.m (line 2721): Function might be unused.\n  3420. Data_GUI.m (line 2898): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3421. Data_GUI.m (line 2898): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3422. Data_GUI.m (line 2930): Function might be unused.\n  3423. Data_GUI.m (line 3081): Function might be unused.\n  3424. Data_GUI.m (line 3159): Function might be unused.\n  3425. Data_GUI.m (line 3174): This keyword might not be aligned with its matching END on line 3185.\n  3426. Data_GUI.m (line 3187): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  3427. Data_GUI.m (line 3403): This keyword might not be aligned with its matching END on line 3405.\n  3428. Data_GUI.m (line 3507): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  3429. Data_GUI.m (line 3542): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3430. Data_GUI.m (line 3576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3431. Data_GUI.m (line 3590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3432. Data_GUI.m (line 3598): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3433. Data_GUI.m (line 3598): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3434. Data_GUI.m (line 3797): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3435. Data_GUI.m (line 3837): Function might be unused.\n  3436. Data_GUI.m (line 3869): Function might be unused.\n  3437. Data_GUI.m (line 3881): Value assigned to variable might be unused.\n  3438. Data_GUI.m (line 3891): Value assigned to variable might be unused.\n  3439. Data_GUI.m (line 3896): Value assigned to variable might be unused.\n  3440. Data_GUI.m (line 3901): Value assigned to variable might be unused.\n  3441. Data_GUI.m (line 3918): Value assigned to variable might be unused.\n  3442. Data_GUI.m (line 4027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3443. Data_GUI.m (line 4028): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3444. Data_GUI.m (line 4035): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3445. Data_GUI.m (line 4036): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3446. Data_GUI.m (line 4049): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3447. Data_GUI.m (line 4051): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3448. Data_GUI.m (line 4073): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3449. Data_GUI.m (line 4074): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3450. Data_GUI.m (line 4094): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3451. Data_GUI.m (line 4095): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3452. Data_GUI.m (line 4107): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3453. Data_GUI.m (line 4108): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3454. Data_GUI.m (line 4126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3455. Data_GUI.m (line 4127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3456. Data_GUI.m (line 4171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3457. Data_GUI.m (line 4172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3458. Data_GUI.m (line 4179): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3459. Data_GUI.m (line 4180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3460. Data_GUI.m (line 4199): Function might be unused.\n  3461. Data_GUI.m (line 4257): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3462. Data_GUI.m (line 4258): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3463. Data_GUI.m (line 4268): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3464. Data_GUI.m (line 4269): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3465. Data_GUI.m (line 4288): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3466. Data_GUI.m (line 4289): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3467. Data_GUI.m (line 4342): Function might be unused.\n  3468. Data_GUI.m (line 4389): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3469. Data_GUI.m (line 4454): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3470. Data_GUI.m (line 4455): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3471. Data_GUI.m (line 4503): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3472. Data_GUI.m (line 4512): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3473. Data_GUI.m (line 4517): This statement (and possibly following ones) cannot be reached.\n  3474. Data_GUI.m (line 4519): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3475. Data_GUI.m (line 4526): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3476. Data_GUI.m (line 4556): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3477. Data_GUI.m (line 4596): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3478. Data_GUI.m (line 4619): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3479. Data_GUI.m (line 4630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3480. Data_GUI.m (line 4642): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3481. Data_GUI.m (line 4655): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3482. Data_GUI.m (line 4749): Function might be unused.\n  3483. Data_GUI.m (line 4755): Value assigned to variable might be unused.\n  3484. Data_GUI.m (line 4783): Value assigned to variable might be unused.\n  3485. Data_GUI.m (line 4808): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3486. Data_GUI.m (line 4830): Value assigned to variable might be unused.\n  3487. Data_GUI.m (line 4864): Value assigned to variable might be unused.\n  3488. Data_GUI.m (line 4893): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3489. Data_GUI.m (line 4926): Function might be unused.\n  3490. Data_GUI.m (line 4970): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3491. Data_GUI.m (line 4971): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3492. Data_GUI.m (line 4994): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3493. Data_GUI.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3494. Data_GUI.m (line 5015): Function might be unused.\n  3495. Data_GUI.m (line 5092): Function might be unused.\n  3496. Data_GUI.m (line 5109): Value assigned to variable might be unused.\n  3497. Data_GUI.m (line 5167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3498. Data_GUI.m (line 5168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3499. Data_GUI.m (line 5172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3500. Data_GUI.m (line 5173): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3501. Data_GUI.m (line 5191): Function might be unused.\n  3502. Data_GUI.m (line 5249): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3503. Data_GUI.m (line 5249): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3504. Data_GUI.m (line 5281): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3505. Data_GUI.m (line 5281): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3506. Data_GUI.m (line 5444): Function might be unused.\n  3507. Data_GUI.m (line 5474): Function might be unused.\n  3508. Data_GUI.m (line 5565): Function might be unused.\n  3509. Data_GUI.m (line 5603): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3510. Data_GUI.m (line 5634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3511. Data_GUI.m (line 5670): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3512. Data_GUI.m (line 5672): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3513. Data_GUI.m (line 5672): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3514. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\Data_GUI.m: Missing arguments validation block\n  3515. Data_GUI_BROKEN.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_BROKEN'.\n  3516. Data_GUI_BROKEN.m (line 239): Value assigned to variable might be unused.\n  3517. Data_GUI_BROKEN.m (line 340): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3518. Data_GUI_BROKEN.m (line 340): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3519. Data_GUI_BROKEN.m (line 734): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3520. Data_GUI_BROKEN.m (line 735): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3521. Data_GUI_BROKEN.m (line 736): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3522. Data_GUI_BROKEN.m (line 737): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3523. Data_GUI_BROKEN.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3524. Data_GUI_BROKEN.m (line 754): Function might be unused.\n  3525. Data_GUI_BROKEN.m (line 979): Function might be unused.\n  3526. Data_GUI_BROKEN.m (line 994): Value assigned to variable might be unused.\n  3527. Data_GUI_BROKEN.m (line 1016): Function might be unused.\n  3528. Data_GUI_BROKEN.m (line 1193): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3529. Data_GUI_BROKEN.m (line 1194): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3530. Data_GUI_BROKEN.m (line 1195): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3531. Data_GUI_BROKEN.m (line 1196): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3532. Data_GUI_BROKEN.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3533. Data_GUI_BROKEN.m (line 1227): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3534. Data_GUI_BROKEN.m (line 1228): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3535. Data_GUI_BROKEN.m (line 1229): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3536. Data_GUI_BROKEN.m (line 1249): Function might be unused.\n  3537. Data_GUI_BROKEN.m (line 1290): Function might be unused.\n  3538. Data_GUI_BROKEN.m (line 1366): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3539. Data_GUI_BROKEN.m (line 1436): Value assigned to variable might be unused.\n  3540. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3541. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3542. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3543. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3544. Data_GUI_BROKEN.m (line 1652): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3545. Data_GUI_BROKEN.m (line 1654): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3546. Data_GUI_BROKEN.m (line 1654): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3547. Data_GUI_BROKEN.m (line 1664): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3548. Data_GUI_BROKEN.m (line 1665): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3549. Data_GUI_BROKEN.m (line 1666): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3550. Data_GUI_BROKEN.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3551. Data_GUI_BROKEN.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3552. Data_GUI_BROKEN.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3553. Data_GUI_BROKEN.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3554. Data_GUI_BROKEN.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3555. Data_GUI_BROKEN.m (line 1672): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3556. Data_GUI_BROKEN.m (line 1673): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3557. Data_GUI_BROKEN.m (line 1674): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3558. Data_GUI_BROKEN.m (line 1675): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3559. Data_GUI_BROKEN.m (line 1676): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3560. Data_GUI_BROKEN.m (line 1677): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3561. Data_GUI_BROKEN.m (line 1678): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3562. Data_GUI_BROKEN.m (line 1679): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3563. Data_GUI_BROKEN.m (line 1680): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3564. Data_GUI_BROKEN.m (line 1681): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3565. Data_GUI_BROKEN.m (line 1682): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3566. Data_GUI_BROKEN.m (line 1683): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3567. Data_GUI_BROKEN.m (line 1684): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3568. Data_GUI_BROKEN.m (line 1685): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3569. Data_GUI_BROKEN.m (line 1686): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3570. Data_GUI_BROKEN.m (line 1687): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3571. Data_GUI_BROKEN.m (line 1688): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3572. Data_GUI_BROKEN.m (line 1689): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3573. Data_GUI_BROKEN.m (line 1690): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3574. Data_GUI_BROKEN.m (line 1691): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3575. Data_GUI_BROKEN.m (line 1692): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3576. Data_GUI_BROKEN.m (line 1693): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3577. Data_GUI_BROKEN.m (line 1694): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3578. Data_GUI_BROKEN.m (line 1695): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3579. Data_GUI_BROKEN.m (line 1696): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3580. Data_GUI_BROKEN.m (line 1697): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3581. Data_GUI_BROKEN.m (line 1698): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3582. Data_GUI_BROKEN.m (line 1699): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3583. Data_GUI_BROKEN.m (line 1700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3584. Data_GUI_BROKEN.m (line 1701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3585. Data_GUI_BROKEN.m (line 1702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3586. Data_GUI_BROKEN.m (line 1703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3587. Data_GUI_BROKEN.m (line 1704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3588. Data_GUI_BROKEN.m (line 1705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3589. Data_GUI_BROKEN.m (line 1706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3590. Data_GUI_BROKEN.m (line 1707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3591. Data_GUI_BROKEN.m (line 1708): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3592. Data_GUI_BROKEN.m (line 1709): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3593. Data_GUI_BROKEN.m (line 1710): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3594. Data_GUI_BROKEN.m (line 1711): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3595. Data_GUI_BROKEN.m (line 1712): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3596. Data_GUI_BROKEN.m (line 1713): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3597. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3598. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3599. Data_GUI_BROKEN.m (line 1767): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3600. Data_GUI_BROKEN.m (line 1768): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3601. Data_GUI_BROKEN.m (line 1769): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3602. Data_GUI_BROKEN.m (line 1770): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3603. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3604. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3605. Data_GUI_BROKEN.m (line 1812): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3606. Data_GUI_BROKEN.m (line 1813): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3607. Data_GUI_BROKEN.m (line 1814): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3608. Data_GUI_BROKEN.m (line 1825): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3609. Data_GUI_BROKEN.m (line 1826): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3610. Data_GUI_BROKEN.m (line 1831): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3611. Data_GUI_BROKEN.m (line 1832): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3612. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3613. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3614. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3615. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3616. Data_GUI_BROKEN.m (line 1897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3617. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3618. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3619. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3620. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3621. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3622. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3623. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3624. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3625. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3626. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3627. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3628. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3629. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3630. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3631. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3632. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3633. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3634. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3635. Data_GUI_BROKEN.m (line 2199): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3636. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3637. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3638. Data_GUI_BROKEN.m (line 2215): Function might be unused.\n  3639. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3640. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3641. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3642. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3643. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3644. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3645. Data_GUI_BROKEN.m (line 2427): Value assigned to variable might be unused.\n  3646. Data_GUI_BROKEN.m (line 2486): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  3647. Data_GUI_BROKEN.m (line 2630): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  3648. Data_GUI_BROKEN.m (line 2769): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3649. Data_GUI_BROKEN.m (line 2769): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3650. Data_GUI_BROKEN.m (line 2891): Function might be unused.\n  3651. Data_GUI_BROKEN.m (line 3068): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3652. Data_GUI_BROKEN.m (line 3068): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3653. Data_GUI_BROKEN.m (line 3100): Function might be unused.\n  3654. Data_GUI_BROKEN.m (line 3251): Function might be unused.\n  3655. Data_GUI_BROKEN.m (line 3329): Function might be unused.\n  3656. Data_GUI_BROKEN.m (line 3344): This keyword might not be aligned with its matching END on line 3355.\n  3657. Data_GUI_BROKEN.m (line 3357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  3658. Data_GUI_BROKEN.m (line 3573): This keyword might not be aligned with its matching END on line 3575.\n  3659. Data_GUI_BROKEN.m (line 3677): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  3660. Data_GUI_BROKEN.m (line 3712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3661. Data_GUI_BROKEN.m (line 3746): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3662. Data_GUI_BROKEN.m (line 3760): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3663. Data_GUI_BROKEN.m (line 3768): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3664. Data_GUI_BROKEN.m (line 3768): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3665. Data_GUI_BROKEN.m (line 3967): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3666. Data_GUI_BROKEN.m (line 4007): Function might be unused.\n  3667. Data_GUI_BROKEN.m (line 4039): Function might be unused.\n  3668. Data_GUI_BROKEN.m (line 4051): Value assigned to variable might be unused.\n  3669. Data_GUI_BROKEN.m (line 4061): Value assigned to variable might be unused.\n  3670. Data_GUI_BROKEN.m (line 4066): Value assigned to variable might be unused.\n  3671. Data_GUI_BROKEN.m (line 4071): Value assigned to variable might be unused.\n  3672. Data_GUI_BROKEN.m (line 4088): Value assigned to variable might be unused.\n  3673. Data_GUI_BROKEN.m (line 4197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3674. Data_GUI_BROKEN.m (line 4198): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3675. Data_GUI_BROKEN.m (line 4205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3676. Data_GUI_BROKEN.m (line 4206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3677. Data_GUI_BROKEN.m (line 4219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3678. Data_GUI_BROKEN.m (line 4221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3679. Data_GUI_BROKEN.m (line 4243): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3680. Data_GUI_BROKEN.m (line 4244): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3681. Data_GUI_BROKEN.m (line 4262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3682. Data_GUI_BROKEN.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3683. Data_GUI_BROKEN.m (line 4282): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3684. Data_GUI_BROKEN.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3685. Data_GUI_BROKEN.m (line 4294): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3686. Data_GUI_BROKEN.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3687. Data_GUI_BROKEN.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3688. Data_GUI_BROKEN.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3689. Data_GUI_BROKEN.m (line 4325): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3690. Data_GUI_BROKEN.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3691. Data_GUI_BROKEN.m (line 4370): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3692. Data_GUI_BROKEN.m (line 4371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3693. Data_GUI_BROKEN.m (line 4378): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3694. Data_GUI_BROKEN.m (line 4379): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3695. Data_GUI_BROKEN.m (line 4398): Function might be unused.\n  3696. Data_GUI_BROKEN.m (line 4456): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3697. Data_GUI_BROKEN.m (line 4457): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3698. Data_GUI_BROKEN.m (line 4467): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3699. Data_GUI_BROKEN.m (line 4468): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3700. Data_GUI_BROKEN.m (line 4487): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3701. Data_GUI_BROKEN.m (line 4488): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3702. Data_GUI_BROKEN.m (line 4541): Function might be unused.\n  3703. Data_GUI_BROKEN.m (line 4588): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3704. Data_GUI_BROKEN.m (line 4653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3705. Data_GUI_BROKEN.m (line 4654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3706. Data_GUI_BROKEN.m (line 4702): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3707. Data_GUI_BROKEN.m (line 4711): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3708. Data_GUI_BROKEN.m (line 4716): This statement (and possibly following ones) cannot be reached.\n  3709. Data_GUI_BROKEN.m (line 4718): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3710. Data_GUI_BROKEN.m (line 4725): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3711. Data_GUI_BROKEN.m (line 4755): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3712. Data_GUI_BROKEN.m (line 4795): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3713. Data_GUI_BROKEN.m (line 4818): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3714. Data_GUI_BROKEN.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3715. Data_GUI_BROKEN.m (line 4841): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3716. Data_GUI_BROKEN.m (line 4854): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3717. Data_GUI_BROKEN.m (line 4948): Function might be unused.\n  3718. Data_GUI_BROKEN.m (line 4954): Value assigned to variable might be unused.\n  3719. Data_GUI_BROKEN.m (line 4982): Value assigned to variable might be unused.\n  3720. Data_GUI_BROKEN.m (line 5007): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3721. Data_GUI_BROKEN.m (line 5029): Value assigned to variable might be unused.\n  3722. Data_GUI_BROKEN.m (line 5063): Value assigned to variable might be unused.\n  3723. Data_GUI_BROKEN.m (line 5092): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3724. Data_GUI_BROKEN.m (line 5125): Function might be unused.\n  3725. Data_GUI_BROKEN.m (line 5169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3726. Data_GUI_BROKEN.m (line 5170): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3727. Data_GUI_BROKEN.m (line 5193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3728. Data_GUI_BROKEN.m (line 5194): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3729. Data_GUI_BROKEN.m (line 5214): Function might be unused.\n  3730. Data_GUI_BROKEN.m (line 5291): Function might be unused.\n  3731. Data_GUI_BROKEN.m (line 5308): Value assigned to variable might be unused.\n  3732. Data_GUI_BROKEN.m (line 5366): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3733. Data_GUI_BROKEN.m (line 5367): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3734. Data_GUI_BROKEN.m (line 5371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3735. Data_GUI_BROKEN.m (line 5372): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3736. Data_GUI_BROKEN.m (line 5390): Function might be unused.\n  3737. Data_GUI_BROKEN.m (line 5448): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3738. Data_GUI_BROKEN.m (line 5448): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3739. Data_GUI_BROKEN.m (line 5480): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3740. Data_GUI_BROKEN.m (line 5480): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3741. Data_GUI_BROKEN.m (line 5643): Function might be unused.\n  3742. Data_GUI_BROKEN.m (line 5673): Function might be unused.\n  3743. Data_GUI_BROKEN.m (line 5764): Function might be unused.\n  3744. Data_GUI_BROKEN.m (line 5802): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3745. Data_GUI_BROKEN.m (line 5833): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3746. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\Data_GUI_BROKEN.m: Missing arguments validation block\n  3747. Data_GUI_No_Batch.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_No_Batch'.\n  3748. Data_GUI_No_Batch.m (line 237): Value assigned to variable might be unused.\n  3749. Data_GUI_No_Batch.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3750. Data_GUI_No_Batch.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3751. Data_GUI_No_Batch.m (line 700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3752. Data_GUI_No_Batch.m (line 701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3753. Data_GUI_No_Batch.m (line 702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3754. Data_GUI_No_Batch.m (line 703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3755. Data_GUI_No_Batch.m (line 704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3756. Data_GUI_No_Batch.m (line 720): Function might be unused.\n  3757. Data_GUI_No_Batch.m (line 945): Function might be unused.\n  3758. Data_GUI_No_Batch.m (line 960): Value assigned to variable might be unused.\n  3759. Data_GUI_No_Batch.m (line 982): Function might be unused.\n  3760. Data_GUI_No_Batch.m (line 1157): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3761. Data_GUI_No_Batch.m (line 1158): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3762. Data_GUI_No_Batch.m (line 1159): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3763. Data_GUI_No_Batch.m (line 1160): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3764. Data_GUI_No_Batch.m (line 1161): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3765. Data_GUI_No_Batch.m (line 1191): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3766. Data_GUI_No_Batch.m (line 1192): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3767. Data_GUI_No_Batch.m (line 1193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3768. Data_GUI_No_Batch.m (line 1213): Function might be unused.\n  3769. Data_GUI_No_Batch.m (line 1254): Function might be unused.\n  3770. Data_GUI_No_Batch.m (line 1330): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3771. Data_GUI_No_Batch.m (line 1400): Value assigned to variable might be unused.\n  3772. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3773. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3774. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3775. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3776. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3777. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3778. Data_GUI_No_Batch.m (line 1565): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3779. Data_GUI_No_Batch.m (line 1566): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3780. Data_GUI_No_Batch.m (line 1567): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3781. Data_GUI_No_Batch.m (line 1568): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3782. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3783. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3784. Data_GUI_No_Batch.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3785. Data_GUI_No_Batch.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3786. Data_GUI_No_Batch.m (line 1612): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3787. Data_GUI_No_Batch.m (line 1623): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3788. Data_GUI_No_Batch.m (line 1624): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3789. Data_GUI_No_Batch.m (line 1629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3790. Data_GUI_No_Batch.m (line 1630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3791. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3792. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3793. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3794. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3795. Data_GUI_No_Batch.m (line 1695): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3796. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3797. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3798. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3799. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3800. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3801. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3802. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3803. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3804. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3805. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3806. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3807. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3808. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3809. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3810. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3811. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3812. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3813. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3814. Data_GUI_No_Batch.m (line 1997): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3815. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3816. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3817. Data_GUI_No_Batch.m (line 2013): Function might be unused.\n  3818. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3819. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3820. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3821. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3822. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3823. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3824. Data_GUI_No_Batch.m (line 2222): Value assigned to variable might be unused.\n  3825. Data_GUI_No_Batch.m (line 2281): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  3826. Data_GUI_No_Batch.m (line 2385): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  3827. Data_GUI_No_Batch.m (line 2524): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3828. Data_GUI_No_Batch.m (line 2524): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3829. Data_GUI_No_Batch.m (line 2646): Function might be unused.\n  3830. Data_GUI_No_Batch.m (line 2821): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3831. Data_GUI_No_Batch.m (line 2821): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3832. Data_GUI_No_Batch.m (line 2853): Function might be unused.\n  3833. Data_GUI_No_Batch.m (line 2971): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3834. Data_GUI_No_Batch.m (line 3151): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3835. Data_GUI_No_Batch.m (line 3249): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  3836. Data_GUI_No_Batch.m (line 3297): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3837. Data_GUI_No_Batch.m (line 3297): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3838. Data_GUI_No_Batch.m (line 3626): This keyword might not be aligned with its matching END on line 3637.\n  3839. Data_GUI_No_Batch.m (line 3639): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  3840. Data_GUI_No_Batch.m (line 3855): This keyword might not be aligned with its matching END on line 3857.\n  3841. Data_GUI_No_Batch.m (line 3959): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  3842. Data_GUI_No_Batch.m (line 3969): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3843. Data_GUI_No_Batch.m (line 3970): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3844. Data_GUI_No_Batch.m (line 3971): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3845. Data_GUI_No_Batch.m (line 4014): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3846. Data_GUI_No_Batch.m (line 4015): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3847. Data_GUI_No_Batch.m (line 4025): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  3848. Data_GUI_No_Batch.m (line 4041): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3849. Data_GUI_No_Batch.m (line 4042): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3850. Data_GUI_No_Batch.m (line 4083): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3851. Data_GUI_No_Batch.m (line 4117): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3852. Data_GUI_No_Batch.m (line 4131): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3853. Data_GUI_No_Batch.m (line 4139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3854. Data_GUI_No_Batch.m (line 4139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3855. Data_GUI_No_Batch.m (line 4338): Input argument might be unused. Consider replacing the argument with ~ instead.\n  3856. Data_GUI_No_Batch.m (line 4378): Function might be unused.\n  3857. Data_GUI_No_Batch.m (line 4422): Value assigned to variable might be unused.\n  3858. Data_GUI_No_Batch.m (line 4432): Value assigned to variable might be unused.\n  3859. Data_GUI_No_Batch.m (line 4437): Value assigned to variable might be unused.\n  3860. Data_GUI_No_Batch.m (line 4442): Value assigned to variable might be unused.\n  3861. Data_GUI_No_Batch.m (line 4459): Value assigned to variable might be unused.\n  3862. Data_GUI_No_Batch.m (line 4568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3863. Data_GUI_No_Batch.m (line 4569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3864. Data_GUI_No_Batch.m (line 4576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3865. Data_GUI_No_Batch.m (line 4577): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3866. Data_GUI_No_Batch.m (line 4590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3867. Data_GUI_No_Batch.m (line 4592): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3868. Data_GUI_No_Batch.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3869. Data_GUI_No_Batch.m (line 4615): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3870. Data_GUI_No_Batch.m (line 4635): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3871. Data_GUI_No_Batch.m (line 4636): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3872. Data_GUI_No_Batch.m (line 4648): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3873. Data_GUI_No_Batch.m (line 4649): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3874. Data_GUI_No_Batch.m (line 4667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3875. Data_GUI_No_Batch.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3876. Data_GUI_No_Batch.m (line 4712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3877. Data_GUI_No_Batch.m (line 4713): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3878. Data_GUI_No_Batch.m (line 4720): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3879. Data_GUI_No_Batch.m (line 4721): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3880. Data_GUI_No_Batch.m (line 4798): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3881. Data_GUI_No_Batch.m (line 4799): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3882. Data_GUI_No_Batch.m (line 4809): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3883. Data_GUI_No_Batch.m (line 4810): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3884. Data_GUI_No_Batch.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3885. Data_GUI_No_Batch.m (line 4830): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3886. Data_GUI_No_Batch.m (line 4930): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3887. Data_GUI_No_Batch.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3888. Data_GUI_No_Batch.m (line 4996): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3889. Data_GUI_No_Batch.m (line 5044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3890. Data_GUI_No_Batch.m (line 5053): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3891. Data_GUI_No_Batch.m (line 5058): This statement (and possibly following ones) cannot be reached.\n  3892. Data_GUI_No_Batch.m (line 5060): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3893. Data_GUI_No_Batch.m (line 5067): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3894. Data_GUI_No_Batch.m (line 5097): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3895. Data_GUI_No_Batch.m (line 5137): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3896. Data_GUI_No_Batch.m (line 5160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3897. Data_GUI_No_Batch.m (line 5171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3898. Data_GUI_No_Batch.m (line 5183): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3899. Data_GUI_No_Batch.m (line 5196): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3900. Data_GUI_No_Batch.m (line 5225): Value assigned to variable might be unused.\n  3901. Data_GUI_No_Batch.m (line 5252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3902. Data_GUI_No_Batch.m (line 5284): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  3903. Data_GUI_No_Batch.m (line 5298): Value assigned to variable might be unused.\n  3904. Data_GUI_No_Batch.m (line 5316): Value assigned to variable might be unused.\n  3905. Data_GUI_No_Batch.m (line 5332): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3906. Data_GUI_No_Batch.m (line 5360): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3907. Data_GUI_No_Batch.m (line 5447): Function might be unused.\n  3908. Data_GUI_No_Batch.m (line 5453): Value assigned to variable might be unused.\n  3909. Data_GUI_No_Batch.m (line 5481): Value assigned to variable might be unused.\n  3910. Data_GUI_No_Batch.m (line 5506): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3911. Data_GUI_No_Batch.m (line 5528): Value assigned to variable might be unused.\n  3912. Data_GUI_No_Batch.m (line 5562): Value assigned to variable might be unused.\n  3913. Data_GUI_No_Batch.m (line 5591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3914. Data_GUI_No_Batch.m (line 5624): Function might be unused.\n  3915. Data_GUI_No_Batch.m (line 5668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3916. Data_GUI_No_Batch.m (line 5669): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3917. Data_GUI_No_Batch.m (line 5692): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3918. Data_GUI_No_Batch.m (line 5693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3919. Data_GUI_No_Batch.m (line 5790): Function might be unused.\n  3920. Data_GUI_No_Batch.m (line 5807): Value assigned to variable might be unused.\n  3921. Data_GUI_No_Batch.m (line 5865): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3922. Data_GUI_No_Batch.m (line 5866): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3923. Data_GUI_No_Batch.m (line 5870): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3924. Data_GUI_No_Batch.m (line 5871): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3925. Data_GUI_No_Batch.m (line 5889): Function might be unused.\n  3926. Data_GUI_No_Batch.m (line 5947): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3927. Data_GUI_No_Batch.m (line 5947): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3928. Data_GUI_No_Batch.m (line 5979): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3929. Data_GUI_No_Batch.m (line 5979): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  3930. Data_GUI_No_Batch.m (line 6142): Function might be unused.\n  3931. Data_GUI_No_Batch.m (line 6172): Function might be unused.\n  3932. Data_GUI_No_Batch.m (line 6263): Function might be unused.\n  3933. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\Data_GUI_No_Batch.m: Missing arguments validation block\n  3934. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  3935. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\addModelWorkspaceData.m: Missing arguments validation block\n  3936. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\checkHighMemoryUsage.m: Missing function docstring\n  3937. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\checkHighMemoryUsage.m: Missing arguments validation block\n  3938. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\checkModelConfiguration.m: Missing arguments validation block\n  3939. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\checkStopRequest.m: Missing function docstring\n  3940. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\checkStopRequest.m: Missing arguments validation block\n  3941. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3942. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3943. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3944. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3945. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  3946. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3947. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3948. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\check_model_configuration.m: Missing arguments validation block\n  3949. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3950. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3951. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  3952. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\checkpoint_recovery.m: Missing arguments validation block\n  3953. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\combineDataSources.m: Missing arguments validation block\n  3954. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  3955. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3956. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3957. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3958. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3959. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3960. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3961. data_extraction_functions.m (line 146): Function might be unused.\n  3962. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3963. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3964. data_extraction_functions.m (line 202): Function might be unused.\n  3965. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3966. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3967. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3968. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3969. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\data_extraction_functions.m: Missing function docstring\n  3970. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\data_extraction_functions.m: Missing arguments validation block\n  3971. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  3972. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\endPhase.m: Missing arguments validation block\n  3973. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  3974. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3975. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3976. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3977. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3978. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3979. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3980. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractAllSignalsFromBus.m: Missing arguments validation block\n  3981. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  3982. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractCoefficientsFromTable.m: Missing function docstring\n  3983. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractCoefficientsFromTable.m: Missing arguments validation block\n  3984. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3985. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3986. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3987. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3988. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3989. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3990. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3991. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3992. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3993. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3994. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3995. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3996. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractCombinedSignalBusData.m: Missing function docstring\n  3997. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractCombinedSignalBusData.m: Missing arguments validation block\n  3998. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  3999. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4000. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4001. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4002. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4003. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractConstantMatrixData.m: Missing function docstring\n  4004. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractConstantMatrixData.m: Missing arguments validation block\n  4005. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractDataFromField.m: Missing arguments validation block\n  4006. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  4007. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  4008. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractDataWithOptions.m: Missing arguments validation block\n  4009. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  4010. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  4011. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  4012. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  4013. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  4014. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4015. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4016. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4017. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4018. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4019. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4020. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4021. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4022. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4023. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4024. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4025. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4026. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4027. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4028. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4029. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4030. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4031. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4032. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractFromCombinedSignalBus.m: Missing function docstring\n  4033. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  4034. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  4035. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  4036. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  4037. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  4038. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  4039. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  4040. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4041. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4042. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4043. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4044. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4045. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4046. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4047. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4048. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4049. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4050. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4051. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4052. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4053. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4054. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4055. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4056. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  4057. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  4058. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4059. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4060. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractFromNestedStruct.m: Missing arguments validation block\n  4061. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4062. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4063. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4064. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4065. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4066. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4067. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractLogsoutDataFixed.m: Missing function docstring\n  4068. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractLogsoutDataFixed.m: Missing arguments validation block\n  4069. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractSignalsFromSimOut.m: Missing arguments validation block\n  4070. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4071. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4072. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4073. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractSimscapeDataRecursive.m: Missing function docstring\n  4074. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  4075. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractTimeSeriesData.m: Missing function docstring\n  4076. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractTimeSeriesData.m: Missing arguments validation block\n  4077. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4078. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4079. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4080. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4081. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractWorkspaceOutputs.m: Missing function docstring\n  4082. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\extractWorkspaceOutputs.m: Missing arguments validation block\n  4083. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4084. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4085. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  4086. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4087. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4088. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4089. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\fallbackSimlogExtraction.m: Missing function docstring\n  4090. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\fallbackSimlogExtraction.m: Missing arguments validation block\n  4091. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\generateRandomCoefficients.m: Missing arguments validation block\n  4092. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\getMemoryInfo.m: Missing function docstring\n  4093. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\getMemoryInfo.m: Missing arguments validation block\n  4094. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\getMemoryUsage.m: Missing arguments validation block\n  4095. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4096. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4097. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4098. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4099. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4100. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4101. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4102. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  4103. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4104. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4105. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4106. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4107. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4108. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\getPolynomialParameterInfo.m: Missing arguments validation block\n  4109. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\getShortenedJointName.m: Missing arguments validation block\n  4110. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4111. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4112. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  4113. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  4114. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\loadInputFile.m: Missing function docstring\n  4115. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\loadInputFile.m: Missing arguments validation block\n  4116. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\logBatchResult.m: Missing arguments validation block\n  4117. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4118. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\logMessage.m: Missing arguments validation block\n  4119. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\logical2str.m: Missing function docstring\n  4120. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\logical2str.m: Missing arguments validation block\n  4121. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  4122. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\memory_monitor.m: Missing arguments validation block\n  4123. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\mergeTables.m: Missing function docstring\n  4124. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\mergeTables.m: Missing arguments validation block\n  4125. performance_monitor.m (line 11): Persistent variable might be unused.\n  4126. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4127. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4128. performance_monitor.m (line 77): Function might be unused.\n  4129. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4130. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4131. performance_monitor.m (line 118): Function might be unused.\n  4132. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4133. performance_monitor.m (line 133): Function might be unused.\n  4134. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4135. performance_monitor.m (line 149): Function might be unused.\n  4136. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4137. performance_monitor.m (line 162): Function might be unused.\n  4138. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4139. performance_monitor.m (line 175): Function might be unused.\n  4140. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4141. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4142. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4143. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\performance_monitor.m: Missing arguments validation block\n  4144. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  4145. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  4146. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4147. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4148. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\processSimulationOutput.m: Missing function docstring\n  4149. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\processSimulationOutput.m: Missing arguments validation block\n  4150. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4151. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\recordBatchTime.m: Missing arguments validation block\n  4152. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4153. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\recordPhase.m: Missing arguments validation block\n  4154. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\resampleDataToFrequency.m: Missing function docstring\n  4155. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\resampleDataToFrequency.m: Missing arguments validation block\n  4156. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\restoreWorkspace.m: Missing arguments validation block\n  4157. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\runSingleTrial.m: Missing arguments validation block\n  4158. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\setModelParameters.m: Missing arguments validation block\n  4159. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4160. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\setPolynomialCoefficients.m: Missing arguments validation block\n  4161. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\shouldShowDebug.m: Missing function docstring\n  4162. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\shouldShowDebug.m: Missing arguments validation block\n  4163. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\shouldShowNormal.m: Missing function docstring\n  4164. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\shouldShowNormal.m: Missing arguments validation block\n  4165. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\shouldShowVerbose.m: Missing function docstring\n  4166. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\shouldShowVerbose.m: Missing arguments validation block\n  4167. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  4168. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4169. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\traverseSimlogNode.m: Missing arguments validation block\n  4170. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4171. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4172. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4173. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4174. verbosity_control.m (line 203): Function might be unused.\n  4175. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4176. verbosity_control.m (line 225): Function might be unused.\n  4177. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4178. verbosity_control.m (line 248): Function might be unused.\n  4179. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4180. verbosity_control.m (line 274): Function might be unused.\n  4181. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4182. verbosity_control.m (line 293): Function might be unused.\n  4183. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4184. verbosity_control.m (line 320): Function might be unused.\n  4185. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4186. verbosity_control.m (line 335): Function might be unused.\n  4187. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4188. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_125525\\verbosity_control.m: Missing arguments validation block\n  4189. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  4190. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  4191. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  4192. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  4193. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4194. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4195. Data_GUI.m (line 725): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4196. Data_GUI.m (line 726): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4197. Data_GUI.m (line 727): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4198. Data_GUI.m (line 728): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4199. Data_GUI.m (line 729): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4200. Data_GUI.m (line 745): Function might be unused.\n  4201. Data_GUI.m (line 970): Function might be unused.\n  4202. Data_GUI.m (line 985): Value assigned to variable might be unused.\n  4203. Data_GUI.m (line 1007): Function might be unused.\n  4204. Data_GUI.m (line 1184): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4205. Data_GUI.m (line 1185): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4206. Data_GUI.m (line 1186): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4207. Data_GUI.m (line 1187): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4208. Data_GUI.m (line 1188): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4209. Data_GUI.m (line 1218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4210. Data_GUI.m (line 1219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4211. Data_GUI.m (line 1220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4212. Data_GUI.m (line 1240): Function might be unused.\n  4213. Data_GUI.m (line 1281): Function might be unused.\n  4214. Data_GUI.m (line 1357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4215. Data_GUI.m (line 1427): Value assigned to variable might be unused.\n  4216. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4217. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4218. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4219. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4220. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4221. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4222. Data_GUI.m (line 1595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4223. Data_GUI.m (line 1596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4224. Data_GUI.m (line 1597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4225. Data_GUI.m (line 1598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4226. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4227. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4228. Data_GUI.m (line 1640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4229. Data_GUI.m (line 1641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4230. Data_GUI.m (line 1642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4231. Data_GUI.m (line 1653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4232. Data_GUI.m (line 1654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4233. Data_GUI.m (line 1659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4234. Data_GUI.m (line 1660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4235. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4236. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4237. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4238. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4239. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4240. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4241. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4242. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4243. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4244. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4245. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4246. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4247. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4248. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4249. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4250. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4251. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4252. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4253. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4254. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4255. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4256. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4257. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4258. Data_GUI.m (line 2027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4259. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4260. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4261. Data_GUI.m (line 2043): Function might be unused.\n  4262. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4263. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4264. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4265. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4266. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4267. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4268. Data_GUI.m (line 2257): Value assigned to variable might be unused.\n  4269. Data_GUI.m (line 2316): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  4270. Data_GUI.m (line 2460): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  4271. Data_GUI.m (line 2599): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4272. Data_GUI.m (line 2599): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4273. Data_GUI.m (line 2721): Function might be unused.\n  4274. Data_GUI.m (line 2898): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4275. Data_GUI.m (line 2898): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4276. Data_GUI.m (line 2930): Function might be unused.\n  4277. Data_GUI.m (line 3081): Function might be unused.\n  4278. Data_GUI.m (line 3159): Function might be unused.\n  4279. Data_GUI.m (line 3174): This keyword might not be aligned with its matching END on line 3185.\n  4280. Data_GUI.m (line 3187): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  4281. Data_GUI.m (line 3403): This keyword might not be aligned with its matching END on line 3405.\n  4282. Data_GUI.m (line 3507): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  4283. Data_GUI.m (line 3542): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4284. Data_GUI.m (line 3576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4285. Data_GUI.m (line 3590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4286. Data_GUI.m (line 3598): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4287. Data_GUI.m (line 3598): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4288. Data_GUI.m (line 3797): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4289. Data_GUI.m (line 3837): Function might be unused.\n  4290. Data_GUI.m (line 3869): Function might be unused.\n  4291. Data_GUI.m (line 3881): Value assigned to variable might be unused.\n  4292. Data_GUI.m (line 3891): Value assigned to variable might be unused.\n  4293. Data_GUI.m (line 3896): Value assigned to variable might be unused.\n  4294. Data_GUI.m (line 3901): Value assigned to variable might be unused.\n  4295. Data_GUI.m (line 3918): Value assigned to variable might be unused.\n  4296. Data_GUI.m (line 4027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4297. Data_GUI.m (line 4028): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4298. Data_GUI.m (line 4035): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4299. Data_GUI.m (line 4036): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4300. Data_GUI.m (line 4049): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4301. Data_GUI.m (line 4051): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4302. Data_GUI.m (line 4073): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4303. Data_GUI.m (line 4074): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4304. Data_GUI.m (line 4094): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4305. Data_GUI.m (line 4095): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4306. Data_GUI.m (line 4107): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4307. Data_GUI.m (line 4108): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4308. Data_GUI.m (line 4126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4309. Data_GUI.m (line 4127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4310. Data_GUI.m (line 4171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4311. Data_GUI.m (line 4172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4312. Data_GUI.m (line 4179): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4313. Data_GUI.m (line 4180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4314. Data_GUI.m (line 4199): Function might be unused.\n  4315. Data_GUI.m (line 4257): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4316. Data_GUI.m (line 4258): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4317. Data_GUI.m (line 4268): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4318. Data_GUI.m (line 4269): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4319. Data_GUI.m (line 4288): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4320. Data_GUI.m (line 4289): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4321. Data_GUI.m (line 4342): Function might be unused.\n  4322. Data_GUI.m (line 4389): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4323. Data_GUI.m (line 4454): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4324. Data_GUI.m (line 4455): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4325. Data_GUI.m (line 4503): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4326. Data_GUI.m (line 4512): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4327. Data_GUI.m (line 4517): This statement (and possibly following ones) cannot be reached.\n  4328. Data_GUI.m (line 4519): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4329. Data_GUI.m (line 4526): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4330. Data_GUI.m (line 4556): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4331. Data_GUI.m (line 4596): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4332. Data_GUI.m (line 4619): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4333. Data_GUI.m (line 4630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4334. Data_GUI.m (line 4642): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4335. Data_GUI.m (line 4655): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4336. Data_GUI.m (line 4749): Function might be unused.\n  4337. Data_GUI.m (line 4755): Value assigned to variable might be unused.\n  4338. Data_GUI.m (line 4783): Value assigned to variable might be unused.\n  4339. Data_GUI.m (line 4808): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4340. Data_GUI.m (line 4830): Value assigned to variable might be unused.\n  4341. Data_GUI.m (line 4864): Value assigned to variable might be unused.\n  4342. Data_GUI.m (line 4893): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4343. Data_GUI.m (line 4926): Function might be unused.\n  4344. Data_GUI.m (line 4970): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4345. Data_GUI.m (line 4971): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4346. Data_GUI.m (line 4994): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4347. Data_GUI.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4348. Data_GUI.m (line 5015): Function might be unused.\n  4349. Data_GUI.m (line 5092): Function might be unused.\n  4350. Data_GUI.m (line 5109): Value assigned to variable might be unused.\n  4351. Data_GUI.m (line 5167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4352. Data_GUI.m (line 5168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4353. Data_GUI.m (line 5172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4354. Data_GUI.m (line 5173): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4355. Data_GUI.m (line 5191): Function might be unused.\n  4356. Data_GUI.m (line 5249): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4357. Data_GUI.m (line 5249): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4358. Data_GUI.m (line 5281): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4359. Data_GUI.m (line 5281): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4360. Data_GUI.m (line 5444): Function might be unused.\n  4361. Data_GUI.m (line 5474): Function might be unused.\n  4362. Data_GUI.m (line 5565): Function might be unused.\n  4363. Data_GUI.m (line 5603): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4364. Data_GUI.m (line 5634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4365. Data_GUI.m (line 5670): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4366. Data_GUI.m (line 5672): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4367. Data_GUI.m (line 5672): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4368. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\Data_GUI.m: Missing arguments validation block\n  4369. Data_GUI_BROKEN.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_BROKEN'.\n  4370. Data_GUI_BROKEN.m (line 239): Value assigned to variable might be unused.\n  4371. Data_GUI_BROKEN.m (line 340): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4372. Data_GUI_BROKEN.m (line 340): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4373. Data_GUI_BROKEN.m (line 734): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4374. Data_GUI_BROKEN.m (line 735): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4375. Data_GUI_BROKEN.m (line 736): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4376. Data_GUI_BROKEN.m (line 737): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4377. Data_GUI_BROKEN.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4378. Data_GUI_BROKEN.m (line 754): Function might be unused.\n  4379. Data_GUI_BROKEN.m (line 979): Function might be unused.\n  4380. Data_GUI_BROKEN.m (line 994): Value assigned to variable might be unused.\n  4381. Data_GUI_BROKEN.m (line 1016): Function might be unused.\n  4382. Data_GUI_BROKEN.m (line 1193): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4383. Data_GUI_BROKEN.m (line 1194): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4384. Data_GUI_BROKEN.m (line 1195): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4385. Data_GUI_BROKEN.m (line 1196): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4386. Data_GUI_BROKEN.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4387. Data_GUI_BROKEN.m (line 1227): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4388. Data_GUI_BROKEN.m (line 1228): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4389. Data_GUI_BROKEN.m (line 1229): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4390. Data_GUI_BROKEN.m (line 1249): Function might be unused.\n  4391. Data_GUI_BROKEN.m (line 1290): Function might be unused.\n  4392. Data_GUI_BROKEN.m (line 1366): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4393. Data_GUI_BROKEN.m (line 1436): Value assigned to variable might be unused.\n  4394. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4395. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4396. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4397. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4398. Data_GUI_BROKEN.m (line 1652): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4399. Data_GUI_BROKEN.m (line 1654): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4400. Data_GUI_BROKEN.m (line 1654): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4401. Data_GUI_BROKEN.m (line 1664): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4402. Data_GUI_BROKEN.m (line 1665): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4403. Data_GUI_BROKEN.m (line 1666): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4404. Data_GUI_BROKEN.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4405. Data_GUI_BROKEN.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4406. Data_GUI_BROKEN.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4407. Data_GUI_BROKEN.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4408. Data_GUI_BROKEN.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4409. Data_GUI_BROKEN.m (line 1672): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4410. Data_GUI_BROKEN.m (line 1673): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4411. Data_GUI_BROKEN.m (line 1674): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4412. Data_GUI_BROKEN.m (line 1675): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4413. Data_GUI_BROKEN.m (line 1676): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4414. Data_GUI_BROKEN.m (line 1677): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4415. Data_GUI_BROKEN.m (line 1678): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4416. Data_GUI_BROKEN.m (line 1679): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4417. Data_GUI_BROKEN.m (line 1680): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4418. Data_GUI_BROKEN.m (line 1681): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4419. Data_GUI_BROKEN.m (line 1682): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4420. Data_GUI_BROKEN.m (line 1683): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4421. Data_GUI_BROKEN.m (line 1684): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4422. Data_GUI_BROKEN.m (line 1685): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4423. Data_GUI_BROKEN.m (line 1686): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4424. Data_GUI_BROKEN.m (line 1687): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4425. Data_GUI_BROKEN.m (line 1688): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4426. Data_GUI_BROKEN.m (line 1689): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4427. Data_GUI_BROKEN.m (line 1690): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4428. Data_GUI_BROKEN.m (line 1691): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4429. Data_GUI_BROKEN.m (line 1692): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4430. Data_GUI_BROKEN.m (line 1693): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4431. Data_GUI_BROKEN.m (line 1694): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4432. Data_GUI_BROKEN.m (line 1695): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4433. Data_GUI_BROKEN.m (line 1696): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4434. Data_GUI_BROKEN.m (line 1697): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4435. Data_GUI_BROKEN.m (line 1698): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4436. Data_GUI_BROKEN.m (line 1699): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4437. Data_GUI_BROKEN.m (line 1700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4438. Data_GUI_BROKEN.m (line 1701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4439. Data_GUI_BROKEN.m (line 1702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4440. Data_GUI_BROKEN.m (line 1703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4441. Data_GUI_BROKEN.m (line 1704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4442. Data_GUI_BROKEN.m (line 1705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4443. Data_GUI_BROKEN.m (line 1706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4444. Data_GUI_BROKEN.m (line 1707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4445. Data_GUI_BROKEN.m (line 1708): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4446. Data_GUI_BROKEN.m (line 1709): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4447. Data_GUI_BROKEN.m (line 1710): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4448. Data_GUI_BROKEN.m (line 1711): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4449. Data_GUI_BROKEN.m (line 1712): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4450. Data_GUI_BROKEN.m (line 1713): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4451. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4452. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4453. Data_GUI_BROKEN.m (line 1767): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4454. Data_GUI_BROKEN.m (line 1768): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4455. Data_GUI_BROKEN.m (line 1769): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4456. Data_GUI_BROKEN.m (line 1770): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4457. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4458. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4459. Data_GUI_BROKEN.m (line 1812): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4460. Data_GUI_BROKEN.m (line 1813): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4461. Data_GUI_BROKEN.m (line 1814): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4462. Data_GUI_BROKEN.m (line 1825): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4463. Data_GUI_BROKEN.m (line 1826): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4464. Data_GUI_BROKEN.m (line 1831): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4465. Data_GUI_BROKEN.m (line 1832): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4466. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4467. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4468. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4469. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4470. Data_GUI_BROKEN.m (line 1897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4471. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4472. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4473. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4474. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4475. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4476. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4477. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4478. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4479. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4480. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4481. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4482. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4483. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4484. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4485. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4486. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4487. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4488. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4489. Data_GUI_BROKEN.m (line 2199): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4490. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4491. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4492. Data_GUI_BROKEN.m (line 2215): Function might be unused.\n  4493. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4494. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4495. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4496. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4497. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4498. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4499. Data_GUI_BROKEN.m (line 2427): Value assigned to variable might be unused.\n  4500. Data_GUI_BROKEN.m (line 2486): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  4501. Data_GUI_BROKEN.m (line 2630): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  4502. Data_GUI_BROKEN.m (line 2769): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4503. Data_GUI_BROKEN.m (line 2769): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4504. Data_GUI_BROKEN.m (line 2891): Function might be unused.\n  4505. Data_GUI_BROKEN.m (line 3068): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4506. Data_GUI_BROKEN.m (line 3068): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4507. Data_GUI_BROKEN.m (line 3100): Function might be unused.\n  4508. Data_GUI_BROKEN.m (line 3251): Function might be unused.\n  4509. Data_GUI_BROKEN.m (line 3329): Function might be unused.\n  4510. Data_GUI_BROKEN.m (line 3344): This keyword might not be aligned with its matching END on line 3355.\n  4511. Data_GUI_BROKEN.m (line 3357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  4512. Data_GUI_BROKEN.m (line 3573): This keyword might not be aligned with its matching END on line 3575.\n  4513. Data_GUI_BROKEN.m (line 3677): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  4514. Data_GUI_BROKEN.m (line 3712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4515. Data_GUI_BROKEN.m (line 3746): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4516. Data_GUI_BROKEN.m (line 3760): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4517. Data_GUI_BROKEN.m (line 3768): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4518. Data_GUI_BROKEN.m (line 3768): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4519. Data_GUI_BROKEN.m (line 3967): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4520. Data_GUI_BROKEN.m (line 4007): Function might be unused.\n  4521. Data_GUI_BROKEN.m (line 4039): Function might be unused.\n  4522. Data_GUI_BROKEN.m (line 4051): Value assigned to variable might be unused.\n  4523. Data_GUI_BROKEN.m (line 4061): Value assigned to variable might be unused.\n  4524. Data_GUI_BROKEN.m (line 4066): Value assigned to variable might be unused.\n  4525. Data_GUI_BROKEN.m (line 4071): Value assigned to variable might be unused.\n  4526. Data_GUI_BROKEN.m (line 4088): Value assigned to variable might be unused.\n  4527. Data_GUI_BROKEN.m (line 4197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4528. Data_GUI_BROKEN.m (line 4198): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4529. Data_GUI_BROKEN.m (line 4205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4530. Data_GUI_BROKEN.m (line 4206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4531. Data_GUI_BROKEN.m (line 4219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4532. Data_GUI_BROKEN.m (line 4221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4533. Data_GUI_BROKEN.m (line 4243): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4534. Data_GUI_BROKEN.m (line 4244): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4535. Data_GUI_BROKEN.m (line 4262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4536. Data_GUI_BROKEN.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4537. Data_GUI_BROKEN.m (line 4282): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4538. Data_GUI_BROKEN.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4539. Data_GUI_BROKEN.m (line 4294): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4540. Data_GUI_BROKEN.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4541. Data_GUI_BROKEN.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4542. Data_GUI_BROKEN.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4543. Data_GUI_BROKEN.m (line 4325): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4544. Data_GUI_BROKEN.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4545. Data_GUI_BROKEN.m (line 4370): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4546. Data_GUI_BROKEN.m (line 4371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4547. Data_GUI_BROKEN.m (line 4378): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4548. Data_GUI_BROKEN.m (line 4379): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4549. Data_GUI_BROKEN.m (line 4398): Function might be unused.\n  4550. Data_GUI_BROKEN.m (line 4456): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4551. Data_GUI_BROKEN.m (line 4457): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4552. Data_GUI_BROKEN.m (line 4467): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4553. Data_GUI_BROKEN.m (line 4468): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4554. Data_GUI_BROKEN.m (line 4487): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4555. Data_GUI_BROKEN.m (line 4488): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4556. Data_GUI_BROKEN.m (line 4541): Function might be unused.\n  4557. Data_GUI_BROKEN.m (line 4588): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4558. Data_GUI_BROKEN.m (line 4653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4559. Data_GUI_BROKEN.m (line 4654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4560. Data_GUI_BROKEN.m (line 4702): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4561. Data_GUI_BROKEN.m (line 4711): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4562. Data_GUI_BROKEN.m (line 4716): This statement (and possibly following ones) cannot be reached.\n  4563. Data_GUI_BROKEN.m (line 4718): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4564. Data_GUI_BROKEN.m (line 4725): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4565. Data_GUI_BROKEN.m (line 4755): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4566. Data_GUI_BROKEN.m (line 4795): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4567. Data_GUI_BROKEN.m (line 4818): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4568. Data_GUI_BROKEN.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4569. Data_GUI_BROKEN.m (line 4841): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4570. Data_GUI_BROKEN.m (line 4854): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4571. Data_GUI_BROKEN.m (line 4948): Function might be unused.\n  4572. Data_GUI_BROKEN.m (line 4954): Value assigned to variable might be unused.\n  4573. Data_GUI_BROKEN.m (line 4982): Value assigned to variable might be unused.\n  4574. Data_GUI_BROKEN.m (line 5007): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4575. Data_GUI_BROKEN.m (line 5029): Value assigned to variable might be unused.\n  4576. Data_GUI_BROKEN.m (line 5063): Value assigned to variable might be unused.\n  4577. Data_GUI_BROKEN.m (line 5092): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4578. Data_GUI_BROKEN.m (line 5125): Function might be unused.\n  4579. Data_GUI_BROKEN.m (line 5169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4580. Data_GUI_BROKEN.m (line 5170): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4581. Data_GUI_BROKEN.m (line 5193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4582. Data_GUI_BROKEN.m (line 5194): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4583. Data_GUI_BROKEN.m (line 5214): Function might be unused.\n  4584. Data_GUI_BROKEN.m (line 5291): Function might be unused.\n  4585. Data_GUI_BROKEN.m (line 5308): Value assigned to variable might be unused.\n  4586. Data_GUI_BROKEN.m (line 5366): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4587. Data_GUI_BROKEN.m (line 5367): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4588. Data_GUI_BROKEN.m (line 5371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4589. Data_GUI_BROKEN.m (line 5372): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4590. Data_GUI_BROKEN.m (line 5390): Function might be unused.\n  4591. Data_GUI_BROKEN.m (line 5448): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4592. Data_GUI_BROKEN.m (line 5448): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4593. Data_GUI_BROKEN.m (line 5480): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4594. Data_GUI_BROKEN.m (line 5480): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4595. Data_GUI_BROKEN.m (line 5643): Function might be unused.\n  4596. Data_GUI_BROKEN.m (line 5673): Function might be unused.\n  4597. Data_GUI_BROKEN.m (line 5764): Function might be unused.\n  4598. Data_GUI_BROKEN.m (line 5802): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4599. Data_GUI_BROKEN.m (line 5833): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4600. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\Data_GUI_BROKEN.m: Missing arguments validation block\n  4601. Data_GUI_No_Batch.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_No_Batch'.\n  4602. Data_GUI_No_Batch.m (line 237): Value assigned to variable might be unused.\n  4603. Data_GUI_No_Batch.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4604. Data_GUI_No_Batch.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4605. Data_GUI_No_Batch.m (line 700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4606. Data_GUI_No_Batch.m (line 701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4607. Data_GUI_No_Batch.m (line 702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4608. Data_GUI_No_Batch.m (line 703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4609. Data_GUI_No_Batch.m (line 704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4610. Data_GUI_No_Batch.m (line 720): Function might be unused.\n  4611. Data_GUI_No_Batch.m (line 945): Function might be unused.\n  4612. Data_GUI_No_Batch.m (line 960): Value assigned to variable might be unused.\n  4613. Data_GUI_No_Batch.m (line 982): Function might be unused.\n  4614. Data_GUI_No_Batch.m (line 1157): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4615. Data_GUI_No_Batch.m (line 1158): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4616. Data_GUI_No_Batch.m (line 1159): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4617. Data_GUI_No_Batch.m (line 1160): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4618. Data_GUI_No_Batch.m (line 1161): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4619. Data_GUI_No_Batch.m (line 1191): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4620. Data_GUI_No_Batch.m (line 1192): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4621. Data_GUI_No_Batch.m (line 1193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4622. Data_GUI_No_Batch.m (line 1213): Function might be unused.\n  4623. Data_GUI_No_Batch.m (line 1254): Function might be unused.\n  4624. Data_GUI_No_Batch.m (line 1330): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4625. Data_GUI_No_Batch.m (line 1400): Value assigned to variable might be unused.\n  4626. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4627. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4628. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4629. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4630. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4631. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4632. Data_GUI_No_Batch.m (line 1565): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4633. Data_GUI_No_Batch.m (line 1566): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4634. Data_GUI_No_Batch.m (line 1567): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4635. Data_GUI_No_Batch.m (line 1568): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4636. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4637. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4638. Data_GUI_No_Batch.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4639. Data_GUI_No_Batch.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4640. Data_GUI_No_Batch.m (line 1612): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4641. Data_GUI_No_Batch.m (line 1623): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4642. Data_GUI_No_Batch.m (line 1624): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4643. Data_GUI_No_Batch.m (line 1629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4644. Data_GUI_No_Batch.m (line 1630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4645. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4646. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4647. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4648. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4649. Data_GUI_No_Batch.m (line 1695): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4650. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4651. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4652. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4653. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4654. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4655. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4656. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4657. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4658. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4659. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4660. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4661. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4662. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4663. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4664. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4665. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4666. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4667. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4668. Data_GUI_No_Batch.m (line 1997): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4669. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4670. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4671. Data_GUI_No_Batch.m (line 2013): Function might be unused.\n  4672. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4673. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4674. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4675. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4676. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4677. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4678. Data_GUI_No_Batch.m (line 2222): Value assigned to variable might be unused.\n  4679. Data_GUI_No_Batch.m (line 2281): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  4680. Data_GUI_No_Batch.m (line 2385): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  4681. Data_GUI_No_Batch.m (line 2524): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4682. Data_GUI_No_Batch.m (line 2524): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4683. Data_GUI_No_Batch.m (line 2646): Function might be unused.\n  4684. Data_GUI_No_Batch.m (line 2821): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4685. Data_GUI_No_Batch.m (line 2821): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4686. Data_GUI_No_Batch.m (line 2853): Function might be unused.\n  4687. Data_GUI_No_Batch.m (line 2971): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4688. Data_GUI_No_Batch.m (line 3151): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4689. Data_GUI_No_Batch.m (line 3249): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  4690. Data_GUI_No_Batch.m (line 3297): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4691. Data_GUI_No_Batch.m (line 3297): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4692. Data_GUI_No_Batch.m (line 3626): This keyword might not be aligned with its matching END on line 3637.\n  4693. Data_GUI_No_Batch.m (line 3639): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  4694. Data_GUI_No_Batch.m (line 3855): This keyword might not be aligned with its matching END on line 3857.\n  4695. Data_GUI_No_Batch.m (line 3959): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  4696. Data_GUI_No_Batch.m (line 3969): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4697. Data_GUI_No_Batch.m (line 3970): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4698. Data_GUI_No_Batch.m (line 3971): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4699. Data_GUI_No_Batch.m (line 4014): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4700. Data_GUI_No_Batch.m (line 4015): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4701. Data_GUI_No_Batch.m (line 4025): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  4702. Data_GUI_No_Batch.m (line 4041): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4703. Data_GUI_No_Batch.m (line 4042): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4704. Data_GUI_No_Batch.m (line 4083): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4705. Data_GUI_No_Batch.m (line 4117): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4706. Data_GUI_No_Batch.m (line 4131): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4707. Data_GUI_No_Batch.m (line 4139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4708. Data_GUI_No_Batch.m (line 4139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4709. Data_GUI_No_Batch.m (line 4338): Input argument might be unused. Consider replacing the argument with ~ instead.\n  4710. Data_GUI_No_Batch.m (line 4378): Function might be unused.\n  4711. Data_GUI_No_Batch.m (line 4422): Value assigned to variable might be unused.\n  4712. Data_GUI_No_Batch.m (line 4432): Value assigned to variable might be unused.\n  4713. Data_GUI_No_Batch.m (line 4437): Value assigned to variable might be unused.\n  4714. Data_GUI_No_Batch.m (line 4442): Value assigned to variable might be unused.\n  4715. Data_GUI_No_Batch.m (line 4459): Value assigned to variable might be unused.\n  4716. Data_GUI_No_Batch.m (line 4568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4717. Data_GUI_No_Batch.m (line 4569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4718. Data_GUI_No_Batch.m (line 4576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4719. Data_GUI_No_Batch.m (line 4577): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4720. Data_GUI_No_Batch.m (line 4590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4721. Data_GUI_No_Batch.m (line 4592): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4722. Data_GUI_No_Batch.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4723. Data_GUI_No_Batch.m (line 4615): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4724. Data_GUI_No_Batch.m (line 4635): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4725. Data_GUI_No_Batch.m (line 4636): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4726. Data_GUI_No_Batch.m (line 4648): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4727. Data_GUI_No_Batch.m (line 4649): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4728. Data_GUI_No_Batch.m (line 4667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4729. Data_GUI_No_Batch.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4730. Data_GUI_No_Batch.m (line 4712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4731. Data_GUI_No_Batch.m (line 4713): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4732. Data_GUI_No_Batch.m (line 4720): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4733. Data_GUI_No_Batch.m (line 4721): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4734. Data_GUI_No_Batch.m (line 4798): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4735. Data_GUI_No_Batch.m (line 4799): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4736. Data_GUI_No_Batch.m (line 4809): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4737. Data_GUI_No_Batch.m (line 4810): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4738. Data_GUI_No_Batch.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4739. Data_GUI_No_Batch.m (line 4830): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4740. Data_GUI_No_Batch.m (line 4930): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4741. Data_GUI_No_Batch.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4742. Data_GUI_No_Batch.m (line 4996): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4743. Data_GUI_No_Batch.m (line 5044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4744. Data_GUI_No_Batch.m (line 5053): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4745. Data_GUI_No_Batch.m (line 5058): This statement (and possibly following ones) cannot be reached.\n  4746. Data_GUI_No_Batch.m (line 5060): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4747. Data_GUI_No_Batch.m (line 5067): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4748. Data_GUI_No_Batch.m (line 5097): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4749. Data_GUI_No_Batch.m (line 5137): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4750. Data_GUI_No_Batch.m (line 5160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4751. Data_GUI_No_Batch.m (line 5171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4752. Data_GUI_No_Batch.m (line 5183): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4753. Data_GUI_No_Batch.m (line 5196): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4754. Data_GUI_No_Batch.m (line 5225): Value assigned to variable might be unused.\n  4755. Data_GUI_No_Batch.m (line 5252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4756. Data_GUI_No_Batch.m (line 5284): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  4757. Data_GUI_No_Batch.m (line 5298): Value assigned to variable might be unused.\n  4758. Data_GUI_No_Batch.m (line 5316): Value assigned to variable might be unused.\n  4759. Data_GUI_No_Batch.m (line 5332): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4760. Data_GUI_No_Batch.m (line 5360): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4761. Data_GUI_No_Batch.m (line 5447): Function might be unused.\n  4762. Data_GUI_No_Batch.m (line 5453): Value assigned to variable might be unused.\n  4763. Data_GUI_No_Batch.m (line 5481): Value assigned to variable might be unused.\n  4764. Data_GUI_No_Batch.m (line 5506): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4765. Data_GUI_No_Batch.m (line 5528): Value assigned to variable might be unused.\n  4766. Data_GUI_No_Batch.m (line 5562): Value assigned to variable might be unused.\n  4767. Data_GUI_No_Batch.m (line 5591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4768. Data_GUI_No_Batch.m (line 5624): Function might be unused.\n  4769. Data_GUI_No_Batch.m (line 5668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4770. Data_GUI_No_Batch.m (line 5669): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4771. Data_GUI_No_Batch.m (line 5692): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4772. Data_GUI_No_Batch.m (line 5693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4773. Data_GUI_No_Batch.m (line 5790): Function might be unused.\n  4774. Data_GUI_No_Batch.m (line 5807): Value assigned to variable might be unused.\n  4775. Data_GUI_No_Batch.m (line 5865): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4776. Data_GUI_No_Batch.m (line 5866): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4777. Data_GUI_No_Batch.m (line 5870): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4778. Data_GUI_No_Batch.m (line 5871): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4779. Data_GUI_No_Batch.m (line 5889): Function might be unused.\n  4780. Data_GUI_No_Batch.m (line 5947): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4781. Data_GUI_No_Batch.m (line 5947): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4782. Data_GUI_No_Batch.m (line 5979): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4783. Data_GUI_No_Batch.m (line 5979): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4784. Data_GUI_No_Batch.m (line 6142): Function might be unused.\n  4785. Data_GUI_No_Batch.m (line 6172): Function might be unused.\n  4786. Data_GUI_No_Batch.m (line 6263): Function might be unused.\n  4787. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\Data_GUI_No_Batch.m: Missing arguments validation block\n  4788. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  4789. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\addModelWorkspaceData.m: Missing arguments validation block\n  4790. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\checkHighMemoryUsage.m: Missing function docstring\n  4791. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\checkHighMemoryUsage.m: Missing arguments validation block\n  4792. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\checkModelConfiguration.m: Missing arguments validation block\n  4793. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\checkStopRequest.m: Missing function docstring\n  4794. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\checkStopRequest.m: Missing arguments validation block\n  4795. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4796. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4797. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4798. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4799. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4800. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4801. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4802. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\check_model_configuration.m: Missing arguments validation block\n  4803. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4804. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4805. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4806. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\checkpoint_recovery.m: Missing arguments validation block\n  4807. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\combineDataSources.m: Missing arguments validation block\n  4808. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  4809. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4810. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4811. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4812. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4813. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4814. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4815. data_extraction_functions.m (line 146): Function might be unused.\n  4816. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4817. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4818. data_extraction_functions.m (line 202): Function might be unused.\n  4819. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4820. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4821. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4822. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4823. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\data_extraction_functions.m: Missing function docstring\n  4824. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\data_extraction_functions.m: Missing arguments validation block\n  4825. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4826. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\endPhase.m: Missing arguments validation block\n  4827. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  4828. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4829. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4830. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4831. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4832. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4833. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4834. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractAllSignalsFromBus.m: Missing arguments validation block\n  4835. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  4836. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractCoefficientsFromTable.m: Missing function docstring\n  4837. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractCoefficientsFromTable.m: Missing arguments validation block\n  4838. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4839. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4840. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4841. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4842. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4843. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4844. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4845. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4846. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4847. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4848. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4849. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4850. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractCombinedSignalBusData.m: Missing function docstring\n  4851. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractCombinedSignalBusData.m: Missing arguments validation block\n  4852. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4853. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4854. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4855. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4856. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4857. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractConstantMatrixData.m: Missing function docstring\n  4858. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractConstantMatrixData.m: Missing arguments validation block\n  4859. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractDataFromField.m: Missing arguments validation block\n  4860. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  4861. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  4862. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractDataWithOptions.m: Missing arguments validation block\n  4863. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  4864. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  4865. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  4866. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  4867. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  4868. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4869. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4870. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4871. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4872. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4873. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4874. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4875. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4876. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4877. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4878. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4879. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4880. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4881. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4882. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4883. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4884. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4885. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4886. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractFromCombinedSignalBus.m: Missing function docstring\n  4887. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  4888. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  4889. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  4890. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  4891. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  4892. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  4893. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  4894. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4895. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4896. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4897. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4898. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4899. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4900. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4901. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4902. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4903. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4904. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4905. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4906. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4907. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4908. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4909. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4910. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  4911. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  4912. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4913. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4914. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractFromNestedStruct.m: Missing arguments validation block\n  4915. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4916. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4917. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4918. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4919. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4920. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4921. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractLogsoutDataFixed.m: Missing function docstring\n  4922. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractLogsoutDataFixed.m: Missing arguments validation block\n  4923. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractSignalsFromSimOut.m: Missing arguments validation block\n  4924. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4925. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4926. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4927. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractSimscapeDataRecursive.m: Missing function docstring\n  4928. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  4929. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractTimeSeriesData.m: Missing function docstring\n  4930. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractTimeSeriesData.m: Missing arguments validation block\n  4931. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4932. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4933. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4934. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4935. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractWorkspaceOutputs.m: Missing function docstring\n  4936. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\extractWorkspaceOutputs.m: Missing arguments validation block\n  4937. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4938. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4939. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  4940. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4941. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4942. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4943. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\fallbackSimlogExtraction.m: Missing function docstring\n  4944. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\fallbackSimlogExtraction.m: Missing arguments validation block\n  4945. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\generateRandomCoefficients.m: Missing arguments validation block\n  4946. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\getMemoryInfo.m: Missing function docstring\n  4947. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\getMemoryInfo.m: Missing arguments validation block\n  4948. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\getMemoryUsage.m: Missing arguments validation block\n  4949. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4950. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4951. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4952. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4953. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4954. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4955. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  4956. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  4957. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4958. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4959. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4960. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4961. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  4962. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\getPolynomialParameterInfo.m: Missing arguments validation block\n  4963. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\getShortenedJointName.m: Missing arguments validation block\n  4964. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  4965. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  4966. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  4967. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  4968. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\loadInputFile.m: Missing function docstring\n  4969. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\loadInputFile.m: Missing arguments validation block\n  4970. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\logBatchResult.m: Missing arguments validation block\n  4971. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4972. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\logMessage.m: Missing arguments validation block\n  4973. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\logical2str.m: Missing function docstring\n  4974. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\logical2str.m: Missing arguments validation block\n  4975. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  4976. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\memory_monitor.m: Missing arguments validation block\n  4977. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\mergeTables.m: Missing function docstring\n  4978. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\mergeTables.m: Missing arguments validation block\n  4979. performance_monitor.m (line 11): Persistent variable might be unused.\n  4980. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4981. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4982. performance_monitor.m (line 77): Function might be unused.\n  4983. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4984. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4985. performance_monitor.m (line 118): Function might be unused.\n  4986. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4987. performance_monitor.m (line 133): Function might be unused.\n  4988. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4989. performance_monitor.m (line 149): Function might be unused.\n  4990. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4991. performance_monitor.m (line 162): Function might be unused.\n  4992. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4993. performance_monitor.m (line 175): Function might be unused.\n  4994. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4995. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4996. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  4997. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\performance_monitor.m: Missing arguments validation block\n  4998. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  4999. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  5000. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5001. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5002. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\processSimulationOutput.m: Missing function docstring\n  5003. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\processSimulationOutput.m: Missing arguments validation block\n  5004. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5005. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\recordBatchTime.m: Missing arguments validation block\n  5006. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5007. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\recordPhase.m: Missing arguments validation block\n  5008. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\resampleDataToFrequency.m: Missing function docstring\n  5009. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\resampleDataToFrequency.m: Missing arguments validation block\n  5010. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\restoreWorkspace.m: Missing arguments validation block\n  5011. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\runSingleTrial.m: Missing arguments validation block\n  5012. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\setModelParameters.m: Missing arguments validation block\n  5013. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5014. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\setPolynomialCoefficients.m: Missing arguments validation block\n  5015. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\shouldShowDebug.m: Missing function docstring\n  5016. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\shouldShowDebug.m: Missing arguments validation block\n  5017. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\shouldShowNormal.m: Missing function docstring\n  5018. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\shouldShowNormal.m: Missing arguments validation block\n  5019. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\shouldShowVerbose.m: Missing function docstring\n  5020. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\shouldShowVerbose.m: Missing arguments validation block\n  5021. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  5022. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5023. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\traverseSimlogNode.m: Missing arguments validation block\n  5024. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5025. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5026. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5027. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5028. verbosity_control.m (line 203): Function might be unused.\n  5029. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5030. verbosity_control.m (line 225): Function might be unused.\n  5031. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5032. verbosity_control.m (line 248): Function might be unused.\n  5033. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5034. verbosity_control.m (line 274): Function might be unused.\n  5035. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5036. verbosity_control.m (line 293): Function might be unused.\n  5037. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5038. verbosity_control.m (line 320): Function might be unused.\n  5039. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5040. verbosity_control.m (line 335): Function might be unused.\n  5041. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5042. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_131055\\verbosity_control.m: Missing arguments validation block\n  5043. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  5044. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  5045. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  5046. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  5047. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5048. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5049. Data_GUI.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5050. Data_GUI.m (line 739): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5051. Data_GUI.m (line 740): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5052. Data_GUI.m (line 741): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5053. Data_GUI.m (line 742): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5054. Data_GUI.m (line 758): Function might be unused.\n  5055. Data_GUI.m (line 983): Function might be unused.\n  5056. Data_GUI.m (line 998): Value assigned to variable might be unused.\n  5057. Data_GUI.m (line 1020): Function might be unused.\n  5058. Data_GUI.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5059. Data_GUI.m (line 1198): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5060. Data_GUI.m (line 1199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5061. Data_GUI.m (line 1200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5062. Data_GUI.m (line 1201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5063. Data_GUI.m (line 1231): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5064. Data_GUI.m (line 1232): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5065. Data_GUI.m (line 1233): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5066. Data_GUI.m (line 1253): Function might be unused.\n  5067. Data_GUI.m (line 1294): Function might be unused.\n  5068. Data_GUI.m (line 1370): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5069. Data_GUI.m (line 1440): Value assigned to variable might be unused.\n  5070. Data_GUI.m (line 1527): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5071. Data_GUI.m (line 1527): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5072. Data_GUI.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5073. Data_GUI.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5074. Data_GUI.m (line 1595): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5075. Data_GUI.m (line 1595): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5076. Data_GUI.m (line 1608): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5077. Data_GUI.m (line 1609): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5078. Data_GUI.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5079. Data_GUI.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5080. Data_GUI.m (line 1640): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5081. Data_GUI.m (line 1640): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5082. Data_GUI.m (line 1653): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5083. Data_GUI.m (line 1654): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5084. Data_GUI.m (line 1655): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5085. Data_GUI.m (line 1666): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5086. Data_GUI.m (line 1667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5087. Data_GUI.m (line 1672): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5088. Data_GUI.m (line 1673): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5089. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5090. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5091. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5092. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5093. Data_GUI.m (line 1738): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5094. Data_GUI.m (line 1750): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5095. Data_GUI.m (line 1750): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5096. Data_GUI.m (line 1806): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5097. Data_GUI.m (line 1806): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5098. Data_GUI.m (line 1856): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5099. Data_GUI.m (line 1856): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5100. Data_GUI.m (line 1903): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5101. Data_GUI.m (line 1903): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5102. Data_GUI.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5103. Data_GUI.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5104. Data_GUI.m (line 1955): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5105. Data_GUI.m (line 1955): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5106. Data_GUI.m (line 1976): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5107. Data_GUI.m (line 1976): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5108. Data_GUI.m (line 2000): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5109. Data_GUI.m (line 2000): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5110. Data_GUI.m (line 2025): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5111. Data_GUI.m (line 2025): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5112. Data_GUI.m (line 2040): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5113. Data_GUI.m (line 2051): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5114. Data_GUI.m (line 2051): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5115. Data_GUI.m (line 2056): Function might be unused.\n  5116. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5117. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5118. Data_GUI.m (line 2069): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5119. Data_GUI.m (line 2069): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5120. Data_GUI.m (line 2083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5121. Data_GUI.m (line 2083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5122. Data_GUI.m (line 2284): Value assigned to variable might be unused.\n  5123. Data_GUI.m (line 2343): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  5124. Data_GUI.m (line 2487): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  5125. Data_GUI.m (line 2626): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5126. Data_GUI.m (line 2626): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5127. Data_GUI.m (line 2748): Function might be unused.\n  5128. Data_GUI.m (line 2925): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5129. Data_GUI.m (line 2925): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5130. Data_GUI.m (line 2957): Function might be unused.\n  5131. Data_GUI.m (line 3108): Function might be unused.\n  5132. Data_GUI.m (line 3186): Function might be unused.\n  5133. Data_GUI.m (line 3201): This keyword might not be aligned with its matching END on line 3212.\n  5134. Data_GUI.m (line 3214): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  5135. Data_GUI.m (line 3430): This keyword might not be aligned with its matching END on line 3432.\n  5136. Data_GUI.m (line 3534): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  5137. Data_GUI.m (line 3569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5138. Data_GUI.m (line 3603): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5139. Data_GUI.m (line 3617): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5140. Data_GUI.m (line 3625): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5141. Data_GUI.m (line 3625): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5142. Data_GUI.m (line 3835): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5143. Data_GUI.m (line 3875): Function might be unused.\n  5144. Data_GUI.m (line 3907): Function might be unused.\n  5145. Data_GUI.m (line 3919): Value assigned to variable might be unused.\n  5146. Data_GUI.m (line 3929): Value assigned to variable might be unused.\n  5147. Data_GUI.m (line 3934): Value assigned to variable might be unused.\n  5148. Data_GUI.m (line 3939): Value assigned to variable might be unused.\n  5149. Data_GUI.m (line 3956): Value assigned to variable might be unused.\n  5150. Data_GUI.m (line 4065): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5151. Data_GUI.m (line 4066): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5152. Data_GUI.m (line 4073): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5153. Data_GUI.m (line 4074): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5154. Data_GUI.m (line 4087): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5155. Data_GUI.m (line 4089): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5156. Data_GUI.m (line 4111): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5157. Data_GUI.m (line 4112): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5158. Data_GUI.m (line 4132): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5159. Data_GUI.m (line 4133): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5160. Data_GUI.m (line 4145): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5161. Data_GUI.m (line 4146): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5162. Data_GUI.m (line 4164): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5163. Data_GUI.m (line 4165): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5164. Data_GUI.m (line 4209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5165. Data_GUI.m (line 4210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5166. Data_GUI.m (line 4217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5167. Data_GUI.m (line 4218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5168. Data_GUI.m (line 4237): Function might be unused.\n  5169. Data_GUI.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5170. Data_GUI.m (line 4296): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5171. Data_GUI.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5172. Data_GUI.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5173. Data_GUI.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5174. Data_GUI.m (line 4327): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5175. Data_GUI.m (line 4380): Function might be unused.\n  5176. Data_GUI.m (line 4427): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5177. Data_GUI.m (line 4492): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5178. Data_GUI.m (line 4493): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5179. Data_GUI.m (line 4541): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5180. Data_GUI.m (line 4550): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5181. Data_GUI.m (line 4555): This statement (and possibly following ones) cannot be reached.\n  5182. Data_GUI.m (line 4557): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5183. Data_GUI.m (line 4564): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5184. Data_GUI.m (line 4594): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5185. Data_GUI.m (line 4634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5186. Data_GUI.m (line 4657): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5187. Data_GUI.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5188. Data_GUI.m (line 4680): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5189. Data_GUI.m (line 4693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5190. Data_GUI.m (line 4787): Function might be unused.\n  5191. Data_GUI.m (line 4793): Value assigned to variable might be unused.\n  5192. Data_GUI.m (line 4821): Value assigned to variable might be unused.\n  5193. Data_GUI.m (line 4846): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5194. Data_GUI.m (line 4868): Value assigned to variable might be unused.\n  5195. Data_GUI.m (line 4902): Value assigned to variable might be unused.\n  5196. Data_GUI.m (line 4931): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5197. Data_GUI.m (line 4964): Function might be unused.\n  5198. Data_GUI.m (line 5008): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5199. Data_GUI.m (line 5009): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5200. Data_GUI.m (line 5032): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5201. Data_GUI.m (line 5033): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5202. Data_GUI.m (line 5053): Function might be unused.\n  5203. Data_GUI.m (line 5130): Function might be unused.\n  5204. Data_GUI.m (line 5147): Value assigned to variable might be unused.\n  5205. Data_GUI.m (line 5205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5206. Data_GUI.m (line 5206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5207. Data_GUI.m (line 5210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5208. Data_GUI.m (line 5211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5209. Data_GUI.m (line 5229): Function might be unused.\n  5210. Data_GUI.m (line 5287): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5211. Data_GUI.m (line 5287): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5212. Data_GUI.m (line 5319): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5213. Data_GUI.m (line 5319): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5214. Data_GUI.m (line 5482): Function might be unused.\n  5215. Data_GUI.m (line 5512): Function might be unused.\n  5216. Data_GUI.m (line 5603): Function might be unused.\n  5217. Data_GUI.m (line 5641): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5218. Data_GUI.m (line 5672): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5219. Data_GUI.m (line 5708): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5220. Data_GUI.m (line 5710): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5221. Data_GUI.m (line 5710): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5222. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\Data_GUI.m: Missing arguments validation block\n  5223. Data_GUI_BROKEN.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_BROKEN'.\n  5224. Data_GUI_BROKEN.m (line 239): Value assigned to variable might be unused.\n  5225. Data_GUI_BROKEN.m (line 340): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5226. Data_GUI_BROKEN.m (line 340): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5227. Data_GUI_BROKEN.m (line 734): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5228. Data_GUI_BROKEN.m (line 735): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5229. Data_GUI_BROKEN.m (line 736): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5230. Data_GUI_BROKEN.m (line 737): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5231. Data_GUI_BROKEN.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5232. Data_GUI_BROKEN.m (line 754): Function might be unused.\n  5233. Data_GUI_BROKEN.m (line 979): Function might be unused.\n  5234. Data_GUI_BROKEN.m (line 994): Value assigned to variable might be unused.\n  5235. Data_GUI_BROKEN.m (line 1016): Function might be unused.\n  5236. Data_GUI_BROKEN.m (line 1193): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5237. Data_GUI_BROKEN.m (line 1194): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5238. Data_GUI_BROKEN.m (line 1195): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5239. Data_GUI_BROKEN.m (line 1196): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5240. Data_GUI_BROKEN.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5241. Data_GUI_BROKEN.m (line 1227): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5242. Data_GUI_BROKEN.m (line 1228): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5243. Data_GUI_BROKEN.m (line 1229): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5244. Data_GUI_BROKEN.m (line 1249): Function might be unused.\n  5245. Data_GUI_BROKEN.m (line 1290): Function might be unused.\n  5246. Data_GUI_BROKEN.m (line 1366): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5247. Data_GUI_BROKEN.m (line 1436): Value assigned to variable might be unused.\n  5248. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5249. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5250. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5251. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5252. Data_GUI_BROKEN.m (line 1652): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5253. Data_GUI_BROKEN.m (line 1654): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5254. Data_GUI_BROKEN.m (line 1654): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5255. Data_GUI_BROKEN.m (line 1664): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5256. Data_GUI_BROKEN.m (line 1665): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5257. Data_GUI_BROKEN.m (line 1666): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5258. Data_GUI_BROKEN.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5259. Data_GUI_BROKEN.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5260. Data_GUI_BROKEN.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5261. Data_GUI_BROKEN.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5262. Data_GUI_BROKEN.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5263. Data_GUI_BROKEN.m (line 1672): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5264. Data_GUI_BROKEN.m (line 1673): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5265. Data_GUI_BROKEN.m (line 1674): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5266. Data_GUI_BROKEN.m (line 1675): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5267. Data_GUI_BROKEN.m (line 1676): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5268. Data_GUI_BROKEN.m (line 1677): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5269. Data_GUI_BROKEN.m (line 1678): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5270. Data_GUI_BROKEN.m (line 1679): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5271. Data_GUI_BROKEN.m (line 1680): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5272. Data_GUI_BROKEN.m (line 1681): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5273. Data_GUI_BROKEN.m (line 1682): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5274. Data_GUI_BROKEN.m (line 1683): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5275. Data_GUI_BROKEN.m (line 1684): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5276. Data_GUI_BROKEN.m (line 1685): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5277. Data_GUI_BROKEN.m (line 1686): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5278. Data_GUI_BROKEN.m (line 1687): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5279. Data_GUI_BROKEN.m (line 1688): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5280. Data_GUI_BROKEN.m (line 1689): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5281. Data_GUI_BROKEN.m (line 1690): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5282. Data_GUI_BROKEN.m (line 1691): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5283. Data_GUI_BROKEN.m (line 1692): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5284. Data_GUI_BROKEN.m (line 1693): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5285. Data_GUI_BROKEN.m (line 1694): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5286. Data_GUI_BROKEN.m (line 1695): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5287. Data_GUI_BROKEN.m (line 1696): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5288. Data_GUI_BROKEN.m (line 1697): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5289. Data_GUI_BROKEN.m (line 1698): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5290. Data_GUI_BROKEN.m (line 1699): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5291. Data_GUI_BROKEN.m (line 1700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5292. Data_GUI_BROKEN.m (line 1701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5293. Data_GUI_BROKEN.m (line 1702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5294. Data_GUI_BROKEN.m (line 1703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5295. Data_GUI_BROKEN.m (line 1704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5296. Data_GUI_BROKEN.m (line 1705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5297. Data_GUI_BROKEN.m (line 1706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5298. Data_GUI_BROKEN.m (line 1707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5299. Data_GUI_BROKEN.m (line 1708): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5300. Data_GUI_BROKEN.m (line 1709): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5301. Data_GUI_BROKEN.m (line 1710): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5302. Data_GUI_BROKEN.m (line 1711): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5303. Data_GUI_BROKEN.m (line 1712): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5304. Data_GUI_BROKEN.m (line 1713): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5305. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5306. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5307. Data_GUI_BROKEN.m (line 1767): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5308. Data_GUI_BROKEN.m (line 1768): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5309. Data_GUI_BROKEN.m (line 1769): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5310. Data_GUI_BROKEN.m (line 1770): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5311. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5312. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5313. Data_GUI_BROKEN.m (line 1812): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5314. Data_GUI_BROKEN.m (line 1813): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5315. Data_GUI_BROKEN.m (line 1814): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5316. Data_GUI_BROKEN.m (line 1825): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5317. Data_GUI_BROKEN.m (line 1826): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5318. Data_GUI_BROKEN.m (line 1831): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5319. Data_GUI_BROKEN.m (line 1832): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5320. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5321. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5322. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5323. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5324. Data_GUI_BROKEN.m (line 1897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5325. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5326. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5327. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5328. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5329. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5330. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5331. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5332. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5333. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5334. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5335. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5336. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5337. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5338. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5339. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5340. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5341. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5342. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5343. Data_GUI_BROKEN.m (line 2199): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5344. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5345. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5346. Data_GUI_BROKEN.m (line 2215): Function might be unused.\n  5347. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5348. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5349. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5350. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5351. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5352. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5353. Data_GUI_BROKEN.m (line 2427): Value assigned to variable might be unused.\n  5354. Data_GUI_BROKEN.m (line 2486): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  5355. Data_GUI_BROKEN.m (line 2630): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  5356. Data_GUI_BROKEN.m (line 2769): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5357. Data_GUI_BROKEN.m (line 2769): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5358. Data_GUI_BROKEN.m (line 2891): Function might be unused.\n  5359. Data_GUI_BROKEN.m (line 3068): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5360. Data_GUI_BROKEN.m (line 3068): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5361. Data_GUI_BROKEN.m (line 3100): Function might be unused.\n  5362. Data_GUI_BROKEN.m (line 3251): Function might be unused.\n  5363. Data_GUI_BROKEN.m (line 3329): Function might be unused.\n  5364. Data_GUI_BROKEN.m (line 3344): This keyword might not be aligned with its matching END on line 3355.\n  5365. Data_GUI_BROKEN.m (line 3357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  5366. Data_GUI_BROKEN.m (line 3573): This keyword might not be aligned with its matching END on line 3575.\n  5367. Data_GUI_BROKEN.m (line 3677): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  5368. Data_GUI_BROKEN.m (line 3712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5369. Data_GUI_BROKEN.m (line 3746): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5370. Data_GUI_BROKEN.m (line 3760): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5371. Data_GUI_BROKEN.m (line 3768): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5372. Data_GUI_BROKEN.m (line 3768): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5373. Data_GUI_BROKEN.m (line 3967): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5374. Data_GUI_BROKEN.m (line 4007): Function might be unused.\n  5375. Data_GUI_BROKEN.m (line 4039): Function might be unused.\n  5376. Data_GUI_BROKEN.m (line 4051): Value assigned to variable might be unused.\n  5377. Data_GUI_BROKEN.m (line 4061): Value assigned to variable might be unused.\n  5378. Data_GUI_BROKEN.m (line 4066): Value assigned to variable might be unused.\n  5379. Data_GUI_BROKEN.m (line 4071): Value assigned to variable might be unused.\n  5380. Data_GUI_BROKEN.m (line 4088): Value assigned to variable might be unused.\n  5381. Data_GUI_BROKEN.m (line 4197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5382. Data_GUI_BROKEN.m (line 4198): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5383. Data_GUI_BROKEN.m (line 4205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5384. Data_GUI_BROKEN.m (line 4206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5385. Data_GUI_BROKEN.m (line 4219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5386. Data_GUI_BROKEN.m (line 4221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5387. Data_GUI_BROKEN.m (line 4243): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5388. Data_GUI_BROKEN.m (line 4244): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5389. Data_GUI_BROKEN.m (line 4262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5390. Data_GUI_BROKEN.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5391. Data_GUI_BROKEN.m (line 4282): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5392. Data_GUI_BROKEN.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5393. Data_GUI_BROKEN.m (line 4294): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5394. Data_GUI_BROKEN.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5395. Data_GUI_BROKEN.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5396. Data_GUI_BROKEN.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5397. Data_GUI_BROKEN.m (line 4325): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5398. Data_GUI_BROKEN.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5399. Data_GUI_BROKEN.m (line 4370): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5400. Data_GUI_BROKEN.m (line 4371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5401. Data_GUI_BROKEN.m (line 4378): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5402. Data_GUI_BROKEN.m (line 4379): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5403. Data_GUI_BROKEN.m (line 4398): Function might be unused.\n  5404. Data_GUI_BROKEN.m (line 4456): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5405. Data_GUI_BROKEN.m (line 4457): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5406. Data_GUI_BROKEN.m (line 4467): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5407. Data_GUI_BROKEN.m (line 4468): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5408. Data_GUI_BROKEN.m (line 4487): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5409. Data_GUI_BROKEN.m (line 4488): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5410. Data_GUI_BROKEN.m (line 4541): Function might be unused.\n  5411. Data_GUI_BROKEN.m (line 4588): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5412. Data_GUI_BROKEN.m (line 4653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5413. Data_GUI_BROKEN.m (line 4654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5414. Data_GUI_BROKEN.m (line 4702): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5415. Data_GUI_BROKEN.m (line 4711): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5416. Data_GUI_BROKEN.m (line 4716): This statement (and possibly following ones) cannot be reached.\n  5417. Data_GUI_BROKEN.m (line 4718): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5418. Data_GUI_BROKEN.m (line 4725): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5419. Data_GUI_BROKEN.m (line 4755): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5420. Data_GUI_BROKEN.m (line 4795): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5421. Data_GUI_BROKEN.m (line 4818): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5422. Data_GUI_BROKEN.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5423. Data_GUI_BROKEN.m (line 4841): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5424. Data_GUI_BROKEN.m (line 4854): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5425. Data_GUI_BROKEN.m (line 4948): Function might be unused.\n  5426. Data_GUI_BROKEN.m (line 4954): Value assigned to variable might be unused.\n  5427. Data_GUI_BROKEN.m (line 4982): Value assigned to variable might be unused.\n  5428. Data_GUI_BROKEN.m (line 5007): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5429. Data_GUI_BROKEN.m (line 5029): Value assigned to variable might be unused.\n  5430. Data_GUI_BROKEN.m (line 5063): Value assigned to variable might be unused.\n  5431. Data_GUI_BROKEN.m (line 5092): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5432. Data_GUI_BROKEN.m (line 5125): Function might be unused.\n  5433. Data_GUI_BROKEN.m (line 5169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5434. Data_GUI_BROKEN.m (line 5170): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5435. Data_GUI_BROKEN.m (line 5193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5436. Data_GUI_BROKEN.m (line 5194): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5437. Data_GUI_BROKEN.m (line 5214): Function might be unused.\n  5438. Data_GUI_BROKEN.m (line 5291): Function might be unused.\n  5439. Data_GUI_BROKEN.m (line 5308): Value assigned to variable might be unused.\n  5440. Data_GUI_BROKEN.m (line 5366): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5441. Data_GUI_BROKEN.m (line 5367): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5442. Data_GUI_BROKEN.m (line 5371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5443. Data_GUI_BROKEN.m (line 5372): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5444. Data_GUI_BROKEN.m (line 5390): Function might be unused.\n  5445. Data_GUI_BROKEN.m (line 5448): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5446. Data_GUI_BROKEN.m (line 5448): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5447. Data_GUI_BROKEN.m (line 5480): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5448. Data_GUI_BROKEN.m (line 5480): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5449. Data_GUI_BROKEN.m (line 5643): Function might be unused.\n  5450. Data_GUI_BROKEN.m (line 5673): Function might be unused.\n  5451. Data_GUI_BROKEN.m (line 5764): Function might be unused.\n  5452. Data_GUI_BROKEN.m (line 5802): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5453. Data_GUI_BROKEN.m (line 5833): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5454. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\Data_GUI_BROKEN.m: Missing arguments validation block\n  5455. Data_GUI_No_Batch.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_No_Batch'.\n  5456. Data_GUI_No_Batch.m (line 237): Value assigned to variable might be unused.\n  5457. Data_GUI_No_Batch.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5458. Data_GUI_No_Batch.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5459. Data_GUI_No_Batch.m (line 700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5460. Data_GUI_No_Batch.m (line 701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5461. Data_GUI_No_Batch.m (line 702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5462. Data_GUI_No_Batch.m (line 703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5463. Data_GUI_No_Batch.m (line 704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5464. Data_GUI_No_Batch.m (line 720): Function might be unused.\n  5465. Data_GUI_No_Batch.m (line 945): Function might be unused.\n  5466. Data_GUI_No_Batch.m (line 960): Value assigned to variable might be unused.\n  5467. Data_GUI_No_Batch.m (line 982): Function might be unused.\n  5468. Data_GUI_No_Batch.m (line 1157): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5469. Data_GUI_No_Batch.m (line 1158): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5470. Data_GUI_No_Batch.m (line 1159): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5471. Data_GUI_No_Batch.m (line 1160): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5472. Data_GUI_No_Batch.m (line 1161): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5473. Data_GUI_No_Batch.m (line 1191): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5474. Data_GUI_No_Batch.m (line 1192): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5475. Data_GUI_No_Batch.m (line 1193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5476. Data_GUI_No_Batch.m (line 1213): Function might be unused.\n  5477. Data_GUI_No_Batch.m (line 1254): Function might be unused.\n  5478. Data_GUI_No_Batch.m (line 1330): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5479. Data_GUI_No_Batch.m (line 1400): Value assigned to variable might be unused.\n  5480. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5481. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5482. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5483. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5484. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5485. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5486. Data_GUI_No_Batch.m (line 1565): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5487. Data_GUI_No_Batch.m (line 1566): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5488. Data_GUI_No_Batch.m (line 1567): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5489. Data_GUI_No_Batch.m (line 1568): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5490. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5491. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5492. Data_GUI_No_Batch.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5493. Data_GUI_No_Batch.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5494. Data_GUI_No_Batch.m (line 1612): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5495. Data_GUI_No_Batch.m (line 1623): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5496. Data_GUI_No_Batch.m (line 1624): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5497. Data_GUI_No_Batch.m (line 1629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5498. Data_GUI_No_Batch.m (line 1630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5499. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5500. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5501. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5502. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5503. Data_GUI_No_Batch.m (line 1695): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5504. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5505. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5506. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5507. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5508. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5509. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5510. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5511. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5512. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5513. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5514. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5515. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5516. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5517. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5518. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5519. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5520. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5521. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5522. Data_GUI_No_Batch.m (line 1997): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5523. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5524. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5525. Data_GUI_No_Batch.m (line 2013): Function might be unused.\n  5526. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5527. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5528. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5529. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5530. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5531. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5532. Data_GUI_No_Batch.m (line 2222): Value assigned to variable might be unused.\n  5533. Data_GUI_No_Batch.m (line 2281): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  5534. Data_GUI_No_Batch.m (line 2385): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  5535. Data_GUI_No_Batch.m (line 2524): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5536. Data_GUI_No_Batch.m (line 2524): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5537. Data_GUI_No_Batch.m (line 2646): Function might be unused.\n  5538. Data_GUI_No_Batch.m (line 2821): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5539. Data_GUI_No_Batch.m (line 2821): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5540. Data_GUI_No_Batch.m (line 2853): Function might be unused.\n  5541. Data_GUI_No_Batch.m (line 2971): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5542. Data_GUI_No_Batch.m (line 3151): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5543. Data_GUI_No_Batch.m (line 3249): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  5544. Data_GUI_No_Batch.m (line 3297): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5545. Data_GUI_No_Batch.m (line 3297): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5546. Data_GUI_No_Batch.m (line 3626): This keyword might not be aligned with its matching END on line 3637.\n  5547. Data_GUI_No_Batch.m (line 3639): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  5548. Data_GUI_No_Batch.m (line 3855): This keyword might not be aligned with its matching END on line 3857.\n  5549. Data_GUI_No_Batch.m (line 3959): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  5550. Data_GUI_No_Batch.m (line 3969): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5551. Data_GUI_No_Batch.m (line 3970): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5552. Data_GUI_No_Batch.m (line 3971): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5553. Data_GUI_No_Batch.m (line 4014): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5554. Data_GUI_No_Batch.m (line 4015): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5555. Data_GUI_No_Batch.m (line 4025): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  5556. Data_GUI_No_Batch.m (line 4041): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5557. Data_GUI_No_Batch.m (line 4042): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5558. Data_GUI_No_Batch.m (line 4083): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5559. Data_GUI_No_Batch.m (line 4117): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5560. Data_GUI_No_Batch.m (line 4131): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5561. Data_GUI_No_Batch.m (line 4139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5562. Data_GUI_No_Batch.m (line 4139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5563. Data_GUI_No_Batch.m (line 4338): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5564. Data_GUI_No_Batch.m (line 4378): Function might be unused.\n  5565. Data_GUI_No_Batch.m (line 4422): Value assigned to variable might be unused.\n  5566. Data_GUI_No_Batch.m (line 4432): Value assigned to variable might be unused.\n  5567. Data_GUI_No_Batch.m (line 4437): Value assigned to variable might be unused.\n  5568. Data_GUI_No_Batch.m (line 4442): Value assigned to variable might be unused.\n  5569. Data_GUI_No_Batch.m (line 4459): Value assigned to variable might be unused.\n  5570. Data_GUI_No_Batch.m (line 4568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5571. Data_GUI_No_Batch.m (line 4569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5572. Data_GUI_No_Batch.m (line 4576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5573. Data_GUI_No_Batch.m (line 4577): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5574. Data_GUI_No_Batch.m (line 4590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5575. Data_GUI_No_Batch.m (line 4592): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5576. Data_GUI_No_Batch.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5577. Data_GUI_No_Batch.m (line 4615): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5578. Data_GUI_No_Batch.m (line 4635): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5579. Data_GUI_No_Batch.m (line 4636): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5580. Data_GUI_No_Batch.m (line 4648): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5581. Data_GUI_No_Batch.m (line 4649): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5582. Data_GUI_No_Batch.m (line 4667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5583. Data_GUI_No_Batch.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5584. Data_GUI_No_Batch.m (line 4712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5585. Data_GUI_No_Batch.m (line 4713): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5586. Data_GUI_No_Batch.m (line 4720): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5587. Data_GUI_No_Batch.m (line 4721): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5588. Data_GUI_No_Batch.m (line 4798): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5589. Data_GUI_No_Batch.m (line 4799): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5590. Data_GUI_No_Batch.m (line 4809): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5591. Data_GUI_No_Batch.m (line 4810): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5592. Data_GUI_No_Batch.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5593. Data_GUI_No_Batch.m (line 4830): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5594. Data_GUI_No_Batch.m (line 4930): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5595. Data_GUI_No_Batch.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5596. Data_GUI_No_Batch.m (line 4996): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5597. Data_GUI_No_Batch.m (line 5044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5598. Data_GUI_No_Batch.m (line 5053): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5599. Data_GUI_No_Batch.m (line 5058): This statement (and possibly following ones) cannot be reached.\n  5600. Data_GUI_No_Batch.m (line 5060): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5601. Data_GUI_No_Batch.m (line 5067): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5602. Data_GUI_No_Batch.m (line 5097): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5603. Data_GUI_No_Batch.m (line 5137): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5604. Data_GUI_No_Batch.m (line 5160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5605. Data_GUI_No_Batch.m (line 5171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5606. Data_GUI_No_Batch.m (line 5183): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5607. Data_GUI_No_Batch.m (line 5196): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5608. Data_GUI_No_Batch.m (line 5225): Value assigned to variable might be unused.\n  5609. Data_GUI_No_Batch.m (line 5252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5610. Data_GUI_No_Batch.m (line 5284): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  5611. Data_GUI_No_Batch.m (line 5298): Value assigned to variable might be unused.\n  5612. Data_GUI_No_Batch.m (line 5316): Value assigned to variable might be unused.\n  5613. Data_GUI_No_Batch.m (line 5332): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5614. Data_GUI_No_Batch.m (line 5360): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5615. Data_GUI_No_Batch.m (line 5447): Function might be unused.\n  5616. Data_GUI_No_Batch.m (line 5453): Value assigned to variable might be unused.\n  5617. Data_GUI_No_Batch.m (line 5481): Value assigned to variable might be unused.\n  5618. Data_GUI_No_Batch.m (line 5506): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5619. Data_GUI_No_Batch.m (line 5528): Value assigned to variable might be unused.\n  5620. Data_GUI_No_Batch.m (line 5562): Value assigned to variable might be unused.\n  5621. Data_GUI_No_Batch.m (line 5591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5622. Data_GUI_No_Batch.m (line 5624): Function might be unused.\n  5623. Data_GUI_No_Batch.m (line 5668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5624. Data_GUI_No_Batch.m (line 5669): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5625. Data_GUI_No_Batch.m (line 5692): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5626. Data_GUI_No_Batch.m (line 5693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5627. Data_GUI_No_Batch.m (line 5790): Function might be unused.\n  5628. Data_GUI_No_Batch.m (line 5807): Value assigned to variable might be unused.\n  5629. Data_GUI_No_Batch.m (line 5865): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5630. Data_GUI_No_Batch.m (line 5866): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5631. Data_GUI_No_Batch.m (line 5870): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5632. Data_GUI_No_Batch.m (line 5871): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5633. Data_GUI_No_Batch.m (line 5889): Function might be unused.\n  5634. Data_GUI_No_Batch.m (line 5947): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5635. Data_GUI_No_Batch.m (line 5947): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5636. Data_GUI_No_Batch.m (line 5979): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5637. Data_GUI_No_Batch.m (line 5979): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5638. Data_GUI_No_Batch.m (line 6142): Function might be unused.\n  5639. Data_GUI_No_Batch.m (line 6172): Function might be unused.\n  5640. Data_GUI_No_Batch.m (line 6263): Function might be unused.\n  5641. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\Data_GUI_No_Batch.m: Missing arguments validation block\n  5642. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  5643. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\addModelWorkspaceData.m: Missing arguments validation block\n  5644. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\checkHighMemoryUsage.m: Missing function docstring\n  5645. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\checkHighMemoryUsage.m: Missing arguments validation block\n  5646. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\checkModelConfiguration.m: Missing arguments validation block\n  5647. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\checkStopRequest.m: Missing function docstring\n  5648. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\checkStopRequest.m: Missing arguments validation block\n  5649. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5650. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5651. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5652. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5653. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5654. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5655. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5656. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\check_model_configuration.m: Missing arguments validation block\n  5657. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5658. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5659. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5660. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\checkpoint_recovery.m: Missing arguments validation block\n  5661. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\combineDataSources.m: Missing arguments validation block\n  5662. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  5663. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5664. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5665. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5666. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5667. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5668. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5669. data_extraction_functions.m (line 146): Function might be unused.\n  5670. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5671. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5672. data_extraction_functions.m (line 202): Function might be unused.\n  5673. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5674. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5675. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5676. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5677. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\data_extraction_functions.m: Missing function docstring\n  5678. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\data_extraction_functions.m: Missing arguments validation block\n  5679. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5680. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\endPhase.m: Missing arguments validation block\n  5681. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  5682. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5683. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5684. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5685. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5686. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5687. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5688. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractAllSignalsFromBus.m: Missing arguments validation block\n  5689. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  5690. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractCoefficientsFromTable.m: Missing function docstring\n  5691. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractCoefficientsFromTable.m: Missing arguments validation block\n  5692. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5693. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5694. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5695. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5696. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5697. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5698. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5699. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5700. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5701. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5702. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5703. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5704. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractCombinedSignalBusData.m: Missing function docstring\n  5705. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractCombinedSignalBusData.m: Missing arguments validation block\n  5706. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5707. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5708. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5709. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5710. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5711. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractConstantMatrixData.m: Missing function docstring\n  5712. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractConstantMatrixData.m: Missing arguments validation block\n  5713. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractDataFromField.m: Missing arguments validation block\n  5714. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  5715. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  5716. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractDataWithOptions.m: Missing arguments validation block\n  5717. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  5718. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  5719. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  5720. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  5721. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  5722. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5723. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5724. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5725. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5726. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5727. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5728. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5729. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5730. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5731. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5732. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5733. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5734. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5735. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5736. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5737. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5738. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5739. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5740. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractFromCombinedSignalBus.m: Missing function docstring\n  5741. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  5742. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  5743. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  5744. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  5745. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  5746. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  5747. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  5748. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5749. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5750. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5751. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5752. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5753. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5754. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5755. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5756. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5757. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5758. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5759. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5760. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5761. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5762. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5763. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5764. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  5765. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  5766. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5767. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5768. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractFromNestedStruct.m: Missing arguments validation block\n  5769. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5770. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5771. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5772. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5773. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5774. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5775. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractLogsoutDataFixed.m: Missing function docstring\n  5776. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractLogsoutDataFixed.m: Missing arguments validation block\n  5777. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractSignalsFromSimOut.m: Missing arguments validation block\n  5778. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5779. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5780. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5781. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractSimscapeDataRecursive.m: Missing function docstring\n  5782. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  5783. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractTimeSeriesData.m: Missing function docstring\n  5784. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractTimeSeriesData.m: Missing arguments validation block\n  5785. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5786. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5787. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5788. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5789. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractWorkspaceOutputs.m: Missing function docstring\n  5790. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\extractWorkspaceOutputs.m: Missing arguments validation block\n  5791. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5792. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5793. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  5794. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5795. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5796. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5797. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\fallbackSimlogExtraction.m: Missing function docstring\n  5798. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\fallbackSimlogExtraction.m: Missing arguments validation block\n  5799. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\generateRandomCoefficients.m: Missing arguments validation block\n  5800. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\getMemoryInfo.m: Missing function docstring\n  5801. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\getMemoryInfo.m: Missing arguments validation block\n  5802. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\getMemoryUsage.m: Missing arguments validation block\n  5803. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5804. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5805. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5806. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5807. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5808. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5809. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5810. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  5811. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5812. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5813. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5814. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5815. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5816. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\getPolynomialParameterInfo.m: Missing arguments validation block\n  5817. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\getShortenedJointName.m: Missing arguments validation block\n  5818. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5819. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5820. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  5821. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  5822. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\loadInputFile.m: Missing function docstring\n  5823. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\loadInputFile.m: Missing arguments validation block\n  5824. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\logBatchResult.m: Missing arguments validation block\n  5825. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5826. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\logMessage.m: Missing arguments validation block\n  5827. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\logical2str.m: Missing function docstring\n  5828. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\logical2str.m: Missing arguments validation block\n  5829. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  5830. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\memory_monitor.m: Missing arguments validation block\n  5831. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\mergeTables.m: Missing function docstring\n  5832. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\mergeTables.m: Missing arguments validation block\n  5833. performance_monitor.m (line 11): Persistent variable might be unused.\n  5834. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5835. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5836. performance_monitor.m (line 77): Function might be unused.\n  5837. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5838. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5839. performance_monitor.m (line 118): Function might be unused.\n  5840. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5841. performance_monitor.m (line 133): Function might be unused.\n  5842. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5843. performance_monitor.m (line 149): Function might be unused.\n  5844. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5845. performance_monitor.m (line 162): Function might be unused.\n  5846. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5847. performance_monitor.m (line 175): Function might be unused.\n  5848. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5849. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5850. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5851. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\performance_monitor.m: Missing arguments validation block\n  5852. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  5853. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  5854. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5855. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5856. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\processSimulationOutput.m: Missing function docstring\n  5857. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\processSimulationOutput.m: Missing arguments validation block\n  5858. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5859. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\recordBatchTime.m: Missing arguments validation block\n  5860. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5861. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\recordPhase.m: Missing arguments validation block\n  5862. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\resampleDataToFrequency.m: Missing function docstring\n  5863. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\resampleDataToFrequency.m: Missing arguments validation block\n  5864. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\restoreWorkspace.m: Missing arguments validation block\n  5865. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\runSingleTrial.m: Missing arguments validation block\n  5866. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\setModelParameters.m: Missing arguments validation block\n  5867. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5868. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\setPolynomialCoefficients.m: Missing arguments validation block\n  5869. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\shouldShowDebug.m: Missing function docstring\n  5870. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\shouldShowDebug.m: Missing arguments validation block\n  5871. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\shouldShowNormal.m: Missing function docstring\n  5872. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\shouldShowNormal.m: Missing arguments validation block\n  5873. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\shouldShowVerbose.m: Missing function docstring\n  5874. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\shouldShowVerbose.m: Missing arguments validation block\n  5875. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  5876. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5877. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\traverseSimlogNode.m: Missing arguments validation block\n  5878. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5879. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5880. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5881. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5882. verbosity_control.m (line 203): Function might be unused.\n  5883. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5884. verbosity_control.m (line 225): Function might be unused.\n  5885. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5886. verbosity_control.m (line 248): Function might be unused.\n  5887. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5888. verbosity_control.m (line 274): Function might be unused.\n  5889. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5890. verbosity_control.m (line 293): Function might be unused.\n  5891. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5892. verbosity_control.m (line 320): Function might be unused.\n  5893. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5894. verbosity_control.m (line 335): Function might be unused.\n  5895. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  5896. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201110\\verbosity_control.m: Missing arguments validation block\n  5897. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  5898. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  5899. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  5900. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  5901. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5902. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5903. Data_GUI.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5904. Data_GUI.m (line 739): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5905. Data_GUI.m (line 740): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5906. Data_GUI.m (line 741): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5907. Data_GUI.m (line 742): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5908. Data_GUI.m (line 758): Function might be unused.\n  5909. Data_GUI.m (line 983): Function might be unused.\n  5910. Data_GUI.m (line 998): Value assigned to variable might be unused.\n  5911. Data_GUI.m (line 1020): Function might be unused.\n  5912. Data_GUI.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5913. Data_GUI.m (line 1198): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5914. Data_GUI.m (line 1199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5915. Data_GUI.m (line 1200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5916. Data_GUI.m (line 1201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5917. Data_GUI.m (line 1231): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5918. Data_GUI.m (line 1232): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5919. Data_GUI.m (line 1233): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5920. Data_GUI.m (line 1253): Function might be unused.\n  5921. Data_GUI.m (line 1294): Function might be unused.\n  5922. Data_GUI.m (line 1370): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5923. Data_GUI.m (line 1440): Value assigned to variable might be unused.\n  5924. Data_GUI.m (line 1527): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5925. Data_GUI.m (line 1527): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5926. Data_GUI.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5927. Data_GUI.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5928. Data_GUI.m (line 1595): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5929. Data_GUI.m (line 1595): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5930. Data_GUI.m (line 1608): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5931. Data_GUI.m (line 1609): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5932. Data_GUI.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5933. Data_GUI.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5934. Data_GUI.m (line 1640): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5935. Data_GUI.m (line 1640): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5936. Data_GUI.m (line 1653): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5937. Data_GUI.m (line 1654): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5938. Data_GUI.m (line 1655): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  5939. Data_GUI.m (line 1666): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5940. Data_GUI.m (line 1667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5941. Data_GUI.m (line 1672): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5942. Data_GUI.m (line 1673): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5943. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5944. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5945. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5946. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5947. Data_GUI.m (line 1738): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5948. Data_GUI.m (line 1750): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5949. Data_GUI.m (line 1750): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5950. Data_GUI.m (line 1806): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5951. Data_GUI.m (line 1806): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5952. Data_GUI.m (line 1856): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5953. Data_GUI.m (line 1856): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5954. Data_GUI.m (line 1903): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5955. Data_GUI.m (line 1903): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5956. Data_GUI.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5957. Data_GUI.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5958. Data_GUI.m (line 1955): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5959. Data_GUI.m (line 1955): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5960. Data_GUI.m (line 1976): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5961. Data_GUI.m (line 1976): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5962. Data_GUI.m (line 2000): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5963. Data_GUI.m (line 2000): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5964. Data_GUI.m (line 2025): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5965. Data_GUI.m (line 2025): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5966. Data_GUI.m (line 2040): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5967. Data_GUI.m (line 2051): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5968. Data_GUI.m (line 2051): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5969. Data_GUI.m (line 2056): Function might be unused.\n  5970. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5971. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5972. Data_GUI.m (line 2069): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5973. Data_GUI.m (line 2069): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5974. Data_GUI.m (line 2083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5975. Data_GUI.m (line 2083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5976. Data_GUI.m (line 2284): Value assigned to variable might be unused.\n  5977. Data_GUI.m (line 2343): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  5978. Data_GUI.m (line 2487): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  5979. Data_GUI.m (line 2626): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5980. Data_GUI.m (line 2626): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5981. Data_GUI.m (line 2748): Function might be unused.\n  5982. Data_GUI.m (line 2925): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5983. Data_GUI.m (line 2925): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5984. Data_GUI.m (line 2957): Function might be unused.\n  5985. Data_GUI.m (line 3108): Function might be unused.\n  5986. Data_GUI.m (line 3186): Function might be unused.\n  5987. Data_GUI.m (line 3201): This keyword might not be aligned with its matching END on line 3212.\n  5988. Data_GUI.m (line 3214): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  5989. Data_GUI.m (line 3430): This keyword might not be aligned with its matching END on line 3432.\n  5990. Data_GUI.m (line 3534): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  5991. Data_GUI.m (line 3569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5992. Data_GUI.m (line 3603): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5993. Data_GUI.m (line 3617): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  5994. Data_GUI.m (line 3625): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  5995. Data_GUI.m (line 3625): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  5996. Data_GUI.m (line 3835): Input argument might be unused. Consider replacing the argument with ~ instead.\n  5997. Data_GUI.m (line 3875): Function might be unused.\n  5998. Data_GUI.m (line 3907): Function might be unused.\n  5999. Data_GUI.m (line 3919): Value assigned to variable might be unused.\n  6000. Data_GUI.m (line 3929): Value assigned to variable might be unused.\n  6001. Data_GUI.m (line 3934): Value assigned to variable might be unused.\n  6002. Data_GUI.m (line 3939): Value assigned to variable might be unused.\n  6003. Data_GUI.m (line 3956): Value assigned to variable might be unused.\n  6004. Data_GUI.m (line 4065): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6005. Data_GUI.m (line 4066): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6006. Data_GUI.m (line 4073): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6007. Data_GUI.m (line 4074): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6008. Data_GUI.m (line 4087): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6009. Data_GUI.m (line 4089): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6010. Data_GUI.m (line 4111): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6011. Data_GUI.m (line 4112): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6012. Data_GUI.m (line 4132): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6013. Data_GUI.m (line 4133): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6014. Data_GUI.m (line 4145): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6015. Data_GUI.m (line 4146): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6016. Data_GUI.m (line 4164): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6017. Data_GUI.m (line 4165): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6018. Data_GUI.m (line 4209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6019. Data_GUI.m (line 4210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6020. Data_GUI.m (line 4217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6021. Data_GUI.m (line 4218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6022. Data_GUI.m (line 4237): Function might be unused.\n  6023. Data_GUI.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6024. Data_GUI.m (line 4296): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6025. Data_GUI.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6026. Data_GUI.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6027. Data_GUI.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6028. Data_GUI.m (line 4327): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6029. Data_GUI.m (line 4380): Function might be unused.\n  6030. Data_GUI.m (line 4427): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6031. Data_GUI.m (line 4492): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6032. Data_GUI.m (line 4493): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6033. Data_GUI.m (line 4541): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6034. Data_GUI.m (line 4550): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6035. Data_GUI.m (line 4555): This statement (and possibly following ones) cannot be reached.\n  6036. Data_GUI.m (line 4557): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6037. Data_GUI.m (line 4564): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6038. Data_GUI.m (line 4594): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6039. Data_GUI.m (line 4634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6040. Data_GUI.m (line 4657): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6041. Data_GUI.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6042. Data_GUI.m (line 4680): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6043. Data_GUI.m (line 4693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6044. Data_GUI.m (line 4787): Function might be unused.\n  6045. Data_GUI.m (line 4793): Value assigned to variable might be unused.\n  6046. Data_GUI.m (line 4821): Value assigned to variable might be unused.\n  6047. Data_GUI.m (line 4846): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6048. Data_GUI.m (line 4868): Value assigned to variable might be unused.\n  6049. Data_GUI.m (line 4902): Value assigned to variable might be unused.\n  6050. Data_GUI.m (line 4931): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6051. Data_GUI.m (line 4964): Function might be unused.\n  6052. Data_GUI.m (line 5008): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6053. Data_GUI.m (line 5009): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6054. Data_GUI.m (line 5032): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6055. Data_GUI.m (line 5033): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6056. Data_GUI.m (line 5053): Function might be unused.\n  6057. Data_GUI.m (line 5130): Function might be unused.\n  6058. Data_GUI.m (line 5147): Value assigned to variable might be unused.\n  6059. Data_GUI.m (line 5205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6060. Data_GUI.m (line 5206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6061. Data_GUI.m (line 5210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6062. Data_GUI.m (line 5211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6063. Data_GUI.m (line 5229): Function might be unused.\n  6064. Data_GUI.m (line 5287): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6065. Data_GUI.m (line 5287): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6066. Data_GUI.m (line 5319): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6067. Data_GUI.m (line 5319): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6068. Data_GUI.m (line 5482): Function might be unused.\n  6069. Data_GUI.m (line 5512): Function might be unused.\n  6070. Data_GUI.m (line 5603): Function might be unused.\n  6071. Data_GUI.m (line 5641): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6072. Data_GUI.m (line 5672): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6073. Data_GUI.m (line 5708): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6074. Data_GUI.m (line 5710): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6075. Data_GUI.m (line 5710): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6076. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\Data_GUI.m: Missing arguments validation block\n  6077. Data_GUI_BROKEN.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_BROKEN'.\n  6078. Data_GUI_BROKEN.m (line 239): Value assigned to variable might be unused.\n  6079. Data_GUI_BROKEN.m (line 340): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6080. Data_GUI_BROKEN.m (line 340): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6081. Data_GUI_BROKEN.m (line 734): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6082. Data_GUI_BROKEN.m (line 735): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6083. Data_GUI_BROKEN.m (line 736): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6084. Data_GUI_BROKEN.m (line 737): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6085. Data_GUI_BROKEN.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6086. Data_GUI_BROKEN.m (line 754): Function might be unused.\n  6087. Data_GUI_BROKEN.m (line 979): Function might be unused.\n  6088. Data_GUI_BROKEN.m (line 994): Value assigned to variable might be unused.\n  6089. Data_GUI_BROKEN.m (line 1016): Function might be unused.\n  6090. Data_GUI_BROKEN.m (line 1193): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6091. Data_GUI_BROKEN.m (line 1194): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6092. Data_GUI_BROKEN.m (line 1195): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6093. Data_GUI_BROKEN.m (line 1196): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6094. Data_GUI_BROKEN.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6095. Data_GUI_BROKEN.m (line 1227): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6096. Data_GUI_BROKEN.m (line 1228): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6097. Data_GUI_BROKEN.m (line 1229): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6098. Data_GUI_BROKEN.m (line 1249): Function might be unused.\n  6099. Data_GUI_BROKEN.m (line 1290): Function might be unused.\n  6100. Data_GUI_BROKEN.m (line 1366): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6101. Data_GUI_BROKEN.m (line 1436): Value assigned to variable might be unused.\n  6102. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6103. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6104. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6105. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6106. Data_GUI_BROKEN.m (line 1652): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6107. Data_GUI_BROKEN.m (line 1654): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6108. Data_GUI_BROKEN.m (line 1654): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6109. Data_GUI_BROKEN.m (line 1664): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6110. Data_GUI_BROKEN.m (line 1665): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6111. Data_GUI_BROKEN.m (line 1666): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6112. Data_GUI_BROKEN.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6113. Data_GUI_BROKEN.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6114. Data_GUI_BROKEN.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6115. Data_GUI_BROKEN.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6116. Data_GUI_BROKEN.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6117. Data_GUI_BROKEN.m (line 1672): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6118. Data_GUI_BROKEN.m (line 1673): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6119. Data_GUI_BROKEN.m (line 1674): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6120. Data_GUI_BROKEN.m (line 1675): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6121. Data_GUI_BROKEN.m (line 1676): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6122. Data_GUI_BROKEN.m (line 1677): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6123. Data_GUI_BROKEN.m (line 1678): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6124. Data_GUI_BROKEN.m (line 1679): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6125. Data_GUI_BROKEN.m (line 1680): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6126. Data_GUI_BROKEN.m (line 1681): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6127. Data_GUI_BROKEN.m (line 1682): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6128. Data_GUI_BROKEN.m (line 1683): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6129. Data_GUI_BROKEN.m (line 1684): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6130. Data_GUI_BROKEN.m (line 1685): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6131. Data_GUI_BROKEN.m (line 1686): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6132. Data_GUI_BROKEN.m (line 1687): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6133. Data_GUI_BROKEN.m (line 1688): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6134. Data_GUI_BROKEN.m (line 1689): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6135. Data_GUI_BROKEN.m (line 1690): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6136. Data_GUI_BROKEN.m (line 1691): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6137. Data_GUI_BROKEN.m (line 1692): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6138. Data_GUI_BROKEN.m (line 1693): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6139. Data_GUI_BROKEN.m (line 1694): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6140. Data_GUI_BROKEN.m (line 1695): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6141. Data_GUI_BROKEN.m (line 1696): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6142. Data_GUI_BROKEN.m (line 1697): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6143. Data_GUI_BROKEN.m (line 1698): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6144. Data_GUI_BROKEN.m (line 1699): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6145. Data_GUI_BROKEN.m (line 1700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6146. Data_GUI_BROKEN.m (line 1701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6147. Data_GUI_BROKEN.m (line 1702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6148. Data_GUI_BROKEN.m (line 1703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6149. Data_GUI_BROKEN.m (line 1704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6150. Data_GUI_BROKEN.m (line 1705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6151. Data_GUI_BROKEN.m (line 1706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6152. Data_GUI_BROKEN.m (line 1707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6153. Data_GUI_BROKEN.m (line 1708): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6154. Data_GUI_BROKEN.m (line 1709): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6155. Data_GUI_BROKEN.m (line 1710): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6156. Data_GUI_BROKEN.m (line 1711): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6157. Data_GUI_BROKEN.m (line 1712): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6158. Data_GUI_BROKEN.m (line 1713): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6159. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6160. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6161. Data_GUI_BROKEN.m (line 1767): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6162. Data_GUI_BROKEN.m (line 1768): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6163. Data_GUI_BROKEN.m (line 1769): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6164. Data_GUI_BROKEN.m (line 1770): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6165. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6166. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6167. Data_GUI_BROKEN.m (line 1812): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6168. Data_GUI_BROKEN.m (line 1813): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6169. Data_GUI_BROKEN.m (line 1814): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6170. Data_GUI_BROKEN.m (line 1825): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6171. Data_GUI_BROKEN.m (line 1826): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6172. Data_GUI_BROKEN.m (line 1831): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6173. Data_GUI_BROKEN.m (line 1832): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6174. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6175. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6176. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6177. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6178. Data_GUI_BROKEN.m (line 1897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6179. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6180. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6181. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6182. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6183. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6184. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6185. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6186. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6187. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6188. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6189. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6190. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6191. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6192. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6193. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6194. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6195. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6196. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6197. Data_GUI_BROKEN.m (line 2199): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6198. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6199. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6200. Data_GUI_BROKEN.m (line 2215): Function might be unused.\n  6201. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6202. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6203. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6204. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6205. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6206. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6207. Data_GUI_BROKEN.m (line 2427): Value assigned to variable might be unused.\n  6208. Data_GUI_BROKEN.m (line 2486): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  6209. Data_GUI_BROKEN.m (line 2630): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  6210. Data_GUI_BROKEN.m (line 2769): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6211. Data_GUI_BROKEN.m (line 2769): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6212. Data_GUI_BROKEN.m (line 2891): Function might be unused.\n  6213. Data_GUI_BROKEN.m (line 3068): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6214. Data_GUI_BROKEN.m (line 3068): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6215. Data_GUI_BROKEN.m (line 3100): Function might be unused.\n  6216. Data_GUI_BROKEN.m (line 3251): Function might be unused.\n  6217. Data_GUI_BROKEN.m (line 3329): Function might be unused.\n  6218. Data_GUI_BROKEN.m (line 3344): This keyword might not be aligned with its matching END on line 3355.\n  6219. Data_GUI_BROKEN.m (line 3357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  6220. Data_GUI_BROKEN.m (line 3573): This keyword might not be aligned with its matching END on line 3575.\n  6221. Data_GUI_BROKEN.m (line 3677): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  6222. Data_GUI_BROKEN.m (line 3712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6223. Data_GUI_BROKEN.m (line 3746): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6224. Data_GUI_BROKEN.m (line 3760): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6225. Data_GUI_BROKEN.m (line 3768): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6226. Data_GUI_BROKEN.m (line 3768): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6227. Data_GUI_BROKEN.m (line 3967): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6228. Data_GUI_BROKEN.m (line 4007): Function might be unused.\n  6229. Data_GUI_BROKEN.m (line 4039): Function might be unused.\n  6230. Data_GUI_BROKEN.m (line 4051): Value assigned to variable might be unused.\n  6231. Data_GUI_BROKEN.m (line 4061): Value assigned to variable might be unused.\n  6232. Data_GUI_BROKEN.m (line 4066): Value assigned to variable might be unused.\n  6233. Data_GUI_BROKEN.m (line 4071): Value assigned to variable might be unused.\n  6234. Data_GUI_BROKEN.m (line 4088): Value assigned to variable might be unused.\n  6235. Data_GUI_BROKEN.m (line 4197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6236. Data_GUI_BROKEN.m (line 4198): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6237. Data_GUI_BROKEN.m (line 4205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6238. Data_GUI_BROKEN.m (line 4206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6239. Data_GUI_BROKEN.m (line 4219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6240. Data_GUI_BROKEN.m (line 4221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6241. Data_GUI_BROKEN.m (line 4243): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6242. Data_GUI_BROKEN.m (line 4244): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6243. Data_GUI_BROKEN.m (line 4262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6244. Data_GUI_BROKEN.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6245. Data_GUI_BROKEN.m (line 4282): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6246. Data_GUI_BROKEN.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6247. Data_GUI_BROKEN.m (line 4294): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6248. Data_GUI_BROKEN.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6249. Data_GUI_BROKEN.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6250. Data_GUI_BROKEN.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6251. Data_GUI_BROKEN.m (line 4325): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6252. Data_GUI_BROKEN.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6253. Data_GUI_BROKEN.m (line 4370): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6254. Data_GUI_BROKEN.m (line 4371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6255. Data_GUI_BROKEN.m (line 4378): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6256. Data_GUI_BROKEN.m (line 4379): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6257. Data_GUI_BROKEN.m (line 4398): Function might be unused.\n  6258. Data_GUI_BROKEN.m (line 4456): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6259. Data_GUI_BROKEN.m (line 4457): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6260. Data_GUI_BROKEN.m (line 4467): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6261. Data_GUI_BROKEN.m (line 4468): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6262. Data_GUI_BROKEN.m (line 4487): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6263. Data_GUI_BROKEN.m (line 4488): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6264. Data_GUI_BROKEN.m (line 4541): Function might be unused.\n  6265. Data_GUI_BROKEN.m (line 4588): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6266. Data_GUI_BROKEN.m (line 4653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6267. Data_GUI_BROKEN.m (line 4654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6268. Data_GUI_BROKEN.m (line 4702): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6269. Data_GUI_BROKEN.m (line 4711): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6270. Data_GUI_BROKEN.m (line 4716): This statement (and possibly following ones) cannot be reached.\n  6271. Data_GUI_BROKEN.m (line 4718): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6272. Data_GUI_BROKEN.m (line 4725): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6273. Data_GUI_BROKEN.m (line 4755): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6274. Data_GUI_BROKEN.m (line 4795): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6275. Data_GUI_BROKEN.m (line 4818): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6276. Data_GUI_BROKEN.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6277. Data_GUI_BROKEN.m (line 4841): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6278. Data_GUI_BROKEN.m (line 4854): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6279. Data_GUI_BROKEN.m (line 4948): Function might be unused.\n  6280. Data_GUI_BROKEN.m (line 4954): Value assigned to variable might be unused.\n  6281. Data_GUI_BROKEN.m (line 4982): Value assigned to variable might be unused.\n  6282. Data_GUI_BROKEN.m (line 5007): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6283. Data_GUI_BROKEN.m (line 5029): Value assigned to variable might be unused.\n  6284. Data_GUI_BROKEN.m (line 5063): Value assigned to variable might be unused.\n  6285. Data_GUI_BROKEN.m (line 5092): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6286. Data_GUI_BROKEN.m (line 5125): Function might be unused.\n  6287. Data_GUI_BROKEN.m (line 5169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6288. Data_GUI_BROKEN.m (line 5170): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6289. Data_GUI_BROKEN.m (line 5193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6290. Data_GUI_BROKEN.m (line 5194): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6291. Data_GUI_BROKEN.m (line 5214): Function might be unused.\n  6292. Data_GUI_BROKEN.m (line 5291): Function might be unused.\n  6293. Data_GUI_BROKEN.m (line 5308): Value assigned to variable might be unused.\n  6294. Data_GUI_BROKEN.m (line 5366): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6295. Data_GUI_BROKEN.m (line 5367): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6296. Data_GUI_BROKEN.m (line 5371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6297. Data_GUI_BROKEN.m (line 5372): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6298. Data_GUI_BROKEN.m (line 5390): Function might be unused.\n  6299. Data_GUI_BROKEN.m (line 5448): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6300. Data_GUI_BROKEN.m (line 5448): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6301. Data_GUI_BROKEN.m (line 5480): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6302. Data_GUI_BROKEN.m (line 5480): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6303. Data_GUI_BROKEN.m (line 5643): Function might be unused.\n  6304. Data_GUI_BROKEN.m (line 5673): Function might be unused.\n  6305. Data_GUI_BROKEN.m (line 5764): Function might be unused.\n  6306. Data_GUI_BROKEN.m (line 5802): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6307. Data_GUI_BROKEN.m (line 5833): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6308. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\Data_GUI_BROKEN.m: Missing arguments validation block\n  6309. Data_GUI_No_Batch.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_No_Batch'.\n  6310. Data_GUI_No_Batch.m (line 237): Value assigned to variable might be unused.\n  6311. Data_GUI_No_Batch.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6312. Data_GUI_No_Batch.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6313. Data_GUI_No_Batch.m (line 700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6314. Data_GUI_No_Batch.m (line 701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6315. Data_GUI_No_Batch.m (line 702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6316. Data_GUI_No_Batch.m (line 703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6317. Data_GUI_No_Batch.m (line 704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6318. Data_GUI_No_Batch.m (line 720): Function might be unused.\n  6319. Data_GUI_No_Batch.m (line 945): Function might be unused.\n  6320. Data_GUI_No_Batch.m (line 960): Value assigned to variable might be unused.\n  6321. Data_GUI_No_Batch.m (line 982): Function might be unused.\n  6322. Data_GUI_No_Batch.m (line 1157): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6323. Data_GUI_No_Batch.m (line 1158): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6324. Data_GUI_No_Batch.m (line 1159): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6325. Data_GUI_No_Batch.m (line 1160): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6326. Data_GUI_No_Batch.m (line 1161): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6327. Data_GUI_No_Batch.m (line 1191): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6328. Data_GUI_No_Batch.m (line 1192): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6329. Data_GUI_No_Batch.m (line 1193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6330. Data_GUI_No_Batch.m (line 1213): Function might be unused.\n  6331. Data_GUI_No_Batch.m (line 1254): Function might be unused.\n  6332. Data_GUI_No_Batch.m (line 1330): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6333. Data_GUI_No_Batch.m (line 1400): Value assigned to variable might be unused.\n  6334. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6335. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6336. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6337. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6338. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6339. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6340. Data_GUI_No_Batch.m (line 1565): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6341. Data_GUI_No_Batch.m (line 1566): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6342. Data_GUI_No_Batch.m (line 1567): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6343. Data_GUI_No_Batch.m (line 1568): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6344. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6345. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6346. Data_GUI_No_Batch.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6347. Data_GUI_No_Batch.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6348. Data_GUI_No_Batch.m (line 1612): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6349. Data_GUI_No_Batch.m (line 1623): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6350. Data_GUI_No_Batch.m (line 1624): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6351. Data_GUI_No_Batch.m (line 1629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6352. Data_GUI_No_Batch.m (line 1630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6353. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6354. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6355. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6356. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6357. Data_GUI_No_Batch.m (line 1695): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6358. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6359. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6360. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6361. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6362. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6363. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6364. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6365. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6366. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6367. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6368. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6369. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6370. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6371. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6372. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6373. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6374. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6375. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6376. Data_GUI_No_Batch.m (line 1997): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6377. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6378. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6379. Data_GUI_No_Batch.m (line 2013): Function might be unused.\n  6380. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6381. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6382. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6383. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6384. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6385. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6386. Data_GUI_No_Batch.m (line 2222): Value assigned to variable might be unused.\n  6387. Data_GUI_No_Batch.m (line 2281): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  6388. Data_GUI_No_Batch.m (line 2385): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  6389. Data_GUI_No_Batch.m (line 2524): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6390. Data_GUI_No_Batch.m (line 2524): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6391. Data_GUI_No_Batch.m (line 2646): Function might be unused.\n  6392. Data_GUI_No_Batch.m (line 2821): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6393. Data_GUI_No_Batch.m (line 2821): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6394. Data_GUI_No_Batch.m (line 2853): Function might be unused.\n  6395. Data_GUI_No_Batch.m (line 2971): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6396. Data_GUI_No_Batch.m (line 3151): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6397. Data_GUI_No_Batch.m (line 3249): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  6398. Data_GUI_No_Batch.m (line 3297): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6399. Data_GUI_No_Batch.m (line 3297): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6400. Data_GUI_No_Batch.m (line 3626): This keyword might not be aligned with its matching END on line 3637.\n  6401. Data_GUI_No_Batch.m (line 3639): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  6402. Data_GUI_No_Batch.m (line 3855): This keyword might not be aligned with its matching END on line 3857.\n  6403. Data_GUI_No_Batch.m (line 3959): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  6404. Data_GUI_No_Batch.m (line 3969): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6405. Data_GUI_No_Batch.m (line 3970): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6406. Data_GUI_No_Batch.m (line 3971): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6407. Data_GUI_No_Batch.m (line 4014): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6408. Data_GUI_No_Batch.m (line 4015): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6409. Data_GUI_No_Batch.m (line 4025): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  6410. Data_GUI_No_Batch.m (line 4041): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6411. Data_GUI_No_Batch.m (line 4042): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6412. Data_GUI_No_Batch.m (line 4083): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6413. Data_GUI_No_Batch.m (line 4117): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6414. Data_GUI_No_Batch.m (line 4131): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6415. Data_GUI_No_Batch.m (line 4139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6416. Data_GUI_No_Batch.m (line 4139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6417. Data_GUI_No_Batch.m (line 4338): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6418. Data_GUI_No_Batch.m (line 4378): Function might be unused.\n  6419. Data_GUI_No_Batch.m (line 4422): Value assigned to variable might be unused.\n  6420. Data_GUI_No_Batch.m (line 4432): Value assigned to variable might be unused.\n  6421. Data_GUI_No_Batch.m (line 4437): Value assigned to variable might be unused.\n  6422. Data_GUI_No_Batch.m (line 4442): Value assigned to variable might be unused.\n  6423. Data_GUI_No_Batch.m (line 4459): Value assigned to variable might be unused.\n  6424. Data_GUI_No_Batch.m (line 4568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6425. Data_GUI_No_Batch.m (line 4569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6426. Data_GUI_No_Batch.m (line 4576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6427. Data_GUI_No_Batch.m (line 4577): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6428. Data_GUI_No_Batch.m (line 4590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6429. Data_GUI_No_Batch.m (line 4592): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6430. Data_GUI_No_Batch.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6431. Data_GUI_No_Batch.m (line 4615): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6432. Data_GUI_No_Batch.m (line 4635): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6433. Data_GUI_No_Batch.m (line 4636): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6434. Data_GUI_No_Batch.m (line 4648): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6435. Data_GUI_No_Batch.m (line 4649): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6436. Data_GUI_No_Batch.m (line 4667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6437. Data_GUI_No_Batch.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6438. Data_GUI_No_Batch.m (line 4712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6439. Data_GUI_No_Batch.m (line 4713): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6440. Data_GUI_No_Batch.m (line 4720): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6441. Data_GUI_No_Batch.m (line 4721): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6442. Data_GUI_No_Batch.m (line 4798): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6443. Data_GUI_No_Batch.m (line 4799): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6444. Data_GUI_No_Batch.m (line 4809): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6445. Data_GUI_No_Batch.m (line 4810): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6446. Data_GUI_No_Batch.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6447. Data_GUI_No_Batch.m (line 4830): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6448. Data_GUI_No_Batch.m (line 4930): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6449. Data_GUI_No_Batch.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6450. Data_GUI_No_Batch.m (line 4996): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6451. Data_GUI_No_Batch.m (line 5044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6452. Data_GUI_No_Batch.m (line 5053): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6453. Data_GUI_No_Batch.m (line 5058): This statement (and possibly following ones) cannot be reached.\n  6454. Data_GUI_No_Batch.m (line 5060): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6455. Data_GUI_No_Batch.m (line 5067): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6456. Data_GUI_No_Batch.m (line 5097): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6457. Data_GUI_No_Batch.m (line 5137): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6458. Data_GUI_No_Batch.m (line 5160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6459. Data_GUI_No_Batch.m (line 5171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6460. Data_GUI_No_Batch.m (line 5183): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6461. Data_GUI_No_Batch.m (line 5196): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6462. Data_GUI_No_Batch.m (line 5225): Value assigned to variable might be unused.\n  6463. Data_GUI_No_Batch.m (line 5252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6464. Data_GUI_No_Batch.m (line 5284): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  6465. Data_GUI_No_Batch.m (line 5298): Value assigned to variable might be unused.\n  6466. Data_GUI_No_Batch.m (line 5316): Value assigned to variable might be unused.\n  6467. Data_GUI_No_Batch.m (line 5332): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6468. Data_GUI_No_Batch.m (line 5360): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6469. Data_GUI_No_Batch.m (line 5447): Function might be unused.\n  6470. Data_GUI_No_Batch.m (line 5453): Value assigned to variable might be unused.\n  6471. Data_GUI_No_Batch.m (line 5481): Value assigned to variable might be unused.\n  6472. Data_GUI_No_Batch.m (line 5506): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6473. Data_GUI_No_Batch.m (line 5528): Value assigned to variable might be unused.\n  6474. Data_GUI_No_Batch.m (line 5562): Value assigned to variable might be unused.\n  6475. Data_GUI_No_Batch.m (line 5591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6476. Data_GUI_No_Batch.m (line 5624): Function might be unused.\n  6477. Data_GUI_No_Batch.m (line 5668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6478. Data_GUI_No_Batch.m (line 5669): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6479. Data_GUI_No_Batch.m (line 5692): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6480. Data_GUI_No_Batch.m (line 5693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6481. Data_GUI_No_Batch.m (line 5790): Function might be unused.\n  6482. Data_GUI_No_Batch.m (line 5807): Value assigned to variable might be unused.\n  6483. Data_GUI_No_Batch.m (line 5865): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6484. Data_GUI_No_Batch.m (line 5866): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6485. Data_GUI_No_Batch.m (line 5870): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6486. Data_GUI_No_Batch.m (line 5871): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6487. Data_GUI_No_Batch.m (line 5889): Function might be unused.\n  6488. Data_GUI_No_Batch.m (line 5947): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6489. Data_GUI_No_Batch.m (line 5947): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6490. Data_GUI_No_Batch.m (line 5979): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6491. Data_GUI_No_Batch.m (line 5979): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6492. Data_GUI_No_Batch.m (line 6142): Function might be unused.\n  6493. Data_GUI_No_Batch.m (line 6172): Function might be unused.\n  6494. Data_GUI_No_Batch.m (line 6263): Function might be unused.\n  6495. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\Data_GUI_No_Batch.m: Missing arguments validation block\n  6496. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  6497. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\addModelWorkspaceData.m: Missing arguments validation block\n  6498. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\checkHighMemoryUsage.m: Missing function docstring\n  6499. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\checkHighMemoryUsage.m: Missing arguments validation block\n  6500. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\checkModelConfiguration.m: Missing arguments validation block\n  6501. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\checkStopRequest.m: Missing function docstring\n  6502. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\checkStopRequest.m: Missing arguments validation block\n  6503. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6504. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6505. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6506. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6507. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6508. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6509. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6510. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\check_model_configuration.m: Missing arguments validation block\n  6511. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6512. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6513. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6514. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\checkpoint_recovery.m: Missing arguments validation block\n  6515. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\combineDataSources.m: Missing arguments validation block\n  6516. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  6517. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6518. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6519. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6520. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6521. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6522. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6523. data_extraction_functions.m (line 146): Function might be unused.\n  6524. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6525. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6526. data_extraction_functions.m (line 202): Function might be unused.\n  6527. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6528. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6529. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6530. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6531. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\data_extraction_functions.m: Missing function docstring\n  6532. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\data_extraction_functions.m: Missing arguments validation block\n  6533. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6534. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\endPhase.m: Missing arguments validation block\n  6535. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  6536. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6537. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6538. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6539. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6540. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6541. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6542. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractAllSignalsFromBus.m: Missing arguments validation block\n  6543. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  6544. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractCoefficientsFromTable.m: Missing function docstring\n  6545. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractCoefficientsFromTable.m: Missing arguments validation block\n  6546. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6547. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6548. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6549. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6550. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6551. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6552. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6553. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6554. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6555. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6556. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6557. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6558. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractCombinedSignalBusData.m: Missing function docstring\n  6559. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractCombinedSignalBusData.m: Missing arguments validation block\n  6560. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6561. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6562. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6563. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6564. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6565. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractConstantMatrixData.m: Missing function docstring\n  6566. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractConstantMatrixData.m: Missing arguments validation block\n  6567. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractDataFromField.m: Missing arguments validation block\n  6568. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  6569. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  6570. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractDataWithOptions.m: Missing arguments validation block\n  6571. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  6572. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  6573. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  6574. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  6575. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  6576. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6577. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6578. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6579. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6580. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6581. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6582. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6583. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6584. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6585. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6586. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6587. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6588. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6589. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6590. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6591. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6592. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6593. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6594. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractFromCombinedSignalBus.m: Missing function docstring\n  6595. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  6596. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  6597. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  6598. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  6599. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  6600. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  6601. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  6602. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6603. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6604. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6605. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6606. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6607. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6608. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6609. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6610. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6611. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6612. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6613. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6614. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6615. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6616. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6617. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6618. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  6619. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  6620. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6621. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6622. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractFromNestedStruct.m: Missing arguments validation block\n  6623. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6624. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6625. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6626. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6627. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6628. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6629. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractLogsoutDataFixed.m: Missing function docstring\n  6630. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractLogsoutDataFixed.m: Missing arguments validation block\n  6631. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractSignalsFromSimOut.m: Missing arguments validation block\n  6632. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6633. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6634. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6635. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractSimscapeDataRecursive.m: Missing function docstring\n  6636. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  6637. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractTimeSeriesData.m: Missing function docstring\n  6638. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractTimeSeriesData.m: Missing arguments validation block\n  6639. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6640. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6641. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6642. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6643. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractWorkspaceOutputs.m: Missing function docstring\n  6644. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\extractWorkspaceOutputs.m: Missing arguments validation block\n  6645. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6646. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6647. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  6648. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6649. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6650. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6651. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\fallbackSimlogExtraction.m: Missing function docstring\n  6652. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\fallbackSimlogExtraction.m: Missing arguments validation block\n  6653. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\generateRandomCoefficients.m: Missing arguments validation block\n  6654. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\getMemoryInfo.m: Missing function docstring\n  6655. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\getMemoryInfo.m: Missing arguments validation block\n  6656. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\getMemoryUsage.m: Missing arguments validation block\n  6657. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6658. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6659. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6660. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6661. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6662. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6663. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6664. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  6665. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6666. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6667. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6668. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6669. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6670. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\getPolynomialParameterInfo.m: Missing arguments validation block\n  6671. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\getShortenedJointName.m: Missing arguments validation block\n  6672. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6673. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6674. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  6675. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  6676. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\loadInputFile.m: Missing function docstring\n  6677. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\loadInputFile.m: Missing arguments validation block\n  6678. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\logBatchResult.m: Missing arguments validation block\n  6679. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6680. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\logMessage.m: Missing arguments validation block\n  6681. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\logical2str.m: Missing function docstring\n  6682. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\logical2str.m: Missing arguments validation block\n  6683. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  6684. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\memory_monitor.m: Missing arguments validation block\n  6685. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\mergeTables.m: Missing function docstring\n  6686. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\mergeTables.m: Missing arguments validation block\n  6687. performance_monitor.m (line 11): Persistent variable might be unused.\n  6688. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6689. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6690. performance_monitor.m (line 77): Function might be unused.\n  6691. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6692. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6693. performance_monitor.m (line 118): Function might be unused.\n  6694. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6695. performance_monitor.m (line 133): Function might be unused.\n  6696. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6697. performance_monitor.m (line 149): Function might be unused.\n  6698. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6699. performance_monitor.m (line 162): Function might be unused.\n  6700. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6701. performance_monitor.m (line 175): Function might be unused.\n  6702. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6703. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6704. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6705. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\performance_monitor.m: Missing arguments validation block\n  6706. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  6707. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  6708. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6709. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6710. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\processSimulationOutput.m: Missing function docstring\n  6711. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\processSimulationOutput.m: Missing arguments validation block\n  6712. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6713. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\recordBatchTime.m: Missing arguments validation block\n  6714. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6715. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\recordPhase.m: Missing arguments validation block\n  6716. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\resampleDataToFrequency.m: Missing function docstring\n  6717. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\resampleDataToFrequency.m: Missing arguments validation block\n  6718. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\restoreWorkspace.m: Missing arguments validation block\n  6719. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\runSingleTrial.m: Missing arguments validation block\n  6720. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\setModelParameters.m: Missing arguments validation block\n  6721. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6722. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\setPolynomialCoefficients.m: Missing arguments validation block\n  6723. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\shouldShowDebug.m: Missing function docstring\n  6724. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\shouldShowDebug.m: Missing arguments validation block\n  6725. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\shouldShowNormal.m: Missing function docstring\n  6726. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\shouldShowNormal.m: Missing arguments validation block\n  6727. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\shouldShowVerbose.m: Missing function docstring\n  6728. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\shouldShowVerbose.m: Missing arguments validation block\n  6729. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  6730. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6731. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\traverseSimlogNode.m: Missing arguments validation block\n  6732. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6733. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6734. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6735. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6736. verbosity_control.m (line 203): Function might be unused.\n  6737. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6738. verbosity_control.m (line 225): Function might be unused.\n  6739. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6740. verbosity_control.m (line 248): Function might be unused.\n  6741. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6742. verbosity_control.m (line 274): Function might be unused.\n  6743. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6744. verbosity_control.m (line 293): Function might be unused.\n  6745. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6746. verbosity_control.m (line 320): Function might be unused.\n  6747. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6748. verbosity_control.m (line 335): Function might be unused.\n  6749. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  6750. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_201431\\verbosity_control.m: Missing arguments validation block\n  6751. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  6752. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  6753. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  6754. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  6755. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6756. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6757. Data_GUI.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6758. Data_GUI.m (line 739): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6759. Data_GUI.m (line 740): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6760. Data_GUI.m (line 741): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6761. Data_GUI.m (line 742): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6762. Data_GUI.m (line 758): Function might be unused.\n  6763. Data_GUI.m (line 983): Function might be unused.\n  6764. Data_GUI.m (line 998): Value assigned to variable might be unused.\n  6765. Data_GUI.m (line 1020): Function might be unused.\n  6766. Data_GUI.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6767. Data_GUI.m (line 1198): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6768. Data_GUI.m (line 1199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6769. Data_GUI.m (line 1200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6770. Data_GUI.m (line 1201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6771. Data_GUI.m (line 1231): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6772. Data_GUI.m (line 1232): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6773. Data_GUI.m (line 1233): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6774. Data_GUI.m (line 1253): Function might be unused.\n  6775. Data_GUI.m (line 1294): Function might be unused.\n  6776. Data_GUI.m (line 1370): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6777. Data_GUI.m (line 1440): Value assigned to variable might be unused.\n  6778. Data_GUI.m (line 1527): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6779. Data_GUI.m (line 1527): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6780. Data_GUI.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6781. Data_GUI.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6782. Data_GUI.m (line 1595): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6783. Data_GUI.m (line 1595): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6784. Data_GUI.m (line 1608): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6785. Data_GUI.m (line 1609): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6786. Data_GUI.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6787. Data_GUI.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6788. Data_GUI.m (line 1640): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6789. Data_GUI.m (line 1640): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6790. Data_GUI.m (line 1653): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6791. Data_GUI.m (line 1654): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6792. Data_GUI.m (line 1655): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6793. Data_GUI.m (line 1666): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6794. Data_GUI.m (line 1667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6795. Data_GUI.m (line 1672): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6796. Data_GUI.m (line 1673): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6797. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6798. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6799. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6800. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6801. Data_GUI.m (line 1738): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6802. Data_GUI.m (line 1750): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6803. Data_GUI.m (line 1750): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6804. Data_GUI.m (line 1806): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6805. Data_GUI.m (line 1806): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6806. Data_GUI.m (line 1856): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6807. Data_GUI.m (line 1856): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6808. Data_GUI.m (line 1903): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6809. Data_GUI.m (line 1903): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6810. Data_GUI.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6811. Data_GUI.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6812. Data_GUI.m (line 1955): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6813. Data_GUI.m (line 1955): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6814. Data_GUI.m (line 1976): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6815. Data_GUI.m (line 1976): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6816. Data_GUI.m (line 2000): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6817. Data_GUI.m (line 2000): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6818. Data_GUI.m (line 2025): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6819. Data_GUI.m (line 2025): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6820. Data_GUI.m (line 2040): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6821. Data_GUI.m (line 2051): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6822. Data_GUI.m (line 2051): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6823. Data_GUI.m (line 2056): Function might be unused.\n  6824. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6825. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6826. Data_GUI.m (line 2069): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6827. Data_GUI.m (line 2069): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6828. Data_GUI.m (line 2083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6829. Data_GUI.m (line 2083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6830. Data_GUI.m (line 2284): Value assigned to variable might be unused.\n  6831. Data_GUI.m (line 2343): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  6832. Data_GUI.m (line 2487): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  6833. Data_GUI.m (line 2626): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6834. Data_GUI.m (line 2626): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6835. Data_GUI.m (line 2748): Function might be unused.\n  6836. Data_GUI.m (line 2925): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6837. Data_GUI.m (line 2925): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6838. Data_GUI.m (line 2957): Function might be unused.\n  6839. Data_GUI.m (line 3108): Function might be unused.\n  6840. Data_GUI.m (line 3186): Function might be unused.\n  6841. Data_GUI.m (line 3201): This keyword might not be aligned with its matching END on line 3212.\n  6842. Data_GUI.m (line 3214): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  6843. Data_GUI.m (line 3430): This keyword might not be aligned with its matching END on line 3432.\n  6844. Data_GUI.m (line 3534): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  6845. Data_GUI.m (line 3569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6846. Data_GUI.m (line 3603): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6847. Data_GUI.m (line 3617): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6848. Data_GUI.m (line 3625): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6849. Data_GUI.m (line 3625): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6850. Data_GUI.m (line 3835): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6851. Data_GUI.m (line 3875): Function might be unused.\n  6852. Data_GUI.m (line 3907): Function might be unused.\n  6853. Data_GUI.m (line 3919): Value assigned to variable might be unused.\n  6854. Data_GUI.m (line 3929): Value assigned to variable might be unused.\n  6855. Data_GUI.m (line 3934): Value assigned to variable might be unused.\n  6856. Data_GUI.m (line 3939): Value assigned to variable might be unused.\n  6857. Data_GUI.m (line 3956): Value assigned to variable might be unused.\n  6858. Data_GUI.m (line 4065): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6859. Data_GUI.m (line 4066): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6860. Data_GUI.m (line 4073): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6861. Data_GUI.m (line 4074): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6862. Data_GUI.m (line 4087): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6863. Data_GUI.m (line 4089): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6864. Data_GUI.m (line 4111): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6865. Data_GUI.m (line 4112): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6866. Data_GUI.m (line 4132): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6867. Data_GUI.m (line 4133): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6868. Data_GUI.m (line 4145): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6869. Data_GUI.m (line 4146): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6870. Data_GUI.m (line 4164): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6871. Data_GUI.m (line 4165): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6872. Data_GUI.m (line 4209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6873. Data_GUI.m (line 4210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6874. Data_GUI.m (line 4217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6875. Data_GUI.m (line 4218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6876. Data_GUI.m (line 4237): Function might be unused.\n  6877. Data_GUI.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6878. Data_GUI.m (line 4296): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6879. Data_GUI.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6880. Data_GUI.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6881. Data_GUI.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6882. Data_GUI.m (line 4327): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6883. Data_GUI.m (line 4380): Function might be unused.\n  6884. Data_GUI.m (line 4427): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6885. Data_GUI.m (line 4492): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6886. Data_GUI.m (line 4493): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6887. Data_GUI.m (line 4541): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6888. Data_GUI.m (line 4550): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6889. Data_GUI.m (line 4555): This statement (and possibly following ones) cannot be reached.\n  6890. Data_GUI.m (line 4557): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6891. Data_GUI.m (line 4564): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6892. Data_GUI.m (line 4594): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6893. Data_GUI.m (line 4634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6894. Data_GUI.m (line 4657): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6895. Data_GUI.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6896. Data_GUI.m (line 4680): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6897. Data_GUI.m (line 4693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6898. Data_GUI.m (line 4787): Function might be unused.\n  6899. Data_GUI.m (line 4793): Value assigned to variable might be unused.\n  6900. Data_GUI.m (line 4821): Value assigned to variable might be unused.\n  6901. Data_GUI.m (line 4846): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6902. Data_GUI.m (line 4868): Value assigned to variable might be unused.\n  6903. Data_GUI.m (line 4902): Value assigned to variable might be unused.\n  6904. Data_GUI.m (line 4931): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6905. Data_GUI.m (line 4964): Function might be unused.\n  6906. Data_GUI.m (line 5008): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6907. Data_GUI.m (line 5009): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6908. Data_GUI.m (line 5032): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6909. Data_GUI.m (line 5033): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6910. Data_GUI.m (line 5053): Function might be unused.\n  6911. Data_GUI.m (line 5130): Function might be unused.\n  6912. Data_GUI.m (line 5147): Value assigned to variable might be unused.\n  6913. Data_GUI.m (line 5205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6914. Data_GUI.m (line 5206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6915. Data_GUI.m (line 5210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6916. Data_GUI.m (line 5211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6917. Data_GUI.m (line 5229): Function might be unused.\n  6918. Data_GUI.m (line 5287): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6919. Data_GUI.m (line 5287): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6920. Data_GUI.m (line 5319): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6921. Data_GUI.m (line 5319): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6922. Data_GUI.m (line 5482): Function might be unused.\n  6923. Data_GUI.m (line 5512): Function might be unused.\n  6924. Data_GUI.m (line 5603): Function might be unused.\n  6925. Data_GUI.m (line 5641): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6926. Data_GUI.m (line 5672): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6927. Data_GUI.m (line 5708): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6928. Data_GUI.m (line 5710): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6929. Data_GUI.m (line 5710): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6930. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\Data_GUI.m: Missing arguments validation block\n  6931. Data_GUI_BROKEN.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_BROKEN'.\n  6932. Data_GUI_BROKEN.m (line 239): Value assigned to variable might be unused.\n  6933. Data_GUI_BROKEN.m (line 340): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6934. Data_GUI_BROKEN.m (line 340): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6935. Data_GUI_BROKEN.m (line 734): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6936. Data_GUI_BROKEN.m (line 735): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6937. Data_GUI_BROKEN.m (line 736): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6938. Data_GUI_BROKEN.m (line 737): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6939. Data_GUI_BROKEN.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6940. Data_GUI_BROKEN.m (line 754): Function might be unused.\n  6941. Data_GUI_BROKEN.m (line 979): Function might be unused.\n  6942. Data_GUI_BROKEN.m (line 994): Value assigned to variable might be unused.\n  6943. Data_GUI_BROKEN.m (line 1016): Function might be unused.\n  6944. Data_GUI_BROKEN.m (line 1193): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6945. Data_GUI_BROKEN.m (line 1194): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6946. Data_GUI_BROKEN.m (line 1195): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6947. Data_GUI_BROKEN.m (line 1196): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6948. Data_GUI_BROKEN.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6949. Data_GUI_BROKEN.m (line 1227): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6950. Data_GUI_BROKEN.m (line 1228): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6951. Data_GUI_BROKEN.m (line 1229): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  6952. Data_GUI_BROKEN.m (line 1249): Function might be unused.\n  6953. Data_GUI_BROKEN.m (line 1290): Function might be unused.\n  6954. Data_GUI_BROKEN.m (line 1366): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6955. Data_GUI_BROKEN.m (line 1436): Value assigned to variable might be unused.\n  6956. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6957. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6958. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6959. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6960. Data_GUI_BROKEN.m (line 1652): Input argument might be unused. Consider replacing the argument with ~ instead.\n  6961. Data_GUI_BROKEN.m (line 1654): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  6962. Data_GUI_BROKEN.m (line 1654): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  6963. Data_GUI_BROKEN.m (line 1664): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6964. Data_GUI_BROKEN.m (line 1665): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6965. Data_GUI_BROKEN.m (line 1666): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6966. Data_GUI_BROKEN.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6967. Data_GUI_BROKEN.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6968. Data_GUI_BROKEN.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6969. Data_GUI_BROKEN.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6970. Data_GUI_BROKEN.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6971. Data_GUI_BROKEN.m (line 1672): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6972. Data_GUI_BROKEN.m (line 1673): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6973. Data_GUI_BROKEN.m (line 1674): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6974. Data_GUI_BROKEN.m (line 1675): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6975. Data_GUI_BROKEN.m (line 1676): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6976. Data_GUI_BROKEN.m (line 1677): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6977. Data_GUI_BROKEN.m (line 1678): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6978. Data_GUI_BROKEN.m (line 1679): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6979. Data_GUI_BROKEN.m (line 1680): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6980. Data_GUI_BROKEN.m (line 1681): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6981. Data_GUI_BROKEN.m (line 1682): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6982. Data_GUI_BROKEN.m (line 1683): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6983. Data_GUI_BROKEN.m (line 1684): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6984. Data_GUI_BROKEN.m (line 1685): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6985. Data_GUI_BROKEN.m (line 1686): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6986. Data_GUI_BROKEN.m (line 1687): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6987. Data_GUI_BROKEN.m (line 1688): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6988. Data_GUI_BROKEN.m (line 1689): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6989. Data_GUI_BROKEN.m (line 1690): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6990. Data_GUI_BROKEN.m (line 1691): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6991. Data_GUI_BROKEN.m (line 1692): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6992. Data_GUI_BROKEN.m (line 1693): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6993. Data_GUI_BROKEN.m (line 1694): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6994. Data_GUI_BROKEN.m (line 1695): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6995. Data_GUI_BROKEN.m (line 1696): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6996. Data_GUI_BROKEN.m (line 1697): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6997. Data_GUI_BROKEN.m (line 1698): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6998. Data_GUI_BROKEN.m (line 1699): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  6999. Data_GUI_BROKEN.m (line 1700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7000. Data_GUI_BROKEN.m (line 1701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7001. Data_GUI_BROKEN.m (line 1702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7002. Data_GUI_BROKEN.m (line 1703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7003. Data_GUI_BROKEN.m (line 1704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7004. Data_GUI_BROKEN.m (line 1705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7005. Data_GUI_BROKEN.m (line 1706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7006. Data_GUI_BROKEN.m (line 1707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7007. Data_GUI_BROKEN.m (line 1708): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7008. Data_GUI_BROKEN.m (line 1709): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7009. Data_GUI_BROKEN.m (line 1710): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7010. Data_GUI_BROKEN.m (line 1711): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7011. Data_GUI_BROKEN.m (line 1712): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7012. Data_GUI_BROKEN.m (line 1713): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7013. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7014. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7015. Data_GUI_BROKEN.m (line 1767): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7016. Data_GUI_BROKEN.m (line 1768): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7017. Data_GUI_BROKEN.m (line 1769): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7018. Data_GUI_BROKEN.m (line 1770): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7019. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7020. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7021. Data_GUI_BROKEN.m (line 1812): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7022. Data_GUI_BROKEN.m (line 1813): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7023. Data_GUI_BROKEN.m (line 1814): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7024. Data_GUI_BROKEN.m (line 1825): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7025. Data_GUI_BROKEN.m (line 1826): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7026. Data_GUI_BROKEN.m (line 1831): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7027. Data_GUI_BROKEN.m (line 1832): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7028. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7029. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7030. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7031. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7032. Data_GUI_BROKEN.m (line 1897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7033. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7034. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7035. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7036. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7037. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7038. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7039. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7040. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7041. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7042. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7043. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7044. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7045. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7046. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7047. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7048. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7049. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7050. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7051. Data_GUI_BROKEN.m (line 2199): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7052. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7053. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7054. Data_GUI_BROKEN.m (line 2215): Function might be unused.\n  7055. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7056. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7057. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7058. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7059. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7060. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7061. Data_GUI_BROKEN.m (line 2427): Value assigned to variable might be unused.\n  7062. Data_GUI_BROKEN.m (line 2486): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  7063. Data_GUI_BROKEN.m (line 2630): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  7064. Data_GUI_BROKEN.m (line 2769): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7065. Data_GUI_BROKEN.m (line 2769): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7066. Data_GUI_BROKEN.m (line 2891): Function might be unused.\n  7067. Data_GUI_BROKEN.m (line 3068): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7068. Data_GUI_BROKEN.m (line 3068): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7069. Data_GUI_BROKEN.m (line 3100): Function might be unused.\n  7070. Data_GUI_BROKEN.m (line 3251): Function might be unused.\n  7071. Data_GUI_BROKEN.m (line 3329): Function might be unused.\n  7072. Data_GUI_BROKEN.m (line 3344): This keyword might not be aligned with its matching END on line 3355.\n  7073. Data_GUI_BROKEN.m (line 3357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  7074. Data_GUI_BROKEN.m (line 3573): This keyword might not be aligned with its matching END on line 3575.\n  7075. Data_GUI_BROKEN.m (line 3677): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  7076. Data_GUI_BROKEN.m (line 3712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7077. Data_GUI_BROKEN.m (line 3746): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7078. Data_GUI_BROKEN.m (line 3760): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7079. Data_GUI_BROKEN.m (line 3768): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7080. Data_GUI_BROKEN.m (line 3768): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7081. Data_GUI_BROKEN.m (line 3967): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7082. Data_GUI_BROKEN.m (line 4007): Function might be unused.\n  7083. Data_GUI_BROKEN.m (line 4039): Function might be unused.\n  7084. Data_GUI_BROKEN.m (line 4051): Value assigned to variable might be unused.\n  7085. Data_GUI_BROKEN.m (line 4061): Value assigned to variable might be unused.\n  7086. Data_GUI_BROKEN.m (line 4066): Value assigned to variable might be unused.\n  7087. Data_GUI_BROKEN.m (line 4071): Value assigned to variable might be unused.\n  7088. Data_GUI_BROKEN.m (line 4088): Value assigned to variable might be unused.\n  7089. Data_GUI_BROKEN.m (line 4197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7090. Data_GUI_BROKEN.m (line 4198): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7091. Data_GUI_BROKEN.m (line 4205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7092. Data_GUI_BROKEN.m (line 4206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7093. Data_GUI_BROKEN.m (line 4219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7094. Data_GUI_BROKEN.m (line 4221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7095. Data_GUI_BROKEN.m (line 4243): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7096. Data_GUI_BROKEN.m (line 4244): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7097. Data_GUI_BROKEN.m (line 4262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7098. Data_GUI_BROKEN.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7099. Data_GUI_BROKEN.m (line 4282): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7100. Data_GUI_BROKEN.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7101. Data_GUI_BROKEN.m (line 4294): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7102. Data_GUI_BROKEN.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7103. Data_GUI_BROKEN.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7104. Data_GUI_BROKEN.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7105. Data_GUI_BROKEN.m (line 4325): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7106. Data_GUI_BROKEN.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7107. Data_GUI_BROKEN.m (line 4370): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7108. Data_GUI_BROKEN.m (line 4371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7109. Data_GUI_BROKEN.m (line 4378): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7110. Data_GUI_BROKEN.m (line 4379): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7111. Data_GUI_BROKEN.m (line 4398): Function might be unused.\n  7112. Data_GUI_BROKEN.m (line 4456): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7113. Data_GUI_BROKEN.m (line 4457): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7114. Data_GUI_BROKEN.m (line 4467): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7115. Data_GUI_BROKEN.m (line 4468): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7116. Data_GUI_BROKEN.m (line 4487): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7117. Data_GUI_BROKEN.m (line 4488): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7118. Data_GUI_BROKEN.m (line 4541): Function might be unused.\n  7119. Data_GUI_BROKEN.m (line 4588): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7120. Data_GUI_BROKEN.m (line 4653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7121. Data_GUI_BROKEN.m (line 4654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7122. Data_GUI_BROKEN.m (line 4702): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7123. Data_GUI_BROKEN.m (line 4711): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7124. Data_GUI_BROKEN.m (line 4716): This statement (and possibly following ones) cannot be reached.\n  7125. Data_GUI_BROKEN.m (line 4718): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7126. Data_GUI_BROKEN.m (line 4725): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7127. Data_GUI_BROKEN.m (line 4755): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7128. Data_GUI_BROKEN.m (line 4795): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7129. Data_GUI_BROKEN.m (line 4818): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7130. Data_GUI_BROKEN.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7131. Data_GUI_BROKEN.m (line 4841): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7132. Data_GUI_BROKEN.m (line 4854): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7133. Data_GUI_BROKEN.m (line 4948): Function might be unused.\n  7134. Data_GUI_BROKEN.m (line 4954): Value assigned to variable might be unused.\n  7135. Data_GUI_BROKEN.m (line 4982): Value assigned to variable might be unused.\n  7136. Data_GUI_BROKEN.m (line 5007): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7137. Data_GUI_BROKEN.m (line 5029): Value assigned to variable might be unused.\n  7138. Data_GUI_BROKEN.m (line 5063): Value assigned to variable might be unused.\n  7139. Data_GUI_BROKEN.m (line 5092): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7140. Data_GUI_BROKEN.m (line 5125): Function might be unused.\n  7141. Data_GUI_BROKEN.m (line 5169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7142. Data_GUI_BROKEN.m (line 5170): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7143. Data_GUI_BROKEN.m (line 5193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7144. Data_GUI_BROKEN.m (line 5194): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7145. Data_GUI_BROKEN.m (line 5214): Function might be unused.\n  7146. Data_GUI_BROKEN.m (line 5291): Function might be unused.\n  7147. Data_GUI_BROKEN.m (line 5308): Value assigned to variable might be unused.\n  7148. Data_GUI_BROKEN.m (line 5366): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7149. Data_GUI_BROKEN.m (line 5367): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7150. Data_GUI_BROKEN.m (line 5371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7151. Data_GUI_BROKEN.m (line 5372): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7152. Data_GUI_BROKEN.m (line 5390): Function might be unused.\n  7153. Data_GUI_BROKEN.m (line 5448): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7154. Data_GUI_BROKEN.m (line 5448): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7155. Data_GUI_BROKEN.m (line 5480): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7156. Data_GUI_BROKEN.m (line 5480): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7157. Data_GUI_BROKEN.m (line 5643): Function might be unused.\n  7158. Data_GUI_BROKEN.m (line 5673): Function might be unused.\n  7159. Data_GUI_BROKEN.m (line 5764): Function might be unused.\n  7160. Data_GUI_BROKEN.m (line 5802): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7161. Data_GUI_BROKEN.m (line 5833): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7162. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\Data_GUI_BROKEN.m: Missing arguments validation block\n  7163. Data_GUI_No_Batch.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_No_Batch'.\n  7164. Data_GUI_No_Batch.m (line 237): Value assigned to variable might be unused.\n  7165. Data_GUI_No_Batch.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7166. Data_GUI_No_Batch.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7167. Data_GUI_No_Batch.m (line 700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7168. Data_GUI_No_Batch.m (line 701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7169. Data_GUI_No_Batch.m (line 702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7170. Data_GUI_No_Batch.m (line 703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7171. Data_GUI_No_Batch.m (line 704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7172. Data_GUI_No_Batch.m (line 720): Function might be unused.\n  7173. Data_GUI_No_Batch.m (line 945): Function might be unused.\n  7174. Data_GUI_No_Batch.m (line 960): Value assigned to variable might be unused.\n  7175. Data_GUI_No_Batch.m (line 982): Function might be unused.\n  7176. Data_GUI_No_Batch.m (line 1157): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7177. Data_GUI_No_Batch.m (line 1158): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7178. Data_GUI_No_Batch.m (line 1159): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7179. Data_GUI_No_Batch.m (line 1160): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7180. Data_GUI_No_Batch.m (line 1161): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7181. Data_GUI_No_Batch.m (line 1191): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7182. Data_GUI_No_Batch.m (line 1192): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7183. Data_GUI_No_Batch.m (line 1193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7184. Data_GUI_No_Batch.m (line 1213): Function might be unused.\n  7185. Data_GUI_No_Batch.m (line 1254): Function might be unused.\n  7186. Data_GUI_No_Batch.m (line 1330): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7187. Data_GUI_No_Batch.m (line 1400): Value assigned to variable might be unused.\n  7188. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7189. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7190. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7191. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7192. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7193. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7194. Data_GUI_No_Batch.m (line 1565): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7195. Data_GUI_No_Batch.m (line 1566): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7196. Data_GUI_No_Batch.m (line 1567): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7197. Data_GUI_No_Batch.m (line 1568): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7198. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7199. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7200. Data_GUI_No_Batch.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7201. Data_GUI_No_Batch.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7202. Data_GUI_No_Batch.m (line 1612): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7203. Data_GUI_No_Batch.m (line 1623): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7204. Data_GUI_No_Batch.m (line 1624): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7205. Data_GUI_No_Batch.m (line 1629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7206. Data_GUI_No_Batch.m (line 1630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7207. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7208. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7209. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7210. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7211. Data_GUI_No_Batch.m (line 1695): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7212. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7213. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7214. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7215. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7216. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7217. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7218. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7219. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7220. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7221. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7222. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7223. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7224. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7225. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7226. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7227. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7228. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7229. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7230. Data_GUI_No_Batch.m (line 1997): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7231. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7232. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7233. Data_GUI_No_Batch.m (line 2013): Function might be unused.\n  7234. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7235. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7236. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7237. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7238. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7239. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7240. Data_GUI_No_Batch.m (line 2222): Value assigned to variable might be unused.\n  7241. Data_GUI_No_Batch.m (line 2281): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  7242. Data_GUI_No_Batch.m (line 2385): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  7243. Data_GUI_No_Batch.m (line 2524): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7244. Data_GUI_No_Batch.m (line 2524): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7245. Data_GUI_No_Batch.m (line 2646): Function might be unused.\n  7246. Data_GUI_No_Batch.m (line 2821): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7247. Data_GUI_No_Batch.m (line 2821): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7248. Data_GUI_No_Batch.m (line 2853): Function might be unused.\n  7249. Data_GUI_No_Batch.m (line 2971): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7250. Data_GUI_No_Batch.m (line 3151): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7251. Data_GUI_No_Batch.m (line 3249): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  7252. Data_GUI_No_Batch.m (line 3297): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7253. Data_GUI_No_Batch.m (line 3297): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7254. Data_GUI_No_Batch.m (line 3626): This keyword might not be aligned with its matching END on line 3637.\n  7255. Data_GUI_No_Batch.m (line 3639): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  7256. Data_GUI_No_Batch.m (line 3855): This keyword might not be aligned with its matching END on line 3857.\n  7257. Data_GUI_No_Batch.m (line 3959): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  7258. Data_GUI_No_Batch.m (line 3969): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7259. Data_GUI_No_Batch.m (line 3970): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7260. Data_GUI_No_Batch.m (line 3971): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7261. Data_GUI_No_Batch.m (line 4014): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7262. Data_GUI_No_Batch.m (line 4015): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7263. Data_GUI_No_Batch.m (line 4025): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  7264. Data_GUI_No_Batch.m (line 4041): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7265. Data_GUI_No_Batch.m (line 4042): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7266. Data_GUI_No_Batch.m (line 4083): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7267. Data_GUI_No_Batch.m (line 4117): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7268. Data_GUI_No_Batch.m (line 4131): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7269. Data_GUI_No_Batch.m (line 4139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7270. Data_GUI_No_Batch.m (line 4139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7271. Data_GUI_No_Batch.m (line 4338): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7272. Data_GUI_No_Batch.m (line 4378): Function might be unused.\n  7273. Data_GUI_No_Batch.m (line 4422): Value assigned to variable might be unused.\n  7274. Data_GUI_No_Batch.m (line 4432): Value assigned to variable might be unused.\n  7275. Data_GUI_No_Batch.m (line 4437): Value assigned to variable might be unused.\n  7276. Data_GUI_No_Batch.m (line 4442): Value assigned to variable might be unused.\n  7277. Data_GUI_No_Batch.m (line 4459): Value assigned to variable might be unused.\n  7278. Data_GUI_No_Batch.m (line 4568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7279. Data_GUI_No_Batch.m (line 4569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7280. Data_GUI_No_Batch.m (line 4576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7281. Data_GUI_No_Batch.m (line 4577): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7282. Data_GUI_No_Batch.m (line 4590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7283. Data_GUI_No_Batch.m (line 4592): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7284. Data_GUI_No_Batch.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7285. Data_GUI_No_Batch.m (line 4615): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7286. Data_GUI_No_Batch.m (line 4635): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7287. Data_GUI_No_Batch.m (line 4636): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7288. Data_GUI_No_Batch.m (line 4648): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7289. Data_GUI_No_Batch.m (line 4649): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7290. Data_GUI_No_Batch.m (line 4667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7291. Data_GUI_No_Batch.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7292. Data_GUI_No_Batch.m (line 4712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7293. Data_GUI_No_Batch.m (line 4713): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7294. Data_GUI_No_Batch.m (line 4720): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7295. Data_GUI_No_Batch.m (line 4721): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7296. Data_GUI_No_Batch.m (line 4798): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7297. Data_GUI_No_Batch.m (line 4799): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7298. Data_GUI_No_Batch.m (line 4809): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7299. Data_GUI_No_Batch.m (line 4810): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7300. Data_GUI_No_Batch.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7301. Data_GUI_No_Batch.m (line 4830): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7302. Data_GUI_No_Batch.m (line 4930): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7303. Data_GUI_No_Batch.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7304. Data_GUI_No_Batch.m (line 4996): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7305. Data_GUI_No_Batch.m (line 5044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7306. Data_GUI_No_Batch.m (line 5053): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7307. Data_GUI_No_Batch.m (line 5058): This statement (and possibly following ones) cannot be reached.\n  7308. Data_GUI_No_Batch.m (line 5060): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7309. Data_GUI_No_Batch.m (line 5067): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7310. Data_GUI_No_Batch.m (line 5097): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7311. Data_GUI_No_Batch.m (line 5137): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7312. Data_GUI_No_Batch.m (line 5160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7313. Data_GUI_No_Batch.m (line 5171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7314. Data_GUI_No_Batch.m (line 5183): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7315. Data_GUI_No_Batch.m (line 5196): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7316. Data_GUI_No_Batch.m (line 5225): Value assigned to variable might be unused.\n  7317. Data_GUI_No_Batch.m (line 5252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7318. Data_GUI_No_Batch.m (line 5284): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  7319. Data_GUI_No_Batch.m (line 5298): Value assigned to variable might be unused.\n  7320. Data_GUI_No_Batch.m (line 5316): Value assigned to variable might be unused.\n  7321. Data_GUI_No_Batch.m (line 5332): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7322. Data_GUI_No_Batch.m (line 5360): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7323. Data_GUI_No_Batch.m (line 5447): Function might be unused.\n  7324. Data_GUI_No_Batch.m (line 5453): Value assigned to variable might be unused.\n  7325. Data_GUI_No_Batch.m (line 5481): Value assigned to variable might be unused.\n  7326. Data_GUI_No_Batch.m (line 5506): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7327. Data_GUI_No_Batch.m (line 5528): Value assigned to variable might be unused.\n  7328. Data_GUI_No_Batch.m (line 5562): Value assigned to variable might be unused.\n  7329. Data_GUI_No_Batch.m (line 5591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7330. Data_GUI_No_Batch.m (line 5624): Function might be unused.\n  7331. Data_GUI_No_Batch.m (line 5668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7332. Data_GUI_No_Batch.m (line 5669): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7333. Data_GUI_No_Batch.m (line 5692): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7334. Data_GUI_No_Batch.m (line 5693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7335. Data_GUI_No_Batch.m (line 5790): Function might be unused.\n  7336. Data_GUI_No_Batch.m (line 5807): Value assigned to variable might be unused.\n  7337. Data_GUI_No_Batch.m (line 5865): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7338. Data_GUI_No_Batch.m (line 5866): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7339. Data_GUI_No_Batch.m (line 5870): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7340. Data_GUI_No_Batch.m (line 5871): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7341. Data_GUI_No_Batch.m (line 5889): Function might be unused.\n  7342. Data_GUI_No_Batch.m (line 5947): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7343. Data_GUI_No_Batch.m (line 5947): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7344. Data_GUI_No_Batch.m (line 5979): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7345. Data_GUI_No_Batch.m (line 5979): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7346. Data_GUI_No_Batch.m (line 6142): Function might be unused.\n  7347. Data_GUI_No_Batch.m (line 6172): Function might be unused.\n  7348. Data_GUI_No_Batch.m (line 6263): Function might be unused.\n  7349. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\Data_GUI_No_Batch.m: Missing arguments validation block\n  7350. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  7351. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\addModelWorkspaceData.m: Missing arguments validation block\n  7352. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\checkHighMemoryUsage.m: Missing function docstring\n  7353. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\checkHighMemoryUsage.m: Missing arguments validation block\n  7354. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\checkModelConfiguration.m: Missing arguments validation block\n  7355. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\checkStopRequest.m: Missing function docstring\n  7356. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\checkStopRequest.m: Missing arguments validation block\n  7357. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7358. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7359. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7360. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7361. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7362. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7363. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7364. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\check_model_configuration.m: Missing arguments validation block\n  7365. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7366. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7367. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7368. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\checkpoint_recovery.m: Missing arguments validation block\n  7369. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\combineDataSources.m: Missing arguments validation block\n  7370. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  7371. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7372. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7373. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7374. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7375. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7376. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7377. data_extraction_functions.m (line 146): Function might be unused.\n  7378. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7379. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7380. data_extraction_functions.m (line 202): Function might be unused.\n  7381. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7382. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7383. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7384. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7385. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\data_extraction_functions.m: Missing function docstring\n  7386. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\data_extraction_functions.m: Missing arguments validation block\n  7387. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7388. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\endPhase.m: Missing arguments validation block\n  7389. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  7390. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7391. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7392. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7393. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7394. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7395. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7396. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractAllSignalsFromBus.m: Missing arguments validation block\n  7397. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  7398. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractCoefficientsFromTable.m: Missing function docstring\n  7399. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractCoefficientsFromTable.m: Missing arguments validation block\n  7400. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7401. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7402. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7403. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7404. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7405. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7406. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7407. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7408. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7409. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7410. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7411. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7412. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractCombinedSignalBusData.m: Missing function docstring\n  7413. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractCombinedSignalBusData.m: Missing arguments validation block\n  7414. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7415. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7416. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7417. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7418. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7419. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractConstantMatrixData.m: Missing function docstring\n  7420. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractConstantMatrixData.m: Missing arguments validation block\n  7421. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractDataFromField.m: Missing arguments validation block\n  7422. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  7423. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  7424. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractDataWithOptions.m: Missing arguments validation block\n  7425. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  7426. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  7427. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  7428. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  7429. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  7430. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7431. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7432. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7433. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7434. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7435. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7436. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7437. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7438. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7439. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7440. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7441. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7442. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7443. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7444. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7445. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7446. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7447. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7448. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractFromCombinedSignalBus.m: Missing function docstring\n  7449. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  7450. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  7451. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  7452. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  7453. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  7454. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  7455. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  7456. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7457. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7458. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7459. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7460. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7461. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7462. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7463. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7464. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7465. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7466. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7467. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7468. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7469. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7470. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7471. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7472. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  7473. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  7474. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7475. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7476. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractFromNestedStruct.m: Missing arguments validation block\n  7477. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7478. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7479. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7480. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7481. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7482. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7483. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractLogsoutDataFixed.m: Missing function docstring\n  7484. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractLogsoutDataFixed.m: Missing arguments validation block\n  7485. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractSignalsFromSimOut.m: Missing arguments validation block\n  7486. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7487. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7488. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7489. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractSimscapeDataRecursive.m: Missing function docstring\n  7490. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  7491. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractTimeSeriesData.m: Missing function docstring\n  7492. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractTimeSeriesData.m: Missing arguments validation block\n  7493. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7494. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7495. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7496. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7497. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractWorkspaceOutputs.m: Missing function docstring\n  7498. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\extractWorkspaceOutputs.m: Missing arguments validation block\n  7499. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7500. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7501. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  7502. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7503. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7504. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7505. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\fallbackSimlogExtraction.m: Missing function docstring\n  7506. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\fallbackSimlogExtraction.m: Missing arguments validation block\n  7507. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\generateRandomCoefficients.m: Missing arguments validation block\n  7508. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\getMemoryInfo.m: Missing function docstring\n  7509. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\getMemoryInfo.m: Missing arguments validation block\n  7510. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\getMemoryUsage.m: Missing arguments validation block\n  7511. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7512. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7513. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7514. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7515. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7516. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7517. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7518. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  7519. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7520. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7521. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7522. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7523. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7524. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\getPolynomialParameterInfo.m: Missing arguments validation block\n  7525. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\getShortenedJointName.m: Missing arguments validation block\n  7526. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7527. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7528. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  7529. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  7530. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\loadInputFile.m: Missing function docstring\n  7531. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\loadInputFile.m: Missing arguments validation block\n  7532. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\logBatchResult.m: Missing arguments validation block\n  7533. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7534. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\logMessage.m: Missing arguments validation block\n  7535. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\logical2str.m: Missing function docstring\n  7536. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\logical2str.m: Missing arguments validation block\n  7537. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  7538. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\memory_monitor.m: Missing arguments validation block\n  7539. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\mergeTables.m: Missing function docstring\n  7540. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\mergeTables.m: Missing arguments validation block\n  7541. performance_monitor.m (line 11): Persistent variable might be unused.\n  7542. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7543. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7544. performance_monitor.m (line 77): Function might be unused.\n  7545. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7546. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7547. performance_monitor.m (line 118): Function might be unused.\n  7548. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7549. performance_monitor.m (line 133): Function might be unused.\n  7550. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7551. performance_monitor.m (line 149): Function might be unused.\n  7552. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7553. performance_monitor.m (line 162): Function might be unused.\n  7554. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7555. performance_monitor.m (line 175): Function might be unused.\n  7556. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7557. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7558. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7559. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\performance_monitor.m: Missing arguments validation block\n  7560. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  7561. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  7562. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7563. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7564. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\processSimulationOutput.m: Missing function docstring\n  7565. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\processSimulationOutput.m: Missing arguments validation block\n  7566. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7567. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\recordBatchTime.m: Missing arguments validation block\n  7568. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7569. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\recordPhase.m: Missing arguments validation block\n  7570. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\resampleDataToFrequency.m: Missing function docstring\n  7571. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\resampleDataToFrequency.m: Missing arguments validation block\n  7572. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\restoreWorkspace.m: Missing arguments validation block\n  7573. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\runSingleTrial.m: Missing arguments validation block\n  7574. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\setModelParameters.m: Missing arguments validation block\n  7575. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7576. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\setPolynomialCoefficients.m: Missing arguments validation block\n  7577. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\shouldShowDebug.m: Missing function docstring\n  7578. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\shouldShowDebug.m: Missing arguments validation block\n  7579. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\shouldShowNormal.m: Missing function docstring\n  7580. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\shouldShowNormal.m: Missing arguments validation block\n  7581. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\shouldShowVerbose.m: Missing function docstring\n  7582. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\shouldShowVerbose.m: Missing arguments validation block\n  7583. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  7584. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7585. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\traverseSimlogNode.m: Missing arguments validation block\n  7586. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7587. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7588. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7589. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7590. verbosity_control.m (line 203): Function might be unused.\n  7591. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7592. verbosity_control.m (line 225): Function might be unused.\n  7593. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7594. verbosity_control.m (line 248): Function might be unused.\n  7595. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7596. verbosity_control.m (line 274): Function might be unused.\n  7597. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7598. verbosity_control.m (line 293): Function might be unused.\n  7599. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7600. verbosity_control.m (line 320): Function might be unused.\n  7601. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7602. verbosity_control.m (line 335): Function might be unused.\n  7603. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7604. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250802_204050\\verbosity_control.m: Missing arguments validation block\n  7605. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  7606. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  7607. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  7608. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  7609. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7610. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7611. Data_GUI.m (line 725): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7612. Data_GUI.m (line 726): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7613. Data_GUI.m (line 727): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7614. Data_GUI.m (line 728): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7615. Data_GUI.m (line 729): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7616. Data_GUI.m (line 745): Function might be unused.\n  7617. Data_GUI.m (line 970): Function might be unused.\n  7618. Data_GUI.m (line 985): Value assigned to variable might be unused.\n  7619. Data_GUI.m (line 1007): Function might be unused.\n  7620. Data_GUI.m (line 1184): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7621. Data_GUI.m (line 1185): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7622. Data_GUI.m (line 1186): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7623. Data_GUI.m (line 1187): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7624. Data_GUI.m (line 1188): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7625. Data_GUI.m (line 1218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7626. Data_GUI.m (line 1219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7627. Data_GUI.m (line 1220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7628. Data_GUI.m (line 1240): Function might be unused.\n  7629. Data_GUI.m (line 1281): Function might be unused.\n  7630. Data_GUI.m (line 1357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7631. Data_GUI.m (line 1427): Value assigned to variable might be unused.\n  7632. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7633. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7634. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7635. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7636. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7637. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7638. Data_GUI.m (line 1595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7639. Data_GUI.m (line 1596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7640. Data_GUI.m (line 1597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7641. Data_GUI.m (line 1598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7642. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7643. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7644. Data_GUI.m (line 1640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7645. Data_GUI.m (line 1641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7646. Data_GUI.m (line 1642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7647. Data_GUI.m (line 1653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7648. Data_GUI.m (line 1654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7649. Data_GUI.m (line 1659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7650. Data_GUI.m (line 1660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7651. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7652. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7653. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7654. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7655. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7656. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7657. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7658. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7659. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7660. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7661. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7662. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7663. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7664. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7665. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7666. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7667. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7668. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7669. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7670. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7671. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7672. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7673. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7674. Data_GUI.m (line 2027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7675. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7676. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7677. Data_GUI.m (line 2043): Function might be unused.\n  7678. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7679. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7680. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7681. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7682. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7683. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7684. Data_GUI.m (line 2257): Value assigned to variable might be unused.\n  7685. Data_GUI.m (line 2316): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  7686. Data_GUI.m (line 2460): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  7687. Data_GUI.m (line 2599): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7688. Data_GUI.m (line 2599): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7689. Data_GUI.m (line 2721): Function might be unused.\n  7690. Data_GUI.m (line 2898): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7691. Data_GUI.m (line 2898): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7692. Data_GUI.m (line 2930): Function might be unused.\n  7693. Data_GUI.m (line 3081): Function might be unused.\n  7694. Data_GUI.m (line 3159): Function might be unused.\n  7695. Data_GUI.m (line 3174): This keyword might not be aligned with its matching END on line 3185.\n  7696. Data_GUI.m (line 3187): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  7697. Data_GUI.m (line 3403): This keyword might not be aligned with its matching END on line 3405.\n  7698. Data_GUI.m (line 3507): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  7699. Data_GUI.m (line 3542): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7700. Data_GUI.m (line 3576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7701. Data_GUI.m (line 3590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7702. Data_GUI.m (line 3598): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7703. Data_GUI.m (line 3598): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7704. Data_GUI.m (line 3797): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7705. Data_GUI.m (line 3837): Function might be unused.\n  7706. Data_GUI.m (line 3869): Function might be unused.\n  7707. Data_GUI.m (line 3881): Value assigned to variable might be unused.\n  7708. Data_GUI.m (line 3891): Value assigned to variable might be unused.\n  7709. Data_GUI.m (line 3896): Value assigned to variable might be unused.\n  7710. Data_GUI.m (line 3901): Value assigned to variable might be unused.\n  7711. Data_GUI.m (line 3918): Value assigned to variable might be unused.\n  7712. Data_GUI.m (line 4027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7713. Data_GUI.m (line 4028): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7714. Data_GUI.m (line 4035): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7715. Data_GUI.m (line 4036): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7716. Data_GUI.m (line 4049): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7717. Data_GUI.m (line 4051): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7718. Data_GUI.m (line 4073): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7719. Data_GUI.m (line 4074): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7720. Data_GUI.m (line 4094): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7721. Data_GUI.m (line 4095): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7722. Data_GUI.m (line 4107): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7723. Data_GUI.m (line 4108): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7724. Data_GUI.m (line 4126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7725. Data_GUI.m (line 4127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7726. Data_GUI.m (line 4171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7727. Data_GUI.m (line 4172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7728. Data_GUI.m (line 4179): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7729. Data_GUI.m (line 4180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7730. Data_GUI.m (line 4199): Function might be unused.\n  7731. Data_GUI.m (line 4257): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7732. Data_GUI.m (line 4258): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7733. Data_GUI.m (line 4268): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7734. Data_GUI.m (line 4269): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7735. Data_GUI.m (line 4288): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7736. Data_GUI.m (line 4289): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7737. Data_GUI.m (line 4342): Function might be unused.\n  7738. Data_GUI.m (line 4389): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7739. Data_GUI.m (line 4454): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7740. Data_GUI.m (line 4455): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7741. Data_GUI.m (line 4503): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7742. Data_GUI.m (line 4512): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7743. Data_GUI.m (line 4517): This statement (and possibly following ones) cannot be reached.\n  7744. Data_GUI.m (line 4519): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7745. Data_GUI.m (line 4526): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7746. Data_GUI.m (line 4556): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7747. Data_GUI.m (line 4596): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7748. Data_GUI.m (line 4619): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7749. Data_GUI.m (line 4630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7750. Data_GUI.m (line 4642): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7751. Data_GUI.m (line 4655): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7752. Data_GUI.m (line 4749): Function might be unused.\n  7753. Data_GUI.m (line 4755): Value assigned to variable might be unused.\n  7754. Data_GUI.m (line 4783): Value assigned to variable might be unused.\n  7755. Data_GUI.m (line 4808): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7756. Data_GUI.m (line 4830): Value assigned to variable might be unused.\n  7757. Data_GUI.m (line 4864): Value assigned to variable might be unused.\n  7758. Data_GUI.m (line 4893): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7759. Data_GUI.m (line 4926): Function might be unused.\n  7760. Data_GUI.m (line 4970): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7761. Data_GUI.m (line 4971): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7762. Data_GUI.m (line 4994): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7763. Data_GUI.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7764. Data_GUI.m (line 5015): Function might be unused.\n  7765. Data_GUI.m (line 5092): Function might be unused.\n  7766. Data_GUI.m (line 5109): Value assigned to variable might be unused.\n  7767. Data_GUI.m (line 5167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7768. Data_GUI.m (line 5168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7769. Data_GUI.m (line 5172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7770. Data_GUI.m (line 5173): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7771. Data_GUI.m (line 5191): Function might be unused.\n  7772. Data_GUI.m (line 5249): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7773. Data_GUI.m (line 5249): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7774. Data_GUI.m (line 5281): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7775. Data_GUI.m (line 5281): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7776. Data_GUI.m (line 5444): Function might be unused.\n  7777. Data_GUI.m (line 5474): Function might be unused.\n  7778. Data_GUI.m (line 5565): Function might be unused.\n  7779. Data_GUI.m (line 5603): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7780. Data_GUI.m (line 5634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7781. Data_GUI.m (line 5670): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7782. Data_GUI.m (line 5672): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7783. Data_GUI.m (line 5672): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7784. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\Data_GUI.m: Missing arguments validation block\n  7785. Data_GUI_Enhanced.m (line 628): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7786. Data_GUI_Enhanced.m (line 628): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7787. Data_GUI_Enhanced.m (line 661): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7788. Data_GUI_Enhanced.m (line 726): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  7789. Data_GUI_Enhanced.m (line 917): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7790. Data_GUI_Enhanced.m (line 917): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7791. Data_GUI_Enhanced.m (line 923): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7792. Data_GUI_Enhanced.m (line 923): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7793. Data_GUI_Enhanced.m (line 934): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7794. Data_GUI_Enhanced.m (line 934): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7795. Data_GUI_Enhanced.m (line 950): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7796. Data_GUI_Enhanced.m (line 987): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7797. Data_GUI_Enhanced.m (line 987): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7798. Data_GUI_Enhanced.m (line 1138): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7799. Data_GUI_Enhanced.m (line 1138): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7800. Data_GUI_Enhanced.m (line 1147): Value assigned to variable might be unused.\n  7801. Data_GUI_Enhanced.m (line 1152): Value assigned to variable might be unused.\n  7802. Data_GUI_Enhanced.m (line 1179): Value assigned to variable might be unused.\n  7803. Data_GUI_Enhanced.m (line 1279): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7804. Data_GUI_Enhanced.m (line 1279): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7805. Data_GUI_Enhanced.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7806. Data_GUI_Enhanced.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7807. Data_GUI_Enhanced.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7808. Data_GUI_Enhanced.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7809. Data_GUI_Enhanced.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7810. Data_GUI_Enhanced.m (line 1926): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7811. Data_GUI_Enhanced.m (line 1927): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7812. Data_GUI_Enhanced.m (line 1928): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7813. Data_GUI_Enhanced.m (line 1929): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7814. Data_GUI_Enhanced.m (line 1930): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7815. Data_GUI_Enhanced.m (line 1960): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7816. Data_GUI_Enhanced.m (line 1961): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7817. Data_GUI_Enhanced.m (line 1962): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7818. Data_GUI_Enhanced.m (line 1995): Value assigned to variable might be unused.\n  7819. Data_GUI_Enhanced.m (line 2020): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7820. Data_GUI_Enhanced.m (line 2168): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7821. Data_GUI_Enhanced.m (line 2168): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7822. Data_GUI_Enhanced.m (line 2181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7823. Data_GUI_Enhanced.m (line 2181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7824. Data_GUI_Enhanced.m (line 2194): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7825. Data_GUI_Enhanced.m (line 2206): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7826. Data_GUI_Enhanced.m (line 2206): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7827. Data_GUI_Enhanced.m (line 2262): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7828. Data_GUI_Enhanced.m (line 2262): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7829. Data_GUI_Enhanced.m (line 2313): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7830. Data_GUI_Enhanced.m (line 2313): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7831. Data_GUI_Enhanced.m (line 2360): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7832. Data_GUI_Enhanced.m (line 2360): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7833. Data_GUI_Enhanced.m (line 2390): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7834. Data_GUI_Enhanced.m (line 2390): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7835. Data_GUI_Enhanced.m (line 2412): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7836. Data_GUI_Enhanced.m (line 2412): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7837. Data_GUI_Enhanced.m (line 2433): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7838. Data_GUI_Enhanced.m (line 2433): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7839. Data_GUI_Enhanced.m (line 2458): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7840. Data_GUI_Enhanced.m (line 2458): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7841. Data_GUI_Enhanced.m (line 2483): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7842. Data_GUI_Enhanced.m (line 2483): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7843. Data_GUI_Enhanced.m (line 2498): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7844. Data_GUI_Enhanced.m (line 2510): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7845. Data_GUI_Enhanced.m (line 2510): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7846. Data_GUI_Enhanced.m (line 2516): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7847. Data_GUI_Enhanced.m (line 2516): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7848. Data_GUI_Enhanced.m (line 2529): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7849. Data_GUI_Enhanced.m (line 2530): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7850. Data_GUI_Enhanced.m (line 2531): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7851. Data_GUI_Enhanced.m (line 2542): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7852. Data_GUI_Enhanced.m (line 2543): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7853. Data_GUI_Enhanced.m (line 2548): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7854. Data_GUI_Enhanced.m (line 2549): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7855. Data_GUI_Enhanced.m (line 2589): Value assigned to variable might be unused.\n  7856. Data_GUI_Enhanced.m (line 2804): Value assigned to variable might be unused.\n  7857. Data_GUI_Enhanced.m (line 2850): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  7858. Data_GUI_Enhanced.m (line 2994): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  7859. Data_GUI_Enhanced.m (line 3133): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7860. Data_GUI_Enhanced.m (line 3133): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7861. Data_GUI_Enhanced.m (line 3255): Function might be unused.\n  7862. Data_GUI_Enhanced.m (line 3433): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7863. Data_GUI_Enhanced.m (line 3433): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7864. Data_GUI_Enhanced.m (line 3468): Function might be unused.\n  7865. Data_GUI_Enhanced.m (line 3519): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7866. Data_GUI_Enhanced.m (line 3601): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7867. Data_GUI_Enhanced.m (line 3718): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  7868. Data_GUI_Enhanced.m (line 3766): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7869. Data_GUI_Enhanced.m (line 3766): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7870. Data_GUI_Enhanced.m (line 3837): Value assigned to variable might be unused.\n  7871. Data_GUI_Enhanced.m (line 3953): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7872. Data_GUI_Enhanced.m (line 4262): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  7873. Data_GUI_Enhanced.m (line 4477): This keyword might not be aligned with its matching END on line 4479.\n  7874. Data_GUI_Enhanced.m (line 4552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7875. Data_GUI_Enhanced.m (line 4555): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7876. Data_GUI_Enhanced.m (line 4555): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7877. Data_GUI_Enhanced.m (line 4601): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  7878. Data_GUI_Enhanced.m (line 4653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7879. Data_GUI_Enhanced.m (line 4708): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7880. Data_GUI_Enhanced.m (line 4709): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7881. Data_GUI_Enhanced.m (line 4749): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7882. Data_GUI_Enhanced.m (line 4758): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7883. Data_GUI_Enhanced.m (line 4763): This statement (and possibly following ones) cannot be reached.\n  7884. Data_GUI_Enhanced.m (line 4765): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7885. Data_GUI_Enhanced.m (line 4772): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7886. Data_GUI_Enhanced.m (line 4802): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7887. Data_GUI_Enhanced.m (line 4852): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7888. Data_GUI_Enhanced.m (line 4886): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7889. Data_GUI_Enhanced.m (line 4900): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7890. Data_GUI_Enhanced.m (line 4908): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7891. Data_GUI_Enhanced.m (line 4908): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7892. Data_GUI_Enhanced.m (line 5015): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7893. Data_GUI_Enhanced.m (line 5015): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7894. Data_GUI_Enhanced.m (line 5047): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7895. Data_GUI_Enhanced.m (line 5047): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7896. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\Data_GUI_Enhanced.m: Missing arguments validation block\n  7897. PostProcessingModule.m (line 23): Function might be unused.\n  7898. PostProcessingModule.m (line 144): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7899. PostProcessingModule.m (line 201): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7900. PostProcessingModule.m (line 201): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7901. PostProcessingModule.m (line 234): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7902. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7903. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7904. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7905. PostProcessingModule.m (line 346): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7906. PostProcessingModule.m (line 380): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7907. PostProcessingModule.m (line 386): Value assigned to variable might be unused.\n  7908. PostProcessingModule.m (line 393): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  7909. PostProcessingModule.m (line 407): Input argument might be unused. Consider replacing the argument with ~ instead.\n  7910. PostProcessingModule.m (line 422): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  7911. PostProcessingModule.m (line 621): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7912. PostProcessingModule.m (line 621): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7913. PostProcessingModule.m (line 742): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7914. PostProcessingModule.m (line 742): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  7915. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\PostProcessingModule.m: Missing arguments validation block\n  7916. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  7917. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\addModelWorkspaceData.m: Missing arguments validation block\n  7918. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\checkHighMemoryUsage.m: Missing function docstring\n  7919. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\checkHighMemoryUsage.m: Missing arguments validation block\n  7920. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\checkModelConfiguration.m: Missing arguments validation block\n  7921. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\checkStopRequest.m: Missing function docstring\n  7922. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\checkStopRequest.m: Missing arguments validation block\n  7923. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7924. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7925. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7926. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7927. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  7928. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7929. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7930. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\check_model_configuration.m: Missing arguments validation block\n  7931. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7932. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7933. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  7934. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\checkpoint_recovery.m: Missing arguments validation block\n  7935. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\combineDataSources.m: Missing arguments validation block\n  7936. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  7937. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7938. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7939. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7940. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7941. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7942. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7943. data_extraction_functions.m (line 146): Function might be unused.\n  7944. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7945. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7946. data_extraction_functions.m (line 202): Function might be unused.\n  7947. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7948. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7949. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7950. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7951. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\data_extraction_functions.m: Missing function docstring\n  7952. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\data_extraction_functions.m: Missing arguments validation block\n  7953. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  7954. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\endPhase.m: Missing arguments validation block\n  7955. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  7956. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7957. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7958. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7959. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7960. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7961. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7962. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractAllSignalsFromBus.m: Missing arguments validation block\n  7963. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  7964. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractCoefficientsFromTable.m: Missing function docstring\n  7965. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractCoefficientsFromTable.m: Missing arguments validation block\n  7966. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7967. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7968. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7969. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7970. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7971. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7972. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7973. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7974. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7975. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7976. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7977. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7978. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractCombinedSignalBusData.m: Missing function docstring\n  7979. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractCombinedSignalBusData.m: Missing arguments validation block\n  7980. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7981. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7982. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7983. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7984. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7985. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractConstantMatrixData.m: Missing function docstring\n  7986. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractConstantMatrixData.m: Missing arguments validation block\n  7987. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractDataFromField.m: Missing arguments validation block\n  7988. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  7989. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  7990. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractDataWithOptions.m: Missing arguments validation block\n  7991. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  7992. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  7993. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  7994. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  7995. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  7996. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7997. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7998. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  7999. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8000. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8001. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8002. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8003. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8004. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8005. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8006. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8007. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8008. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8009. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8010. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8011. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8012. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8013. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8014. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractFromCombinedSignalBus.m: Missing function docstring\n  8015. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  8016. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  8017. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  8018. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  8019. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  8020. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  8021. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  8022. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8023. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8024. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8025. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8026. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8027. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8028. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8029. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8030. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8031. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8032. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8033. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8034. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8035. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8036. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8037. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8038. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  8039. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  8040. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8041. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8042. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractFromNestedStruct.m: Missing arguments validation block\n  8043. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8044. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8045. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8046. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8047. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8048. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8049. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractLogsoutDataFixed.m: Missing function docstring\n  8050. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractLogsoutDataFixed.m: Missing arguments validation block\n  8051. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractSignalsFromSimOut.m: Missing arguments validation block\n  8052. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8053. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8054. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8055. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractSimscapeDataRecursive.m: Missing function docstring\n  8056. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  8057. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractTimeSeriesData.m: Missing function docstring\n  8058. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractTimeSeriesData.m: Missing arguments validation block\n  8059. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8060. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8061. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8062. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8063. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractWorkspaceOutputs.m: Missing function docstring\n  8064. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\extractWorkspaceOutputs.m: Missing arguments validation block\n  8065. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8066. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8067. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  8068. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8069. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8070. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8071. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\fallbackSimlogExtraction.m: Missing function docstring\n  8072. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\fallbackSimlogExtraction.m: Missing arguments validation block\n  8073. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\generateRandomCoefficients.m: Missing arguments validation block\n  8074. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\getMemoryInfo.m: Missing function docstring\n  8075. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\getMemoryInfo.m: Missing arguments validation block\n  8076. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\getMemoryUsage.m: Missing arguments validation block\n  8077. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8078. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8079. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8080. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8081. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8082. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8083. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8084. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  8085. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8086. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8087. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8088. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8089. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8090. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\getPolynomialParameterInfo.m: Missing arguments validation block\n  8091. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\getShortenedJointName.m: Missing arguments validation block\n  8092. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8093. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8094. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  8095. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  8096. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\loadInputFile.m: Missing function docstring\n  8097. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\loadInputFile.m: Missing arguments validation block\n  8098. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\logBatchResult.m: Missing arguments validation block\n  8099. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8100. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\logMessage.m: Missing arguments validation block\n  8101. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\logical2str.m: Missing function docstring\n  8102. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\logical2str.m: Missing arguments validation block\n  8103. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  8104. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\memory_monitor.m: Missing arguments validation block\n  8105. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\mergeTables.m: Missing function docstring\n  8106. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\mergeTables.m: Missing arguments validation block\n  8107. performance_monitor.m (line 11): Persistent variable might be unused.\n  8108. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8109. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8110. performance_monitor.m (line 77): Function might be unused.\n  8111. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8112. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8113. performance_monitor.m (line 118): Function might be unused.\n  8114. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8115. performance_monitor.m (line 133): Function might be unused.\n  8116. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8117. performance_monitor.m (line 149): Function might be unused.\n  8118. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8119. performance_monitor.m (line 162): Function might be unused.\n  8120. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8121. performance_monitor.m (line 175): Function might be unused.\n  8122. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8123. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8124. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8125. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\performance_monitor.m: Missing arguments validation block\n  8126. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  8127. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  8128. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8129. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8130. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\processSimulationOutput.m: Missing function docstring\n  8131. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\processSimulationOutput.m: Missing arguments validation block\n  8132. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8133. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\recordBatchTime.m: Missing arguments validation block\n  8134. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8135. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\recordPhase.m: Missing arguments validation block\n  8136. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\resampleDataToFrequency.m: Missing function docstring\n  8137. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\resampleDataToFrequency.m: Missing arguments validation block\n  8138. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\restoreWorkspace.m: Missing arguments validation block\n  8139. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\runSingleTrial.m: Missing arguments validation block\n  8140. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\setModelParameters.m: Missing arguments validation block\n  8141. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8142. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\setPolynomialCoefficients.m: Missing arguments validation block\n  8143. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\shouldShowDebug.m: Missing function docstring\n  8144. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\shouldShowDebug.m: Missing arguments validation block\n  8145. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\shouldShowNormal.m: Missing function docstring\n  8146. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\shouldShowNormal.m: Missing arguments validation block\n  8147. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\shouldShowVerbose.m: Missing function docstring\n  8148. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\shouldShowVerbose.m: Missing arguments validation block\n  8149. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  8150. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8151. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\traverseSimlogNode.m: Missing arguments validation block\n  8152. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8153. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8154. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8155. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8156. verbosity_control.m (line 203): Function might be unused.\n  8157. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8158. verbosity_control.m (line 225): Function might be unused.\n  8159. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8160. verbosity_control.m (line 248): Function might be unused.\n  8161. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8162. verbosity_control.m (line 274): Function might be unused.\n  8163. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8164. verbosity_control.m (line 293): Function might be unused.\n  8165. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8166. verbosity_control.m (line 320): Function might be unused.\n  8167. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8168. verbosity_control.m (line 335): Function might be unused.\n  8169. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8170. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_125328\\verbosity_control.m: Missing arguments validation block\n  8171. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  8172. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  8173. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  8174. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  8175. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8176. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8177. Data_GUI.m (line 725): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8178. Data_GUI.m (line 726): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8179. Data_GUI.m (line 727): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8180. Data_GUI.m (line 728): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8181. Data_GUI.m (line 729): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8182. Data_GUI.m (line 745): Function might be unused.\n  8183. Data_GUI.m (line 970): Function might be unused.\n  8184. Data_GUI.m (line 985): Value assigned to variable might be unused.\n  8185. Data_GUI.m (line 1007): Function might be unused.\n  8186. Data_GUI.m (line 1184): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8187. Data_GUI.m (line 1185): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8188. Data_GUI.m (line 1186): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8189. Data_GUI.m (line 1187): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8190. Data_GUI.m (line 1188): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8191. Data_GUI.m (line 1218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8192. Data_GUI.m (line 1219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8193. Data_GUI.m (line 1220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8194. Data_GUI.m (line 1240): Function might be unused.\n  8195. Data_GUI.m (line 1281): Function might be unused.\n  8196. Data_GUI.m (line 1357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8197. Data_GUI.m (line 1427): Value assigned to variable might be unused.\n  8198. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8199. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8200. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8201. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8202. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8203. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8204. Data_GUI.m (line 1595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8205. Data_GUI.m (line 1596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8206. Data_GUI.m (line 1597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8207. Data_GUI.m (line 1598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8208. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8209. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8210. Data_GUI.m (line 1640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8211. Data_GUI.m (line 1641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8212. Data_GUI.m (line 1642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8213. Data_GUI.m (line 1653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8214. Data_GUI.m (line 1654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8215. Data_GUI.m (line 1659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8216. Data_GUI.m (line 1660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8217. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8218. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8219. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8220. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8221. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8222. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8223. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8224. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8225. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8226. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8227. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8228. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8229. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8230. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8231. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8232. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8233. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8234. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8235. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8236. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8237. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8238. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8239. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8240. Data_GUI.m (line 2027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8241. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8242. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8243. Data_GUI.m (line 2043): Function might be unused.\n  8244. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8245. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8246. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8247. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8248. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8249. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8250. Data_GUI.m (line 2257): Value assigned to variable might be unused.\n  8251. Data_GUI.m (line 2316): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  8252. Data_GUI.m (line 2460): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  8253. Data_GUI.m (line 2599): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8254. Data_GUI.m (line 2599): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8255. Data_GUI.m (line 2721): Function might be unused.\n  8256. Data_GUI.m (line 2898): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8257. Data_GUI.m (line 2898): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8258. Data_GUI.m (line 2930): Function might be unused.\n  8259. Data_GUI.m (line 3081): Function might be unused.\n  8260. Data_GUI.m (line 3159): Function might be unused.\n  8261. Data_GUI.m (line 3174): This keyword might not be aligned with its matching END on line 3185.\n  8262. Data_GUI.m (line 3187): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  8263. Data_GUI.m (line 3403): This keyword might not be aligned with its matching END on line 3405.\n  8264. Data_GUI.m (line 3507): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  8265. Data_GUI.m (line 3542): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8266. Data_GUI.m (line 3576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8267. Data_GUI.m (line 3590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8268. Data_GUI.m (line 3598): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8269. Data_GUI.m (line 3598): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8270. Data_GUI.m (line 3797): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8271. Data_GUI.m (line 3837): Function might be unused.\n  8272. Data_GUI.m (line 3869): Function might be unused.\n  8273. Data_GUI.m (line 3881): Value assigned to variable might be unused.\n  8274. Data_GUI.m (line 3891): Value assigned to variable might be unused.\n  8275. Data_GUI.m (line 3896): Value assigned to variable might be unused.\n  8276. Data_GUI.m (line 3901): Value assigned to variable might be unused.\n  8277. Data_GUI.m (line 3918): Value assigned to variable might be unused.\n  8278. Data_GUI.m (line 4027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8279. Data_GUI.m (line 4028): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8280. Data_GUI.m (line 4035): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8281. Data_GUI.m (line 4036): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8282. Data_GUI.m (line 4049): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8283. Data_GUI.m (line 4051): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8284. Data_GUI.m (line 4073): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8285. Data_GUI.m (line 4074): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8286. Data_GUI.m (line 4094): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8287. Data_GUI.m (line 4095): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8288. Data_GUI.m (line 4107): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8289. Data_GUI.m (line 4108): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8290. Data_GUI.m (line 4126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8291. Data_GUI.m (line 4127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8292. Data_GUI.m (line 4171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8293. Data_GUI.m (line 4172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8294. Data_GUI.m (line 4179): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8295. Data_GUI.m (line 4180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8296. Data_GUI.m (line 4199): Function might be unused.\n  8297. Data_GUI.m (line 4257): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8298. Data_GUI.m (line 4258): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8299. Data_GUI.m (line 4268): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8300. Data_GUI.m (line 4269): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8301. Data_GUI.m (line 4288): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8302. Data_GUI.m (line 4289): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8303. Data_GUI.m (line 4342): Function might be unused.\n  8304. Data_GUI.m (line 4389): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8305. Data_GUI.m (line 4454): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8306. Data_GUI.m (line 4455): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8307. Data_GUI.m (line 4503): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8308. Data_GUI.m (line 4512): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8309. Data_GUI.m (line 4517): This statement (and possibly following ones) cannot be reached.\n  8310. Data_GUI.m (line 4519): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8311. Data_GUI.m (line 4526): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8312. Data_GUI.m (line 4556): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8313. Data_GUI.m (line 4596): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8314. Data_GUI.m (line 4619): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8315. Data_GUI.m (line 4630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8316. Data_GUI.m (line 4642): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8317. Data_GUI.m (line 4655): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8318. Data_GUI.m (line 4749): Function might be unused.\n  8319. Data_GUI.m (line 4755): Value assigned to variable might be unused.\n  8320. Data_GUI.m (line 4783): Value assigned to variable might be unused.\n  8321. Data_GUI.m (line 4808): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8322. Data_GUI.m (line 4830): Value assigned to variable might be unused.\n  8323. Data_GUI.m (line 4864): Value assigned to variable might be unused.\n  8324. Data_GUI.m (line 4893): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8325. Data_GUI.m (line 4926): Function might be unused.\n  8326. Data_GUI.m (line 4970): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8327. Data_GUI.m (line 4971): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8328. Data_GUI.m (line 4994): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8329. Data_GUI.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8330. Data_GUI.m (line 5015): Function might be unused.\n  8331. Data_GUI.m (line 5092): Function might be unused.\n  8332. Data_GUI.m (line 5109): Value assigned to variable might be unused.\n  8333. Data_GUI.m (line 5167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8334. Data_GUI.m (line 5168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8335. Data_GUI.m (line 5172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8336. Data_GUI.m (line 5173): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8337. Data_GUI.m (line 5191): Function might be unused.\n  8338. Data_GUI.m (line 5249): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8339. Data_GUI.m (line 5249): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8340. Data_GUI.m (line 5281): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8341. Data_GUI.m (line 5281): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8342. Data_GUI.m (line 5444): Function might be unused.\n  8343. Data_GUI.m (line 5474): Function might be unused.\n  8344. Data_GUI.m (line 5565): Function might be unused.\n  8345. Data_GUI.m (line 5603): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8346. Data_GUI.m (line 5634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8347. Data_GUI.m (line 5670): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8348. Data_GUI.m (line 5672): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8349. Data_GUI.m (line 5672): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8350. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\Data_GUI.m: Missing arguments validation block\n  8351. Data_GUI_Enhanced.m (line 628): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8352. Data_GUI_Enhanced.m (line 628): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8353. Data_GUI_Enhanced.m (line 661): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8354. Data_GUI_Enhanced.m (line 726): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  8355. Data_GUI_Enhanced.m (line 917): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8356. Data_GUI_Enhanced.m (line 917): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8357. Data_GUI_Enhanced.m (line 923): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8358. Data_GUI_Enhanced.m (line 923): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8359. Data_GUI_Enhanced.m (line 934): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8360. Data_GUI_Enhanced.m (line 934): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8361. Data_GUI_Enhanced.m (line 950): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8362. Data_GUI_Enhanced.m (line 987): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8363. Data_GUI_Enhanced.m (line 987): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8364. Data_GUI_Enhanced.m (line 1138): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8365. Data_GUI_Enhanced.m (line 1138): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8366. Data_GUI_Enhanced.m (line 1147): Value assigned to variable might be unused.\n  8367. Data_GUI_Enhanced.m (line 1152): Value assigned to variable might be unused.\n  8368. Data_GUI_Enhanced.m (line 1179): Value assigned to variable might be unused.\n  8369. Data_GUI_Enhanced.m (line 1279): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8370. Data_GUI_Enhanced.m (line 1279): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8371. Data_GUI_Enhanced.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8372. Data_GUI_Enhanced.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8373. Data_GUI_Enhanced.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8374. Data_GUI_Enhanced.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8375. Data_GUI_Enhanced.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8376. Data_GUI_Enhanced.m (line 1926): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8377. Data_GUI_Enhanced.m (line 1927): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8378. Data_GUI_Enhanced.m (line 1928): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8379. Data_GUI_Enhanced.m (line 1929): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8380. Data_GUI_Enhanced.m (line 1930): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8381. Data_GUI_Enhanced.m (line 1960): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8382. Data_GUI_Enhanced.m (line 1961): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8383. Data_GUI_Enhanced.m (line 1962): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8384. Data_GUI_Enhanced.m (line 1995): Value assigned to variable might be unused.\n  8385. Data_GUI_Enhanced.m (line 2020): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8386. Data_GUI_Enhanced.m (line 2168): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8387. Data_GUI_Enhanced.m (line 2168): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8388. Data_GUI_Enhanced.m (line 2181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8389. Data_GUI_Enhanced.m (line 2181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8390. Data_GUI_Enhanced.m (line 2194): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8391. Data_GUI_Enhanced.m (line 2206): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8392. Data_GUI_Enhanced.m (line 2206): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8393. Data_GUI_Enhanced.m (line 2262): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8394. Data_GUI_Enhanced.m (line 2262): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8395. Data_GUI_Enhanced.m (line 2313): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8396. Data_GUI_Enhanced.m (line 2313): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8397. Data_GUI_Enhanced.m (line 2360): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8398. Data_GUI_Enhanced.m (line 2360): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8399. Data_GUI_Enhanced.m (line 2390): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8400. Data_GUI_Enhanced.m (line 2390): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8401. Data_GUI_Enhanced.m (line 2412): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8402. Data_GUI_Enhanced.m (line 2412): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8403. Data_GUI_Enhanced.m (line 2433): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8404. Data_GUI_Enhanced.m (line 2433): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8405. Data_GUI_Enhanced.m (line 2458): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8406. Data_GUI_Enhanced.m (line 2458): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8407. Data_GUI_Enhanced.m (line 2483): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8408. Data_GUI_Enhanced.m (line 2483): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8409. Data_GUI_Enhanced.m (line 2498): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8410. Data_GUI_Enhanced.m (line 2510): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8411. Data_GUI_Enhanced.m (line 2510): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8412. Data_GUI_Enhanced.m (line 2516): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8413. Data_GUI_Enhanced.m (line 2516): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8414. Data_GUI_Enhanced.m (line 2529): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8415. Data_GUI_Enhanced.m (line 2530): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8416. Data_GUI_Enhanced.m (line 2531): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8417. Data_GUI_Enhanced.m (line 2542): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8418. Data_GUI_Enhanced.m (line 2543): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8419. Data_GUI_Enhanced.m (line 2548): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8420. Data_GUI_Enhanced.m (line 2549): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8421. Data_GUI_Enhanced.m (line 2589): Value assigned to variable might be unused.\n  8422. Data_GUI_Enhanced.m (line 2804): Value assigned to variable might be unused.\n  8423. Data_GUI_Enhanced.m (line 2850): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  8424. Data_GUI_Enhanced.m (line 2994): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  8425. Data_GUI_Enhanced.m (line 3133): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8426. Data_GUI_Enhanced.m (line 3133): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8427. Data_GUI_Enhanced.m (line 3255): Function might be unused.\n  8428. Data_GUI_Enhanced.m (line 3433): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8429. Data_GUI_Enhanced.m (line 3433): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8430. Data_GUI_Enhanced.m (line 3468): Function might be unused.\n  8431. Data_GUI_Enhanced.m (line 3519): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8432. Data_GUI_Enhanced.m (line 3601): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8433. Data_GUI_Enhanced.m (line 3718): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  8434. Data_GUI_Enhanced.m (line 3766): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8435. Data_GUI_Enhanced.m (line 3766): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8436. Data_GUI_Enhanced.m (line 3837): Value assigned to variable might be unused.\n  8437. Data_GUI_Enhanced.m (line 3953): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8438. Data_GUI_Enhanced.m (line 4262): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  8439. Data_GUI_Enhanced.m (line 4477): This keyword might not be aligned with its matching END on line 4479.\n  8440. Data_GUI_Enhanced.m (line 4552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8441. Data_GUI_Enhanced.m (line 4555): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8442. Data_GUI_Enhanced.m (line 4555): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8443. Data_GUI_Enhanced.m (line 4601): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  8444. Data_GUI_Enhanced.m (line 4653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8445. Data_GUI_Enhanced.m (line 4708): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8446. Data_GUI_Enhanced.m (line 4709): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8447. Data_GUI_Enhanced.m (line 4749): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8448. Data_GUI_Enhanced.m (line 4758): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8449. Data_GUI_Enhanced.m (line 4763): This statement (and possibly following ones) cannot be reached.\n  8450. Data_GUI_Enhanced.m (line 4765): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8451. Data_GUI_Enhanced.m (line 4772): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8452. Data_GUI_Enhanced.m (line 4802): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8453. Data_GUI_Enhanced.m (line 4852): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8454. Data_GUI_Enhanced.m (line 4886): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8455. Data_GUI_Enhanced.m (line 4900): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8456. Data_GUI_Enhanced.m (line 4908): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8457. Data_GUI_Enhanced.m (line 4908): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8458. Data_GUI_Enhanced.m (line 5015): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8459. Data_GUI_Enhanced.m (line 5015): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8460. Data_GUI_Enhanced.m (line 5047): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8461. Data_GUI_Enhanced.m (line 5047): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8462. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\Data_GUI_Enhanced.m: Missing arguments validation block\n  8463. PostProcessingModule.m (line 23): Function might be unused.\n  8464. PostProcessingModule.m (line 144): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8465. PostProcessingModule.m (line 201): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8466. PostProcessingModule.m (line 201): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8467. PostProcessingModule.m (line 234): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8468. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8469. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8470. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8471. PostProcessingModule.m (line 346): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8472. PostProcessingModule.m (line 380): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8473. PostProcessingModule.m (line 386): Value assigned to variable might be unused.\n  8474. PostProcessingModule.m (line 393): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  8475. PostProcessingModule.m (line 407): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8476. PostProcessingModule.m (line 422): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  8477. PostProcessingModule.m (line 621): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8478. PostProcessingModule.m (line 621): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8479. PostProcessingModule.m (line 742): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8480. PostProcessingModule.m (line 742): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8481. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\PostProcessingModule.m: Missing arguments validation block\n  8482. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  8483. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\addModelWorkspaceData.m: Missing arguments validation block\n  8484. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\checkHighMemoryUsage.m: Missing function docstring\n  8485. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\checkHighMemoryUsage.m: Missing arguments validation block\n  8486. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\checkModelConfiguration.m: Missing arguments validation block\n  8487. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\checkStopRequest.m: Missing function docstring\n  8488. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\checkStopRequest.m: Missing arguments validation block\n  8489. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8490. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8491. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8492. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8493. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8494. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8495. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8496. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\check_model_configuration.m: Missing arguments validation block\n  8497. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8498. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8499. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8500. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\checkpoint_recovery.m: Missing arguments validation block\n  8501. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\combineDataSources.m: Missing arguments validation block\n  8502. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  8503. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8504. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8505. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8506. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8507. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8508. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8509. data_extraction_functions.m (line 146): Function might be unused.\n  8510. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8511. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8512. data_extraction_functions.m (line 202): Function might be unused.\n  8513. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8514. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8515. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8516. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8517. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\data_extraction_functions.m: Missing function docstring\n  8518. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\data_extraction_functions.m: Missing arguments validation block\n  8519. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8520. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\endPhase.m: Missing arguments validation block\n  8521. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  8522. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8523. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8524. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8525. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8526. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8527. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8528. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractAllSignalsFromBus.m: Missing arguments validation block\n  8529. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  8530. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractCoefficientsFromTable.m: Missing function docstring\n  8531. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractCoefficientsFromTable.m: Missing arguments validation block\n  8532. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8533. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8534. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8535. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8536. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8537. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8538. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8539. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8540. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8541. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8542. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8543. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8544. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractCombinedSignalBusData.m: Missing function docstring\n  8545. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractCombinedSignalBusData.m: Missing arguments validation block\n  8546. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8547. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8548. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8549. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8550. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8551. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractConstantMatrixData.m: Missing function docstring\n  8552. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractConstantMatrixData.m: Missing arguments validation block\n  8553. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractDataFromField.m: Missing arguments validation block\n  8554. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  8555. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  8556. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractDataWithOptions.m: Missing arguments validation block\n  8557. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  8558. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  8559. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  8560. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  8561. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  8562. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8563. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8564. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8565. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8566. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8567. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8568. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8569. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8570. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8571. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8572. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8573. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8574. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8575. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8576. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8577. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8578. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8579. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8580. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractFromCombinedSignalBus.m: Missing function docstring\n  8581. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  8582. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  8583. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  8584. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  8585. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  8586. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  8587. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  8588. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8589. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8590. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8591. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8592. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8593. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8594. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8595. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8596. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8597. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8598. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8599. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8600. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8601. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8602. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8603. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8604. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  8605. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  8606. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8607. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8608. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractFromNestedStruct.m: Missing arguments validation block\n  8609. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8610. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8611. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8612. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8613. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8614. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8615. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractLogsoutDataFixed.m: Missing function docstring\n  8616. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractLogsoutDataFixed.m: Missing arguments validation block\n  8617. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractSignalsFromSimOut.m: Missing arguments validation block\n  8618. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8619. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8620. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8621. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractSimscapeDataRecursive.m: Missing function docstring\n  8622. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  8623. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractTimeSeriesData.m: Missing function docstring\n  8624. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractTimeSeriesData.m: Missing arguments validation block\n  8625. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8626. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8627. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8628. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8629. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractWorkspaceOutputs.m: Missing function docstring\n  8630. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\extractWorkspaceOutputs.m: Missing arguments validation block\n  8631. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8632. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8633. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  8634. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8635. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8636. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8637. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\fallbackSimlogExtraction.m: Missing function docstring\n  8638. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\fallbackSimlogExtraction.m: Missing arguments validation block\n  8639. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\generateRandomCoefficients.m: Missing arguments validation block\n  8640. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\getMemoryInfo.m: Missing function docstring\n  8641. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\getMemoryInfo.m: Missing arguments validation block\n  8642. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\getMemoryUsage.m: Missing arguments validation block\n  8643. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8644. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8645. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8646. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8647. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8648. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8649. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8650. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  8651. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8652. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8653. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8654. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8655. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8656. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\getPolynomialParameterInfo.m: Missing arguments validation block\n  8657. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\getShortenedJointName.m: Missing arguments validation block\n  8658. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8659. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8660. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  8661. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  8662. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\loadInputFile.m: Missing function docstring\n  8663. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\loadInputFile.m: Missing arguments validation block\n  8664. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\logBatchResult.m: Missing arguments validation block\n  8665. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8666. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\logMessage.m: Missing arguments validation block\n  8667. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\logical2str.m: Missing function docstring\n  8668. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\logical2str.m: Missing arguments validation block\n  8669. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  8670. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\memory_monitor.m: Missing arguments validation block\n  8671. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\mergeTables.m: Missing function docstring\n  8672. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\mergeTables.m: Missing arguments validation block\n  8673. performance_monitor.m (line 11): Persistent variable might be unused.\n  8674. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8675. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8676. performance_monitor.m (line 77): Function might be unused.\n  8677. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8678. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8679. performance_monitor.m (line 118): Function might be unused.\n  8680. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8681. performance_monitor.m (line 133): Function might be unused.\n  8682. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8683. performance_monitor.m (line 149): Function might be unused.\n  8684. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8685. performance_monitor.m (line 162): Function might be unused.\n  8686. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8687. performance_monitor.m (line 175): Function might be unused.\n  8688. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8689. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8690. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8691. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\performance_monitor.m: Missing arguments validation block\n  8692. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  8693. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  8694. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8695. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8696. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\processSimulationOutput.m: Missing function docstring\n  8697. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\processSimulationOutput.m: Missing arguments validation block\n  8698. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8699. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\recordBatchTime.m: Missing arguments validation block\n  8700. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8701. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\recordPhase.m: Missing arguments validation block\n  8702. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\resampleDataToFrequency.m: Missing function docstring\n  8703. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\resampleDataToFrequency.m: Missing arguments validation block\n  8704. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\restoreWorkspace.m: Missing arguments validation block\n  8705. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\runSingleTrial.m: Missing arguments validation block\n  8706. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\setModelParameters.m: Missing arguments validation block\n  8707. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8708. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\setPolynomialCoefficients.m: Missing arguments validation block\n  8709. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\shouldShowDebug.m: Missing function docstring\n  8710. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\shouldShowDebug.m: Missing arguments validation block\n  8711. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\shouldShowNormal.m: Missing function docstring\n  8712. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\shouldShowNormal.m: Missing arguments validation block\n  8713. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\shouldShowVerbose.m: Missing function docstring\n  8714. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\shouldShowVerbose.m: Missing arguments validation block\n  8715. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  8716. traverseSimlogNode.m (line 144): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8717. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\traverseSimlogNode.m: Missing arguments validation block\n  8718. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8719. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8720. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8721. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8722. verbosity_control.m (line 203): Function might be unused.\n  8723. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8724. verbosity_control.m (line 225): Function might be unused.\n  8725. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8726. verbosity_control.m (line 248): Function might be unused.\n  8727. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8728. verbosity_control.m (line 274): Function might be unused.\n  8729. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8730. verbosity_control.m (line 293): Function might be unused.\n  8731. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8732. verbosity_control.m (line 320): Function might be unused.\n  8733. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8734. verbosity_control.m (line 335): Function might be unused.\n  8735. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  8736. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_134935\\verbosity_control.m: Missing arguments validation block\n  8737. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  8738. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  8739. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  8740. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  8741. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8742. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8743. Data_GUI.m (line 725): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8744. Data_GUI.m (line 726): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8745. Data_GUI.m (line 727): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8746. Data_GUI.m (line 728): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8747. Data_GUI.m (line 729): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8748. Data_GUI.m (line 745): Function might be unused.\n  8749. Data_GUI.m (line 970): Function might be unused.\n  8750. Data_GUI.m (line 985): Value assigned to variable might be unused.\n  8751. Data_GUI.m (line 1007): Function might be unused.\n  8752. Data_GUI.m (line 1184): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8753. Data_GUI.m (line 1185): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8754. Data_GUI.m (line 1186): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8755. Data_GUI.m (line 1187): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8756. Data_GUI.m (line 1188): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8757. Data_GUI.m (line 1218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8758. Data_GUI.m (line 1219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8759. Data_GUI.m (line 1220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8760. Data_GUI.m (line 1240): Function might be unused.\n  8761. Data_GUI.m (line 1281): Function might be unused.\n  8762. Data_GUI.m (line 1357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8763. Data_GUI.m (line 1427): Value assigned to variable might be unused.\n  8764. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8765. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8766. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8767. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8768. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8769. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8770. Data_GUI.m (line 1595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8771. Data_GUI.m (line 1596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8772. Data_GUI.m (line 1597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8773. Data_GUI.m (line 1598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8774. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8775. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8776. Data_GUI.m (line 1640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8777. Data_GUI.m (line 1641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8778. Data_GUI.m (line 1642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8779. Data_GUI.m (line 1653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8780. Data_GUI.m (line 1654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8781. Data_GUI.m (line 1659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8782. Data_GUI.m (line 1660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8783. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8784. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8785. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8786. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8787. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8788. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8789. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8790. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8791. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8792. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8793. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8794. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8795. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8796. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8797. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8798. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8799. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8800. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8801. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8802. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8803. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8804. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8805. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8806. Data_GUI.m (line 2027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8807. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8808. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8809. Data_GUI.m (line 2043): Function might be unused.\n  8810. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8811. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8812. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8813. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8814. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8815. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8816. Data_GUI.m (line 2257): Value assigned to variable might be unused.\n  8817. Data_GUI.m (line 2316): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  8818. Data_GUI.m (line 2460): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  8819. Data_GUI.m (line 2599): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8820. Data_GUI.m (line 2599): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8821. Data_GUI.m (line 2721): Function might be unused.\n  8822. Data_GUI.m (line 2898): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8823. Data_GUI.m (line 2898): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8824. Data_GUI.m (line 2930): Function might be unused.\n  8825. Data_GUI.m (line 3081): Function might be unused.\n  8826. Data_GUI.m (line 3159): Function might be unused.\n  8827. Data_GUI.m (line 3174): This keyword might not be aligned with its matching END on line 3185.\n  8828. Data_GUI.m (line 3187): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  8829. Data_GUI.m (line 3403): This keyword might not be aligned with its matching END on line 3405.\n  8830. Data_GUI.m (line 3507): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  8831. Data_GUI.m (line 3542): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8832. Data_GUI.m (line 3576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8833. Data_GUI.m (line 3590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8834. Data_GUI.m (line 3598): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8835. Data_GUI.m (line 3598): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8836. Data_GUI.m (line 3797): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8837. Data_GUI.m (line 3837): Function might be unused.\n  8838. Data_GUI.m (line 3869): Function might be unused.\n  8839. Data_GUI.m (line 3881): Value assigned to variable might be unused.\n  8840. Data_GUI.m (line 3891): Value assigned to variable might be unused.\n  8841. Data_GUI.m (line 3896): Value assigned to variable might be unused.\n  8842. Data_GUI.m (line 3901): Value assigned to variable might be unused.\n  8843. Data_GUI.m (line 3918): Value assigned to variable might be unused.\n  8844. Data_GUI.m (line 4027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8845. Data_GUI.m (line 4028): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8846. Data_GUI.m (line 4035): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8847. Data_GUI.m (line 4036): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8848. Data_GUI.m (line 4049): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8849. Data_GUI.m (line 4051): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8850. Data_GUI.m (line 4073): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8851. Data_GUI.m (line 4074): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8852. Data_GUI.m (line 4094): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8853. Data_GUI.m (line 4095): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8854. Data_GUI.m (line 4107): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8855. Data_GUI.m (line 4108): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8856. Data_GUI.m (line 4126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8857. Data_GUI.m (line 4127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8858. Data_GUI.m (line 4171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8859. Data_GUI.m (line 4172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8860. Data_GUI.m (line 4179): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8861. Data_GUI.m (line 4180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8862. Data_GUI.m (line 4199): Function might be unused.\n  8863. Data_GUI.m (line 4257): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8864. Data_GUI.m (line 4258): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8865. Data_GUI.m (line 4268): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8866. Data_GUI.m (line 4269): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8867. Data_GUI.m (line 4288): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8868. Data_GUI.m (line 4289): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8869. Data_GUI.m (line 4342): Function might be unused.\n  8870. Data_GUI.m (line 4389): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8871. Data_GUI.m (line 4454): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8872. Data_GUI.m (line 4455): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8873. Data_GUI.m (line 4503): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8874. Data_GUI.m (line 4512): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8875. Data_GUI.m (line 4517): This statement (and possibly following ones) cannot be reached.\n  8876. Data_GUI.m (line 4519): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8877. Data_GUI.m (line 4526): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8878. Data_GUI.m (line 4556): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8879. Data_GUI.m (line 4596): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8880. Data_GUI.m (line 4619): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8881. Data_GUI.m (line 4630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8882. Data_GUI.m (line 4642): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8883. Data_GUI.m (line 4655): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8884. Data_GUI.m (line 4749): Function might be unused.\n  8885. Data_GUI.m (line 4755): Value assigned to variable might be unused.\n  8886. Data_GUI.m (line 4783): Value assigned to variable might be unused.\n  8887. Data_GUI.m (line 4808): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8888. Data_GUI.m (line 4830): Value assigned to variable might be unused.\n  8889. Data_GUI.m (line 4864): Value assigned to variable might be unused.\n  8890. Data_GUI.m (line 4893): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8891. Data_GUI.m (line 4926): Function might be unused.\n  8892. Data_GUI.m (line 4970): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8893. Data_GUI.m (line 4971): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8894. Data_GUI.m (line 4994): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8895. Data_GUI.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8896. Data_GUI.m (line 5015): Function might be unused.\n  8897. Data_GUI.m (line 5092): Function might be unused.\n  8898. Data_GUI.m (line 5109): Value assigned to variable might be unused.\n  8899. Data_GUI.m (line 5167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8900. Data_GUI.m (line 5168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8901. Data_GUI.m (line 5172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8902. Data_GUI.m (line 5173): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8903. Data_GUI.m (line 5191): Function might be unused.\n  8904. Data_GUI.m (line 5249): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8905. Data_GUI.m (line 5249): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8906. Data_GUI.m (line 5281): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8907. Data_GUI.m (line 5281): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8908. Data_GUI.m (line 5444): Function might be unused.\n  8909. Data_GUI.m (line 5474): Function might be unused.\n  8910. Data_GUI.m (line 5565): Function might be unused.\n  8911. Data_GUI.m (line 5603): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8912. Data_GUI.m (line 5634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8913. Data_GUI.m (line 5670): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8914. Data_GUI.m (line 5672): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8915. Data_GUI.m (line 5672): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8916. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\Data_GUI.m: Missing arguments validation block\n  8917. Data_GUI_Enhanced.m (line 628): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8918. Data_GUI_Enhanced.m (line 628): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8919. Data_GUI_Enhanced.m (line 661): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8920. Data_GUI_Enhanced.m (line 726): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  8921. Data_GUI_Enhanced.m (line 917): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8922. Data_GUI_Enhanced.m (line 917): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8923. Data_GUI_Enhanced.m (line 923): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8924. Data_GUI_Enhanced.m (line 923): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8925. Data_GUI_Enhanced.m (line 934): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8926. Data_GUI_Enhanced.m (line 934): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8927. Data_GUI_Enhanced.m (line 950): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8928. Data_GUI_Enhanced.m (line 987): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8929. Data_GUI_Enhanced.m (line 987): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8930. Data_GUI_Enhanced.m (line 1138): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8931. Data_GUI_Enhanced.m (line 1138): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8932. Data_GUI_Enhanced.m (line 1147): Value assigned to variable might be unused.\n  8933. Data_GUI_Enhanced.m (line 1152): Value assigned to variable might be unused.\n  8934. Data_GUI_Enhanced.m (line 1179): Value assigned to variable might be unused.\n  8935. Data_GUI_Enhanced.m (line 1279): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8936. Data_GUI_Enhanced.m (line 1279): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8937. Data_GUI_Enhanced.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8938. Data_GUI_Enhanced.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8939. Data_GUI_Enhanced.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8940. Data_GUI_Enhanced.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8941. Data_GUI_Enhanced.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8942. Data_GUI_Enhanced.m (line 1926): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8943. Data_GUI_Enhanced.m (line 1927): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8944. Data_GUI_Enhanced.m (line 1928): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8945. Data_GUI_Enhanced.m (line 1929): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8946. Data_GUI_Enhanced.m (line 1930): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8947. Data_GUI_Enhanced.m (line 1960): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8948. Data_GUI_Enhanced.m (line 1961): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8949. Data_GUI_Enhanced.m (line 1962): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8950. Data_GUI_Enhanced.m (line 1995): Value assigned to variable might be unused.\n  8951. Data_GUI_Enhanced.m (line 2020): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8952. Data_GUI_Enhanced.m (line 2168): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8953. Data_GUI_Enhanced.m (line 2168): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8954. Data_GUI_Enhanced.m (line 2181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8955. Data_GUI_Enhanced.m (line 2181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8956. Data_GUI_Enhanced.m (line 2194): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8957. Data_GUI_Enhanced.m (line 2206): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8958. Data_GUI_Enhanced.m (line 2206): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8959. Data_GUI_Enhanced.m (line 2262): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8960. Data_GUI_Enhanced.m (line 2262): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8961. Data_GUI_Enhanced.m (line 2313): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8962. Data_GUI_Enhanced.m (line 2313): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8963. Data_GUI_Enhanced.m (line 2360): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8964. Data_GUI_Enhanced.m (line 2360): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8965. Data_GUI_Enhanced.m (line 2390): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8966. Data_GUI_Enhanced.m (line 2390): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8967. Data_GUI_Enhanced.m (line 2412): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8968. Data_GUI_Enhanced.m (line 2412): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8969. Data_GUI_Enhanced.m (line 2433): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8970. Data_GUI_Enhanced.m (line 2433): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8971. Data_GUI_Enhanced.m (line 2458): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8972. Data_GUI_Enhanced.m (line 2458): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8973. Data_GUI_Enhanced.m (line 2483): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8974. Data_GUI_Enhanced.m (line 2483): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8975. Data_GUI_Enhanced.m (line 2498): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8976. Data_GUI_Enhanced.m (line 2510): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8977. Data_GUI_Enhanced.m (line 2510): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8978. Data_GUI_Enhanced.m (line 2516): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8979. Data_GUI_Enhanced.m (line 2516): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8980. Data_GUI_Enhanced.m (line 2529): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8981. Data_GUI_Enhanced.m (line 2530): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8982. Data_GUI_Enhanced.m (line 2531): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  8983. Data_GUI_Enhanced.m (line 2542): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8984. Data_GUI_Enhanced.m (line 2543): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8985. Data_GUI_Enhanced.m (line 2548): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8986. Data_GUI_Enhanced.m (line 2549): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  8987. Data_GUI_Enhanced.m (line 2589): Value assigned to variable might be unused.\n  8988. Data_GUI_Enhanced.m (line 2778): Value assigned to variable might be unused.\n  8989. Data_GUI_Enhanced.m (line 2824): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  8990. Data_GUI_Enhanced.m (line 2968): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  8991. Data_GUI_Enhanced.m (line 3107): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8992. Data_GUI_Enhanced.m (line 3107): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8993. Data_GUI_Enhanced.m (line 3229): Function might be unused.\n  8994. Data_GUI_Enhanced.m (line 3407): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  8995. Data_GUI_Enhanced.m (line 3407): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  8996. Data_GUI_Enhanced.m (line 3442): Function might be unused.\n  8997. Data_GUI_Enhanced.m (line 3493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8998. Data_GUI_Enhanced.m (line 3575): Input argument might be unused. Consider replacing the argument with ~ instead.\n  8999. Data_GUI_Enhanced.m (line 3692): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  9000. Data_GUI_Enhanced.m (line 3740): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9001. Data_GUI_Enhanced.m (line 3740): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9002. Data_GUI_Enhanced.m (line 3811): Value assigned to variable might be unused.\n  9003. Data_GUI_Enhanced.m (line 3927): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9004. Data_GUI_Enhanced.m (line 4236): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  9005. Data_GUI_Enhanced.m (line 4451): This keyword might not be aligned with its matching END on line 4453.\n  9006. Data_GUI_Enhanced.m (line 4526): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9007. Data_GUI_Enhanced.m (line 4529): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9008. Data_GUI_Enhanced.m (line 4529): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9009. Data_GUI_Enhanced.m (line 4575): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9010. Data_GUI_Enhanced.m (line 4627): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9011. Data_GUI_Enhanced.m (line 4682): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9012. Data_GUI_Enhanced.m (line 4683): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9013. Data_GUI_Enhanced.m (line 4723): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9014. Data_GUI_Enhanced.m (line 4732): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9015. Data_GUI_Enhanced.m (line 4737): This statement (and possibly following ones) cannot be reached.\n  9016. Data_GUI_Enhanced.m (line 4739): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9017. Data_GUI_Enhanced.m (line 4746): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9018. Data_GUI_Enhanced.m (line 4776): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9019. Data_GUI_Enhanced.m (line 4826): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9020. Data_GUI_Enhanced.m (line 4860): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9021. Data_GUI_Enhanced.m (line 4874): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9022. Data_GUI_Enhanced.m (line 4882): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9023. Data_GUI_Enhanced.m (line 4882): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9024. Data_GUI_Enhanced.m (line 4989): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9025. Data_GUI_Enhanced.m (line 4989): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9026. Data_GUI_Enhanced.m (line 5021): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9027. Data_GUI_Enhanced.m (line 5021): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9028. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\Data_GUI_Enhanced.m: Missing arguments validation block\n  9029. PostProcessingModule.m (line 23): Function might be unused.\n  9030. PostProcessingModule.m (line 144): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9031. PostProcessingModule.m (line 201): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9032. PostProcessingModule.m (line 201): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9033. PostProcessingModule.m (line 234): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9034. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9035. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9036. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9037. PostProcessingModule.m (line 346): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9038. PostProcessingModule.m (line 380): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9039. PostProcessingModule.m (line 386): Value assigned to variable might be unused.\n  9040. PostProcessingModule.m (line 393): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9041. PostProcessingModule.m (line 407): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9042. PostProcessingModule.m (line 422): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9043. PostProcessingModule.m (line 621): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9044. PostProcessingModule.m (line 621): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9045. PostProcessingModule.m (line 742): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9046. PostProcessingModule.m (line 742): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9047. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\PostProcessingModule.m: Missing arguments validation block\n  9048. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  9049. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\addModelWorkspaceData.m: Missing arguments validation block\n  9050. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\checkHighMemoryUsage.m: Missing function docstring\n  9051. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\checkHighMemoryUsage.m: Missing arguments validation block\n  9052. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\checkModelConfiguration.m: Missing arguments validation block\n  9053. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\checkStopRequest.m: Missing function docstring\n  9054. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\checkStopRequest.m: Missing arguments validation block\n  9055. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9056. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9057. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9058. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9059. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9060. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9061. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9062. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\check_model_configuration.m: Missing arguments validation block\n  9063. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9064. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9065. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9066. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\checkpoint_recovery.m: Missing arguments validation block\n  9067. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\combineDataSources.m: Missing arguments validation block\n  9068. compare_headers_detailed.m (line 50): Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.\n  9069. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  9070. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9071. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9072. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9073. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9074. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9075. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9076. data_extraction_functions.m (line 146): Function might be unused.\n  9077. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9078. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9079. data_extraction_functions.m (line 202): Function might be unused.\n  9080. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9081. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9082. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9083. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9084. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\data_extraction_functions.m: Missing function docstring\n  9085. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\data_extraction_functions.m: Missing arguments validation block\n  9086. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9087. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\endPhase.m: Missing arguments validation block\n  9088. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  9089. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9090. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9091. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9092. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9093. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9094. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9095. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractAllSignalsFromBus.m: Missing arguments validation block\n  9096. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9097. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractCoefficientsFromTable.m: Missing function docstring\n  9098. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractCoefficientsFromTable.m: Missing arguments validation block\n  9099. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9100. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9101. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9102. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9103. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9104. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9105. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9106. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9107. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9108. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9109. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9110. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9111. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractCombinedSignalBusData.m: Missing function docstring\n  9112. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractCombinedSignalBusData.m: Missing arguments validation block\n  9113. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9114. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9115. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9116. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9117. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9118. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractConstantMatrixData.m: Missing function docstring\n  9119. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractConstantMatrixData.m: Missing arguments validation block\n  9120. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractDataFromField.m: Missing arguments validation block\n  9121. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  9122. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  9123. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractDataWithOptions.m: Missing arguments validation block\n  9124. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  9125. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  9126. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  9127. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  9128. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  9129. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9130. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9131. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9132. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9133. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9134. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9135. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9136. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9137. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9138. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9139. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9140. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9141. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9142. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9143. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9144. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9145. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9146. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9147. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractFromCombinedSignalBus.m: Missing function docstring\n  9148. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  9149. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  9150. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  9151. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  9152. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  9153. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  9154. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  9155. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9156. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9157. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9158. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9159. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9160. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9161. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9162. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9163. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9164. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9165. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9166. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9167. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9168. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9169. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9170. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9171. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  9172. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  9173. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9174. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9175. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractFromNestedStruct.m: Missing arguments validation block\n  9176. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9177. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9178. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9179. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9180. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9181. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9182. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractLogsoutDataFixed.m: Missing function docstring\n  9183. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractLogsoutDataFixed.m: Missing arguments validation block\n  9184. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractSignalsFromSimOut.m: Missing arguments validation block\n  9185. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9186. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9187. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9188. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractSimscapeDataRecursive.m: Missing function docstring\n  9189. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  9190. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractTimeSeriesData.m: Missing function docstring\n  9191. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractTimeSeriesData.m: Missing arguments validation block\n  9192. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9193. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9194. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9195. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9196. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractWorkspaceOutputs.m: Missing function docstring\n  9197. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\extractWorkspaceOutputs.m: Missing arguments validation block\n  9198. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9199. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9200. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  9201. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9202. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9203. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9204. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\fallbackSimlogExtraction.m: Missing function docstring\n  9205. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\fallbackSimlogExtraction.m: Missing arguments validation block\n  9206. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\generateRandomCoefficients.m: Missing arguments validation block\n  9207. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\getMemoryInfo.m: Missing function docstring\n  9208. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\getMemoryInfo.m: Missing arguments validation block\n  9209. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\getMemoryUsage.m: Missing arguments validation block\n  9210. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9211. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9212. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9213. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9214. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9215. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9216. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9217. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  9218. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\getPolynomialParameterInfo.m: Missing arguments validation block\n  9219. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\getShortenedJointName.m: Missing arguments validation block\n  9220. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9221. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9222. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  9223. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  9224. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\loadInputFile.m: Missing function docstring\n  9225. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\loadInputFile.m: Missing arguments validation block\n  9226. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\logBatchResult.m: Missing arguments validation block\n  9227. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9228. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\logMessage.m: Missing arguments validation block\n  9229. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\logical2str.m: Missing function docstring\n  9230. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\logical2str.m: Missing arguments validation block\n  9231. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  9232. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\memory_monitor.m: Missing arguments validation block\n  9233. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\mergeTables.m: Missing function docstring\n  9234. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\mergeTables.m: Missing arguments validation block\n  9235. performance_monitor.m (line 11): Persistent variable might be unused.\n  9236. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9237. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9238. performance_monitor.m (line 77): Function might be unused.\n  9239. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9240. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9241. performance_monitor.m (line 118): Function might be unused.\n  9242. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9243. performance_monitor.m (line 133): Function might be unused.\n  9244. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9245. performance_monitor.m (line 149): Function might be unused.\n  9246. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9247. performance_monitor.m (line 162): Function might be unused.\n  9248. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9249. performance_monitor.m (line 175): Function might be unused.\n  9250. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9251. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9252. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9253. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\performance_monitor.m: Missing arguments validation block\n  9254. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  9255. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  9256. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9257. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9258. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\processSimulationOutput.m: Missing function docstring\n  9259. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\processSimulationOutput.m: Missing arguments validation block\n  9260. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9261. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\recordBatchTime.m: Missing arguments validation block\n  9262. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9263. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\recordPhase.m: Missing arguments validation block\n  9264. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\resampleDataToFrequency.m: Missing function docstring\n  9265. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\resampleDataToFrequency.m: Missing arguments validation block\n  9266. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\restoreWorkspace.m: Missing arguments validation block\n  9267. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\runSingleTrial.m: Missing arguments validation block\n  9268. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\setModelParameters.m: Missing arguments validation block\n  9269. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9270. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\setPolynomialCoefficients.m: Missing arguments validation block\n  9271. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\shouldShowDebug.m: Missing function docstring\n  9272. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\shouldShowDebug.m: Missing arguments validation block\n  9273. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\shouldShowNormal.m: Missing function docstring\n  9274. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\shouldShowNormal.m: Missing arguments validation block\n  9275. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\shouldShowVerbose.m: Missing function docstring\n  9276. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\shouldShowVerbose.m: Missing arguments validation block\n  9277. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  9278. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9279. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\traverseSimlogNode.m: Missing arguments validation block\n  9280. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9281. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9282. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9283. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9284. verbosity_control.m (line 203): Function might be unused.\n  9285. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9286. verbosity_control.m (line 225): Function might be unused.\n  9287. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9288. verbosity_control.m (line 248): Function might be unused.\n  9289. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9290. verbosity_control.m (line 274): Function might be unused.\n  9291. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9292. verbosity_control.m (line 293): Function might be unused.\n  9293. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9294. verbosity_control.m (line 320): Function might be unused.\n  9295. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9296. verbosity_control.m (line 335): Function might be unused.\n  9297. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9298. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250803_155252\\verbosity_control.m: Missing arguments validation block\n  9299. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  9300. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  9301. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  9302. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  9303. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9304. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9305. Data_GUI.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9306. Data_GUI.m (line 739): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9307. Data_GUI.m (line 740): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9308. Data_GUI.m (line 741): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9309. Data_GUI.m (line 742): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9310. Data_GUI.m (line 758): Function might be unused.\n  9311. Data_GUI.m (line 983): Function might be unused.\n  9312. Data_GUI.m (line 998): Value assigned to variable might be unused.\n  9313. Data_GUI.m (line 1020): Function might be unused.\n  9314. Data_GUI.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9315. Data_GUI.m (line 1198): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9316. Data_GUI.m (line 1199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9317. Data_GUI.m (line 1200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9318. Data_GUI.m (line 1201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9319. Data_GUI.m (line 1231): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9320. Data_GUI.m (line 1232): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9321. Data_GUI.m (line 1233): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9322. Data_GUI.m (line 1253): Function might be unused.\n  9323. Data_GUI.m (line 1294): Function might be unused.\n  9324. Data_GUI.m (line 1370): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9325. Data_GUI.m (line 1440): Value assigned to variable might be unused.\n  9326. Data_GUI.m (line 1527): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9327. Data_GUI.m (line 1527): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9328. Data_GUI.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9329. Data_GUI.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9330. Data_GUI.m (line 1595): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9331. Data_GUI.m (line 1595): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9332. Data_GUI.m (line 1608): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9333. Data_GUI.m (line 1609): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9334. Data_GUI.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9335. Data_GUI.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9336. Data_GUI.m (line 1640): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9337. Data_GUI.m (line 1640): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9338. Data_GUI.m (line 1653): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9339. Data_GUI.m (line 1654): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9340. Data_GUI.m (line 1655): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9341. Data_GUI.m (line 1666): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9342. Data_GUI.m (line 1667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9343. Data_GUI.m (line 1672): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9344. Data_GUI.m (line 1673): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9345. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9346. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9347. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9348. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9349. Data_GUI.m (line 1738): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9350. Data_GUI.m (line 1750): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9351. Data_GUI.m (line 1750): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9352. Data_GUI.m (line 1806): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9353. Data_GUI.m (line 1806): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9354. Data_GUI.m (line 1856): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9355. Data_GUI.m (line 1856): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9356. Data_GUI.m (line 1903): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9357. Data_GUI.m (line 1903): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9358. Data_GUI.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9359. Data_GUI.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9360. Data_GUI.m (line 1955): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9361. Data_GUI.m (line 1955): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9362. Data_GUI.m (line 1976): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9363. Data_GUI.m (line 1976): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9364. Data_GUI.m (line 2000): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9365. Data_GUI.m (line 2000): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9366. Data_GUI.m (line 2025): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9367. Data_GUI.m (line 2025): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9368. Data_GUI.m (line 2040): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9369. Data_GUI.m (line 2051): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9370. Data_GUI.m (line 2051): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9371. Data_GUI.m (line 2056): Function might be unused.\n  9372. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9373. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9374. Data_GUI.m (line 2069): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9375. Data_GUI.m (line 2069): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9376. Data_GUI.m (line 2083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9377. Data_GUI.m (line 2083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9378. Data_GUI.m (line 2284): Value assigned to variable might be unused.\n  9379. Data_GUI.m (line 2343): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9380. Data_GUI.m (line 2487): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  9381. Data_GUI.m (line 2626): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9382. Data_GUI.m (line 2626): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9383. Data_GUI.m (line 2748): Function might be unused.\n  9384. Data_GUI.m (line 2925): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9385. Data_GUI.m (line 2925): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9386. Data_GUI.m (line 2957): Function might be unused.\n  9387. Data_GUI.m (line 3108): Function might be unused.\n  9388. Data_GUI.m (line 3186): Function might be unused.\n  9389. Data_GUI.m (line 3201): This keyword might not be aligned with its matching END on line 3212.\n  9390. Data_GUI.m (line 3214): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  9391. Data_GUI.m (line 3430): This keyword might not be aligned with its matching END on line 3432.\n  9392. Data_GUI.m (line 3534): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9393. Data_GUI.m (line 3569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9394. Data_GUI.m (line 3603): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9395. Data_GUI.m (line 3617): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9396. Data_GUI.m (line 3625): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9397. Data_GUI.m (line 3625): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9398. Data_GUI.m (line 3835): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9399. Data_GUI.m (line 3875): Function might be unused.\n  9400. Data_GUI.m (line 3907): Function might be unused.\n  9401. Data_GUI.m (line 3919): Value assigned to variable might be unused.\n  9402. Data_GUI.m (line 3929): Value assigned to variable might be unused.\n  9403. Data_GUI.m (line 3934): Value assigned to variable might be unused.\n  9404. Data_GUI.m (line 3939): Value assigned to variable might be unused.\n  9405. Data_GUI.m (line 3956): Value assigned to variable might be unused.\n  9406. Data_GUI.m (line 4065): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9407. Data_GUI.m (line 4066): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9408. Data_GUI.m (line 4073): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9409. Data_GUI.m (line 4074): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9410. Data_GUI.m (line 4087): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9411. Data_GUI.m (line 4089): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9412. Data_GUI.m (line 4111): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9413. Data_GUI.m (line 4112): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9414. Data_GUI.m (line 4132): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9415. Data_GUI.m (line 4133): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9416. Data_GUI.m (line 4145): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9417. Data_GUI.m (line 4146): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9418. Data_GUI.m (line 4164): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9419. Data_GUI.m (line 4165): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9420. Data_GUI.m (line 4209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9421. Data_GUI.m (line 4210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9422. Data_GUI.m (line 4217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9423. Data_GUI.m (line 4218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9424. Data_GUI.m (line 4237): Function might be unused.\n  9425. Data_GUI.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9426. Data_GUI.m (line 4296): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9427. Data_GUI.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9428. Data_GUI.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9429. Data_GUI.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9430. Data_GUI.m (line 4327): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9431. Data_GUI.m (line 4380): Function might be unused.\n  9432. Data_GUI.m (line 4427): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9433. Data_GUI.m (line 4492): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9434. Data_GUI.m (line 4493): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9435. Data_GUI.m (line 4541): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9436. Data_GUI.m (line 4550): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9437. Data_GUI.m (line 4555): This statement (and possibly following ones) cannot be reached.\n  9438. Data_GUI.m (line 4557): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9439. Data_GUI.m (line 4564): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9440. Data_GUI.m (line 4594): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9441. Data_GUI.m (line 4634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9442. Data_GUI.m (line 4657): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9443. Data_GUI.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9444. Data_GUI.m (line 4680): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9445. Data_GUI.m (line 4693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9446. Data_GUI.m (line 4787): Function might be unused.\n  9447. Data_GUI.m (line 4793): Value assigned to variable might be unused.\n  9448. Data_GUI.m (line 4821): Value assigned to variable might be unused.\n  9449. Data_GUI.m (line 4846): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9450. Data_GUI.m (line 4868): Value assigned to variable might be unused.\n  9451. Data_GUI.m (line 4902): Value assigned to variable might be unused.\n  9452. Data_GUI.m (line 4931): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9453. Data_GUI.m (line 4964): Function might be unused.\n  9454. Data_GUI.m (line 5008): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9455. Data_GUI.m (line 5009): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9456. Data_GUI.m (line 5032): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9457. Data_GUI.m (line 5033): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9458. Data_GUI.m (line 5053): Function might be unused.\n  9459. Data_GUI.m (line 5130): Function might be unused.\n  9460. Data_GUI.m (line 5147): Value assigned to variable might be unused.\n  9461. Data_GUI.m (line 5205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9462. Data_GUI.m (line 5206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9463. Data_GUI.m (line 5210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9464. Data_GUI.m (line 5211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9465. Data_GUI.m (line 5229): Function might be unused.\n  9466. Data_GUI.m (line 5287): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9467. Data_GUI.m (line 5287): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9468. Data_GUI.m (line 5319): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9469. Data_GUI.m (line 5319): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9470. Data_GUI.m (line 5482): Function might be unused.\n  9471. Data_GUI.m (line 5512): Function might be unused.\n  9472. Data_GUI.m (line 5603): Function might be unused.\n  9473. Data_GUI.m (line 5641): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9474. Data_GUI.m (line 5672): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9475. Data_GUI.m (line 5708): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9476. Data_GUI.m (line 5710): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9477. Data_GUI.m (line 5710): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9478. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\Data_GUI.m: Missing arguments validation block\n  9479. Data_GUI_Enhanced.m (line 314): Function might be unused.\n  9480. Data_GUI_Enhanced.m (line 405): Value assigned to variable might be unused.\n  9481. Data_GUI_Enhanced.m (line 627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9482. Data_GUI_Enhanced.m (line 651): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9483. Data_GUI_Enhanced.m (line 663): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9484. Data_GUI_Enhanced.m (line 687): Value assigned to variable might be unused.\n  9485. Data_GUI_Enhanced.m (line 939): Value assigned to variable might be unused.\n  9486. Data_GUI_Enhanced.m (line 960): Value assigned to variable might be unused.\n  9487. Data_GUI_Enhanced.m (line 1134): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9488. Data_GUI_Enhanced.m (line 1134): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9489. Data_GUI_Enhanced.m (line 1167): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9490. Data_GUI_Enhanced.m (line 1248): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  9491. Data_GUI_Enhanced.m (line 1466): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9492. Data_GUI_Enhanced.m (line 1488): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9493. Data_GUI_Enhanced.m (line 1488): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9494. Data_GUI_Enhanced.m (line 1494): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9495. Data_GUI_Enhanced.m (line 1494): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9496. Data_GUI_Enhanced.m (line 1505): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9497. Data_GUI_Enhanced.m (line 1505): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9498. Data_GUI_Enhanced.m (line 1521): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9499. Data_GUI_Enhanced.m (line 1558): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9500. Data_GUI_Enhanced.m (line 1558): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9501. Data_GUI_Enhanced.m (line 1718): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9502. Data_GUI_Enhanced.m (line 1718): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9503. Data_GUI_Enhanced.m (line 1727): Value assigned to variable might be unused.\n  9504. Data_GUI_Enhanced.m (line 1732): Value assigned to variable might be unused.\n  9505. Data_GUI_Enhanced.m (line 1759): Value assigned to variable might be unused.\n  9506. Data_GUI_Enhanced.m (line 1865): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9507. Data_GUI_Enhanced.m (line 1865): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9508. Data_GUI_Enhanced.m (line 2267): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9509. Data_GUI_Enhanced.m (line 2268): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9510. Data_GUI_Enhanced.m (line 2269): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9511. Data_GUI_Enhanced.m (line 2270): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9512. Data_GUI_Enhanced.m (line 2271): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9513. Data_GUI_Enhanced.m (line 2532): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9514. Data_GUI_Enhanced.m (line 2533): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9515. Data_GUI_Enhanced.m (line 2534): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9516. Data_GUI_Enhanced.m (line 2535): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9517. Data_GUI_Enhanced.m (line 2536): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9518. Data_GUI_Enhanced.m (line 2568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9519. Data_GUI_Enhanced.m (line 2569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9520. Data_GUI_Enhanced.m (line 2570): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9521. Data_GUI_Enhanced.m (line 2603): Value assigned to variable might be unused.\n  9522. Data_GUI_Enhanced.m (line 2628): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9523. Data_GUI_Enhanced.m (line 2776): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9524. Data_GUI_Enhanced.m (line 2776): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9525. Data_GUI_Enhanced.m (line 2789): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9526. Data_GUI_Enhanced.m (line 2789): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9527. Data_GUI_Enhanced.m (line 2802): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9528. Data_GUI_Enhanced.m (line 2814): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9529. Data_GUI_Enhanced.m (line 2814): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9530. Data_GUI_Enhanced.m (line 2870): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9531. Data_GUI_Enhanced.m (line 2870): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9532. Data_GUI_Enhanced.m (line 2921): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9533. Data_GUI_Enhanced.m (line 2921): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9534. Data_GUI_Enhanced.m (line 2968): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9535. Data_GUI_Enhanced.m (line 2968): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9536. Data_GUI_Enhanced.m (line 2998): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9537. Data_GUI_Enhanced.m (line 2998): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9538. Data_GUI_Enhanced.m (line 3020): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9539. Data_GUI_Enhanced.m (line 3020): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9540. Data_GUI_Enhanced.m (line 3041): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9541. Data_GUI_Enhanced.m (line 3041): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9542. Data_GUI_Enhanced.m (line 3066): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9543. Data_GUI_Enhanced.m (line 3066): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9544. Data_GUI_Enhanced.m (line 3091): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9545. Data_GUI_Enhanced.m (line 3091): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9546. Data_GUI_Enhanced.m (line 3106): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9547. Data_GUI_Enhanced.m (line 3118): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9548. Data_GUI_Enhanced.m (line 3118): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9549. Data_GUI_Enhanced.m (line 3124): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9550. Data_GUI_Enhanced.m (line 3124): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9551. Data_GUI_Enhanced.m (line 3137): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9552. Data_GUI_Enhanced.m (line 3138): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9553. Data_GUI_Enhanced.m (line 3139): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9554. Data_GUI_Enhanced.m (line 3150): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9555. Data_GUI_Enhanced.m (line 3151): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9556. Data_GUI_Enhanced.m (line 3156): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9557. Data_GUI_Enhanced.m (line 3157): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9558. Data_GUI_Enhanced.m (line 3197): Value assigned to variable might be unused.\n  9559. Data_GUI_Enhanced.m (line 3400): Value assigned to variable might be unused.\n  9560. Data_GUI_Enhanced.m (line 3446): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9561. Data_GUI_Enhanced.m (line 3590): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  9562. Data_GUI_Enhanced.m (line 3729): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9563. Data_GUI_Enhanced.m (line 3729): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9564. Data_GUI_Enhanced.m (line 3851): Function might be unused.\n  9565. Data_GUI_Enhanced.m (line 4029): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9566. Data_GUI_Enhanced.m (line 4029): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9567. Data_GUI_Enhanced.m (line 4064): Function might be unused.\n  9568. Data_GUI_Enhanced.m (line 4115): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9569. Data_GUI_Enhanced.m (line 4197): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9570. Data_GUI_Enhanced.m (line 4314): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  9571. Data_GUI_Enhanced.m (line 4362): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9572. Data_GUI_Enhanced.m (line 4362): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9573. Data_GUI_Enhanced.m (line 4433): Value assigned to variable might be unused.\n  9574. Data_GUI_Enhanced.m (line 4549): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9575. Data_GUI_Enhanced.m (line 4858): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  9576. Data_GUI_Enhanced.m (line 5073): This keyword might not be aligned with its matching END on line 5075.\n  9577. Data_GUI_Enhanced.m (line 5149): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9578. Data_GUI_Enhanced.m (line 5152): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9579. Data_GUI_Enhanced.m (line 5152): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9580. Data_GUI_Enhanced.m (line 5198): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9581. Data_GUI_Enhanced.m (line 5250): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9582. Data_GUI_Enhanced.m (line 5305): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9583. Data_GUI_Enhanced.m (line 5306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9584. Data_GUI_Enhanced.m (line 5346): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9585. Data_GUI_Enhanced.m (line 5355): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9586. Data_GUI_Enhanced.m (line 5360): This statement (and possibly following ones) cannot be reached.\n  9587. Data_GUI_Enhanced.m (line 5362): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9588. Data_GUI_Enhanced.m (line 5369): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9589. Data_GUI_Enhanced.m (line 5399): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9590. Data_GUI_Enhanced.m (line 5449): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9591. Data_GUI_Enhanced.m (line 5483): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9592. Data_GUI_Enhanced.m (line 5497): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9593. Data_GUI_Enhanced.m (line 5505): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9594. Data_GUI_Enhanced.m (line 5505): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9595. Data_GUI_Enhanced.m (line 5612): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9596. Data_GUI_Enhanced.m (line 5612): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9597. Data_GUI_Enhanced.m (line 5644): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9598. Data_GUI_Enhanced.m (line 5644): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9599. Data_GUI_Enhanced.m (line 5811): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9600. Data_GUI_Enhanced.m (line 5825): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9601. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\Data_GUI_Enhanced.m: Missing arguments validation block\n  9602. PostProcessingModule.m (line 23): Function might be unused.\n  9603. PostProcessingModule.m (line 144): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9604. PostProcessingModule.m (line 201): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9605. PostProcessingModule.m (line 201): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9606. PostProcessingModule.m (line 234): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9607. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9608. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9609. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9610. PostProcessingModule.m (line 412): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9611. PostProcessingModule.m (line 446): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9612. PostProcessingModule.m (line 452): Value assigned to variable might be unused.\n  9613. PostProcessingModule.m (line 459): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9614. PostProcessingModule.m (line 473): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9615. PostProcessingModule.m (line 488): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9616. PostProcessingModule.m (line 687): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9617. PostProcessingModule.m (line 687): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9618. PostProcessingModule.m (line 808): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9619. PostProcessingModule.m (line 808): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9620. PostProcessingModule.m (line 812): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9621. PostProcessingModule.m (line 833): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9622. PostProcessingModule.m (line 841): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9623. PostProcessingModule.m (line 846): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9624. PostProcessingModule.m (line 869): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9625. PostProcessingModule.m (line 877): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9626. PostProcessingModule.m (line 882): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9627. PostProcessingModule.m (line 902): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9628. PostProcessingModule.m (line 910): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9629. PostProcessingModule.m (line 915): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9630. PostProcessingModule.m (line 937): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9631. PostProcessingModule.m (line 945): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9632. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\PostProcessingModule.m: Missing arguments validation block\n  9633. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  9634. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\addModelWorkspaceData.m: Missing arguments validation block\n  9635. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\calculateForceMoments.m: Missing arguments validation block\n  9636. calculateJointPowerWork.m (line 128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9637. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\calculateJointPowerWork.m: Missing arguments validation block\n  9638. calculateWorkPowerAndGranularAngularImpulse3D.m (line 93): Value assigned to variable might be unused.\n  9639. calculateWorkPowerAndGranularAngularImpulse3D.m (line 94): Value assigned to variable might be unused.\n  9640. calculateWorkPowerAndGranularAngularImpulse3D.m (line 234): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9641. calculateWorkPowerAndGranularAngularImpulse3D.m (line 424): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9642. calculateWorkPowerAndGranularAngularImpulse3D.m (line 436): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9643. calculateWorkPowerAndGranularAngularImpulse3D.m (line 446): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9644. calculateWorkPowerAndGranularAngularImpulse3D.m (line 564): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9645. calculateWorkPowerAndGranularAngularImpulse3D.m (line 642): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9646. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\calculateWorkPowerAndGranularAngularImpulse3D.m: Missing arguments validation block\n  9647. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\checkHighMemoryUsage.m: Missing function docstring\n  9648. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\checkHighMemoryUsage.m: Missing arguments validation block\n  9649. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\checkModelConfiguration.m: Missing arguments validation block\n  9650. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\checkStopRequest.m: Missing function docstring\n  9651. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\checkStopRequest.m: Missing arguments validation block\n  9652. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9653. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9654. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9655. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9656. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9657. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9658. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9659. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\check_model_configuration.m: Missing arguments validation block\n  9660. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9661. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9662. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9663. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\checkpoint_recovery.m: Missing arguments validation block\n  9664. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\combineDataSources.m: Missing arguments validation block\n  9665. compare_headers_detailed.m (line 50): Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.\n  9666. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\compressData.m: Missing arguments validation block\n  9667. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  9668. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9669. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9670. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9671. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9672. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9673. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9674. data_extraction_functions.m (line 146): Function might be unused.\n  9675. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9676. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9677. data_extraction_functions.m (line 202): Function might be unused.\n  9678. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9679. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9680. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9681. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9682. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\data_extraction_functions.m: Missing function docstring\n  9683. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\data_extraction_functions.m: Missing arguments validation block\n  9684. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9685. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\endPhase.m: Missing arguments validation block\n  9686. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  9687. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9688. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9689. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9690. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9691. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9692. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9693. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractAllSignalsFromBus.m: Missing arguments validation block\n  9694. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  9695. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractCoefficientsFromTable.m: Missing function docstring\n  9696. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractCoefficientsFromTable.m: Missing arguments validation block\n  9697. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9698. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9699. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9700. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9701. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9702. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9703. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9704. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9705. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9706. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9707. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9708. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9709. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractCombinedSignalBusData.m: Missing function docstring\n  9710. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractCombinedSignalBusData.m: Missing arguments validation block\n  9711. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9712. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9713. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9714. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9715. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9716. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractConstantMatrixData.m: Missing function docstring\n  9717. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractConstantMatrixData.m: Missing arguments validation block\n  9718. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractDataFromField.m: Missing arguments validation block\n  9719. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  9720. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  9721. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractDataWithOptions.m: Missing arguments validation block\n  9722. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  9723. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  9724. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  9725. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  9726. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  9727. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9728. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9729. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9730. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9731. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9732. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9733. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9734. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9735. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9736. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9737. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9738. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9739. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9740. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9741. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9742. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9743. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9744. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9745. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractFromCombinedSignalBus.m: Missing function docstring\n  9746. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  9747. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  9748. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  9749. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  9750. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  9751. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  9752. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  9753. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9754. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9755. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9756. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9757. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9758. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9759. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9760. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9761. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9762. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9763. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9764. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9765. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9766. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9767. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9768. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9769. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  9770. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  9771. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9772. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9773. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractFromNestedStruct.m: Missing arguments validation block\n  9774. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9775. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9776. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9777. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9778. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9779. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9780. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractLogsoutDataFixed.m: Missing function docstring\n  9781. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractLogsoutDataFixed.m: Missing arguments validation block\n  9782. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractSignalsFromSimOut.m: Missing arguments validation block\n  9783. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9784. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9785. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9786. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractSimscapeDataRecursive.m: Missing function docstring\n  9787. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  9788. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractTimeSeriesData.m: Missing function docstring\n  9789. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractTimeSeriesData.m: Missing arguments validation block\n  9790. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9791. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9792. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9793. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9794. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractWorkspaceOutputs.m: Missing function docstring\n  9795. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\extractWorkspaceOutputs.m: Missing arguments validation block\n  9796. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9797. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9798. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  9799. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9800. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9801. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9802. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\fallbackSimlogExtraction.m: Missing function docstring\n  9803. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\fallbackSimlogExtraction.m: Missing arguments validation block\n  9804. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\generateRandomCoefficients.m: Missing arguments validation block\n  9805. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\getMemoryInfo.m: Missing function docstring\n  9806. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\getMemoryInfo.m: Missing arguments validation block\n  9807. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\getMemoryUsage.m: Missing arguments validation block\n  9808. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\getOrCreateParallelPool.m: Missing arguments validation block\n  9809. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9810. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9811. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9812. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9813. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9814. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9815. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9816. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  9817. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\getPolynomialParameterInfo.m: Missing arguments validation block\n  9818. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\getShortenedJointName.m: Missing arguments validation block\n  9819. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\initializeLocalCluster.m: Missing arguments validation block\n  9820. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9821. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9822. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  9823. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  9824. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\loadInputFile.m: Missing function docstring\n  9825. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\loadInputFile.m: Missing arguments validation block\n  9826. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\logBatchResult.m: Missing arguments validation block\n  9827. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9828. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\logMessage.m: Missing arguments validation block\n  9829. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\logical2str.m: Missing function docstring\n  9830. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\logical2str.m: Missing arguments validation block\n  9831. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  9832. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\memory_monitor.m: Missing arguments validation block\n  9833. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\mergeTables.m: Missing function docstring\n  9834. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\mergeTables.m: Missing arguments validation block\n  9835. performance_analysis.m (line 121): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9836. performance_analysis.m (line 122): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9837. performance_analysis.m (line 123): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9838. performance_analysis.m (line 124): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9839. performance_analysis.m (line 130): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9840. performance_analysis.m (line 131): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9841. performance_analysis.m (line 132): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9842. performance_analysis.m (line 133): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9843. performance_analysis.m (line 134): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9844. performance_analysis.m (line 135): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9845. performance_analysis.m (line 140): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9846. performance_analysis.m (line 166): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  9847. performance_analysis.m (line 261): Function might be unused.\n  9848. performance_analysis.m (line 312): Parse error at results: usage might be invalid MATLAB syntax.\n  9849. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\performance_analysis.m: Missing arguments validation block\n  9850. performance_monitor.m (line 11): Persistent variable might be unused.\n  9851. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9852. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9853. performance_monitor.m (line 77): Function might be unused.\n  9854. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9855. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9856. performance_monitor.m (line 118): Function might be unused.\n  9857. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9858. performance_monitor.m (line 133): Function might be unused.\n  9859. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9860. performance_monitor.m (line 149): Function might be unused.\n  9861. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9862. performance_monitor.m (line 162): Function might be unused.\n  9863. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9864. performance_monitor.m (line 175): Function might be unused.\n  9865. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9866. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9867. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9868. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\performance_monitor.m: Missing arguments validation block\n  9869. performance_optimizer.m (line 28): Function might be unused.\n  9870. performance_optimizer.m (line 42): Value assigned to variable might be unused.\n  9871. performance_optimizer.m (line 102): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9872. performance_optimizer.m (line 107): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9873. performance_optimizer.m (line 108): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9874. performance_optimizer.m (line 109): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9875. performance_optimizer.m (line 110): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9876. performance_optimizer.m (line 111): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9877. performance_optimizer.m (line 112): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9878. performance_optimizer.m (line 113): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9879. performance_optimizer.m (line 114): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9880. performance_optimizer.m (line 115): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9881. performance_optimizer.m (line 116): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9882. performance_optimizer.m (line 117): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9883. performance_optimizer.m (line 118): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9884. performance_optimizer.m (line 123): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9885. performance_optimizer.m (line 127): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9886. performance_optimizer.m (line 128): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9887. performance_optimizer.m (line 129): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9888. performance_optimizer.m (line 130): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9889. performance_optimizer.m (line 131): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9890. performance_optimizer.m (line 132): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9891. performance_optimizer.m (line 133): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9892. performance_optimizer.m (line 134): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9893. performance_optimizer.m (line 135): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9894. performance_optimizer.m (line 140): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9895. performance_optimizer.m (line 144): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9896. performance_optimizer.m (line 145): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9897. performance_optimizer.m (line 146): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9898. performance_optimizer.m (line 147): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9899. performance_optimizer.m (line 148): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9900. performance_optimizer.m (line 149): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9901. performance_optimizer.m (line 150): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9902. performance_optimizer.m (line 151): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9903. performance_optimizer.m (line 152): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9904. performance_optimizer.m (line 153): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9905. performance_optimizer.m (line 158): Function might be unused.\n  9906. performance_optimizer.m (line 195): Function might be unused.\n  9907. performance_optimizer.m (line 244): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9908. performance_optimizer.m (line 263): Function might be unused.\n  9909. performance_optimizer.m (line 263): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9910. performance_optimizer.m (line 301): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9911. performance_optimizer.m (line 348): Function might be unused.\n  9912. performance_optimizer.m (line 408): Function might be unused.\n  9913. performance_optimizer.m (line 446): Function might be unused.\n  9914. performance_optimizer.m (line 517): Function might be unused.\n  9915. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\performance_optimizer.m: Missing arguments validation block\n  9916. performance_optimizer_functions.m (line 1): Function name 'initializeLocalCluster' is known to MATLAB by its file name: 'performance_optimizer_functions'.\n  9917. performance_optimizer_functions.m (line 72): Function might be unused.\n  9918. performance_optimizer_functions.m (line 112): Function might be unused.\n  9919. performance_optimizer_functions.m (line 165): Function might be unused.\n  9920. performance_optimizer_functions.m (line 232): Function might be unused.\n  9921. performance_optimizer_functions.m (line 263): Function might be unused.\n  9922. performance_optimizer_functions.m (line 303): Function might be unused.\n  9923. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\performance_optimizer_functions.m: Missing arguments validation block\n  9924. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  9925. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  9926. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9927. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9928. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\processSimulationOutput.m: Missing function docstring\n  9929. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\processSimulationOutput.m: Missing arguments validation block\n  9930. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9931. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\recordBatchTime.m: Missing arguments validation block\n  9932. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9933. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\recordPhase.m: Missing arguments validation block\n  9934. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\resampleDataToFrequency.m: Missing function docstring\n  9935. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\resampleDataToFrequency.m: Missing arguments validation block\n  9936. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\restoreWorkspace.m: Missing arguments validation block\n  9937. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\runSingleTrial.m: Missing arguments validation block\n  9938. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\setModelParameters.m: Missing arguments validation block\n  9939. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9940. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\setPolynomialCoefficients.m: Missing arguments validation block\n  9941. setup_performance_preferences.m (line 88): Function might be unused.\n  9942. setup_performance_preferences.m (line 113): Function might be unused.\n  9943. setup_performance_preferences.m (line 138): Function might be unused.\n  9944. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\setup_performance_preferences.m: Missing arguments validation block\n  9945. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\shouldShowDebug.m: Missing function docstring\n  9946. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\shouldShowDebug.m: Missing arguments validation block\n  9947. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\shouldShowNormal.m: Missing function docstring\n  9948. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\shouldShowNormal.m: Missing arguments validation block\n  9949. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\shouldShowVerbose.m: Missing function docstring\n  9950. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\shouldShowVerbose.m: Missing arguments validation block\n  9951. test_granular_calculations_with_checkboxes.m (line 72): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9952. test_granular_calculations_with_checkboxes.m (line 73): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9953. test_granular_calculations_with_checkboxes.m (line 74): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9954. test_granular_calculations_with_checkboxes.m (line 75): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9955. test_granular_calculations_with_checkboxes.m (line 76): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9956. test_granular_calculations_with_checkboxes.m (line 77): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  9957. test_granular_calculations_with_checkboxes.m (line 84): Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.\n  9958. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_parallel_pool_fix.m: Missing arguments validation block\n  9959. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_performance_descriptions.m: Missing function docstring\n  9960. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_performance_descriptions.m: Missing arguments validation block\n  9961. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_performance_interface.m: Missing arguments validation block\n  9962. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_performance_preferences.m: Missing arguments validation block\n  9963. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\test_preallocation_performance.m: Missing arguments validation block\n  9964. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  9965. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9966. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\traverseSimlogNode.m: Missing arguments validation block\n  9967. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9968. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9969. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9970. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9971. verbosity_control.m (line 203): Function might be unused.\n  9972. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9973. verbosity_control.m (line 225): Function might be unused.\n  9974. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9975. verbosity_control.m (line 248): Function might be unused.\n  9976. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9977. verbosity_control.m (line 274): Function might be unused.\n  9978. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9979. verbosity_control.m (line 293): Function might be unused.\n  9980. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9981. verbosity_control.m (line 320): Function might be unused.\n  9982. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9983. verbosity_control.m (line 335): Function might be unused.\n  9984. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  9985. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_152408\\verbosity_control.m: Missing arguments validation block\n  9986. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  9987. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  9988. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  9989. Data_GUI_Enhanced.m (line 314): Function might be unused.\n  9990. Data_GUI_Enhanced.m (line 405): Value assigned to variable might be unused.\n  9991. Data_GUI_Enhanced.m (line 627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  9992. Data_GUI_Enhanced.m (line 651): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9993. Data_GUI_Enhanced.m (line 663): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  9994. Data_GUI_Enhanced.m (line 687): Value assigned to variable might be unused.\n  9995. Data_GUI_Enhanced.m (line 939): Value assigned to variable might be unused.\n  9996. Data_GUI_Enhanced.m (line 960): Value assigned to variable might be unused.\n  9997. Data_GUI_Enhanced.m (line 1134): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  9998. Data_GUI_Enhanced.m (line 1134): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  9999. Data_GUI_Enhanced.m (line 1167): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10000. Data_GUI_Enhanced.m (line 1248): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10001. Data_GUI_Enhanced.m (line 1466): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  10002. Data_GUI_Enhanced.m (line 1488): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10003. Data_GUI_Enhanced.m (line 1488): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10004. Data_GUI_Enhanced.m (line 1494): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10005. Data_GUI_Enhanced.m (line 1494): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10006. Data_GUI_Enhanced.m (line 1505): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10007. Data_GUI_Enhanced.m (line 1505): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10008. Data_GUI_Enhanced.m (line 1521): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10009. Data_GUI_Enhanced.m (line 1558): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10010. Data_GUI_Enhanced.m (line 1558): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10011. Data_GUI_Enhanced.m (line 1718): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10012. Data_GUI_Enhanced.m (line 1718): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10013. Data_GUI_Enhanced.m (line 1727): Value assigned to variable might be unused.\n  10014. Data_GUI_Enhanced.m (line 1732): Value assigned to variable might be unused.\n  10015. Data_GUI_Enhanced.m (line 1759): Value assigned to variable might be unused.\n  10016. Data_GUI_Enhanced.m (line 1865): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10017. Data_GUI_Enhanced.m (line 1865): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10018. Data_GUI_Enhanced.m (line 2267): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10019. Data_GUI_Enhanced.m (line 2268): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10020. Data_GUI_Enhanced.m (line 2269): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10021. Data_GUI_Enhanced.m (line 2270): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10022. Data_GUI_Enhanced.m (line 2271): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10023. Data_GUI_Enhanced.m (line 2532): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10024. Data_GUI_Enhanced.m (line 2533): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10025. Data_GUI_Enhanced.m (line 2534): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10026. Data_GUI_Enhanced.m (line 2535): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10027. Data_GUI_Enhanced.m (line 2536): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10028. Data_GUI_Enhanced.m (line 2568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10029. Data_GUI_Enhanced.m (line 2569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10030. Data_GUI_Enhanced.m (line 2570): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10031. Data_GUI_Enhanced.m (line 2603): Value assigned to variable might be unused.\n  10032. Data_GUI_Enhanced.m (line 2628): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10033. Data_GUI_Enhanced.m (line 2776): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10034. Data_GUI_Enhanced.m (line 2776): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10035. Data_GUI_Enhanced.m (line 2789): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10036. Data_GUI_Enhanced.m (line 2789): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10037. Data_GUI_Enhanced.m (line 2802): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10038. Data_GUI_Enhanced.m (line 2814): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10039. Data_GUI_Enhanced.m (line 2814): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10040. Data_GUI_Enhanced.m (line 2870): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10041. Data_GUI_Enhanced.m (line 2870): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10042. Data_GUI_Enhanced.m (line 2921): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10043. Data_GUI_Enhanced.m (line 2921): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10044. Data_GUI_Enhanced.m (line 2968): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10045. Data_GUI_Enhanced.m (line 2968): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10046. Data_GUI_Enhanced.m (line 2998): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10047. Data_GUI_Enhanced.m (line 2998): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10048. Data_GUI_Enhanced.m (line 3020): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10049. Data_GUI_Enhanced.m (line 3020): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10050. Data_GUI_Enhanced.m (line 3041): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10051. Data_GUI_Enhanced.m (line 3041): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10052. Data_GUI_Enhanced.m (line 3066): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10053. Data_GUI_Enhanced.m (line 3066): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10054. Data_GUI_Enhanced.m (line 3091): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10055. Data_GUI_Enhanced.m (line 3091): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10056. Data_GUI_Enhanced.m (line 3106): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10057. Data_GUI_Enhanced.m (line 3118): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10058. Data_GUI_Enhanced.m (line 3118): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10059. Data_GUI_Enhanced.m (line 3124): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10060. Data_GUI_Enhanced.m (line 3124): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10061. Data_GUI_Enhanced.m (line 3137): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10062. Data_GUI_Enhanced.m (line 3138): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10063. Data_GUI_Enhanced.m (line 3139): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10064. Data_GUI_Enhanced.m (line 3150): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10065. Data_GUI_Enhanced.m (line 3151): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10066. Data_GUI_Enhanced.m (line 3156): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10067. Data_GUI_Enhanced.m (line 3157): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10068. Data_GUI_Enhanced.m (line 3197): Value assigned to variable might be unused.\n  10069. Data_GUI_Enhanced.m (line 3400): Value assigned to variable might be unused.\n  10070. Data_GUI_Enhanced.m (line 3446): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  10071. Data_GUI_Enhanced.m (line 3590): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  10072. Data_GUI_Enhanced.m (line 3729): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10073. Data_GUI_Enhanced.m (line 3729): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10074. Data_GUI_Enhanced.m (line 3851): Function might be unused.\n  10075. Data_GUI_Enhanced.m (line 4029): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10076. Data_GUI_Enhanced.m (line 4029): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10077. Data_GUI_Enhanced.m (line 4064): Function might be unused.\n  10078. Data_GUI_Enhanced.m (line 4115): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10079. Data_GUI_Enhanced.m (line 4197): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10080. Data_GUI_Enhanced.m (line 4314): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10081. Data_GUI_Enhanced.m (line 4362): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10082. Data_GUI_Enhanced.m (line 4362): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10083. Data_GUI_Enhanced.m (line 4433): Value assigned to variable might be unused.\n  10084. Data_GUI_Enhanced.m (line 4549): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10085. Data_GUI_Enhanced.m (line 4858): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  10086. Data_GUI_Enhanced.m (line 5073): This keyword might not be aligned with its matching END on line 5075.\n  10087. Data_GUI_Enhanced.m (line 5149): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10088. Data_GUI_Enhanced.m (line 5152): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10089. Data_GUI_Enhanced.m (line 5152): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10090. Data_GUI_Enhanced.m (line 5198): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  10091. Data_GUI_Enhanced.m (line 5250): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10092. Data_GUI_Enhanced.m (line 5305): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10093. Data_GUI_Enhanced.m (line 5306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10094. Data_GUI_Enhanced.m (line 5346): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10095. Data_GUI_Enhanced.m (line 5355): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10096. Data_GUI_Enhanced.m (line 5360): This statement (and possibly following ones) cannot be reached.\n  10097. Data_GUI_Enhanced.m (line 5362): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10098. Data_GUI_Enhanced.m (line 5369): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10099. Data_GUI_Enhanced.m (line 5399): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10100. Data_GUI_Enhanced.m (line 5449): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10101. Data_GUI_Enhanced.m (line 5483): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10102. Data_GUI_Enhanced.m (line 5497): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10103. Data_GUI_Enhanced.m (line 5505): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10104. Data_GUI_Enhanced.m (line 5505): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10105. Data_GUI_Enhanced.m (line 5612): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10106. Data_GUI_Enhanced.m (line 5612): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10107. Data_GUI_Enhanced.m (line 5644): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10108. Data_GUI_Enhanced.m (line 5644): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10109. Data_GUI_Enhanced.m (line 5811): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10110. Data_GUI_Enhanced.m (line 5825): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10111. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_154327\\Data_GUI_Enhanced.m: Missing arguments validation block\n  10112. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  10113. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  10114. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  10115. Data_GUI_Enhanced.m (line 314): Function might be unused.\n  10116. Data_GUI_Enhanced.m (line 405): Value assigned to variable might be unused.\n  10117. Data_GUI_Enhanced.m (line 627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10118. Data_GUI_Enhanced.m (line 651): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10119. Data_GUI_Enhanced.m (line 663): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10120. Data_GUI_Enhanced.m (line 687): Value assigned to variable might be unused.\n  10121. Data_GUI_Enhanced.m (line 939): Value assigned to variable might be unused.\n  10122. Data_GUI_Enhanced.m (line 960): Value assigned to variable might be unused.\n  10123. Data_GUI_Enhanced.m (line 1134): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10124. Data_GUI_Enhanced.m (line 1134): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10125. Data_GUI_Enhanced.m (line 1167): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10126. Data_GUI_Enhanced.m (line 1248): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10127. Data_GUI_Enhanced.m (line 1488): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10128. Data_GUI_Enhanced.m (line 1488): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10129. Data_GUI_Enhanced.m (line 1494): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10130. Data_GUI_Enhanced.m (line 1494): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10131. Data_GUI_Enhanced.m (line 1505): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10132. Data_GUI_Enhanced.m (line 1505): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10133. Data_GUI_Enhanced.m (line 1521): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10134. Data_GUI_Enhanced.m (line 1558): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10135. Data_GUI_Enhanced.m (line 1558): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10136. Data_GUI_Enhanced.m (line 1718): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10137. Data_GUI_Enhanced.m (line 1718): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10138. Data_GUI_Enhanced.m (line 1822): Value assigned to variable might be unused.\n  10139. Data_GUI_Enhanced.m (line 1928): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10140. Data_GUI_Enhanced.m (line 1928): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10141. Data_GUI_Enhanced.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10142. Data_GUI_Enhanced.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10143. Data_GUI_Enhanced.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10144. Data_GUI_Enhanced.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10145. Data_GUI_Enhanced.m (line 2334): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10146. Data_GUI_Enhanced.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10147. Data_GUI_Enhanced.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10148. Data_GUI_Enhanced.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10149. Data_GUI_Enhanced.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10150. Data_GUI_Enhanced.m (line 2599): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10151. Data_GUI_Enhanced.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10152. Data_GUI_Enhanced.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10153. Data_GUI_Enhanced.m (line 2633): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10154. Data_GUI_Enhanced.m (line 2666): Value assigned to variable might be unused.\n  10155. Data_GUI_Enhanced.m (line 2691): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10156. Data_GUI_Enhanced.m (line 2839): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10157. Data_GUI_Enhanced.m (line 2839): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10158. Data_GUI_Enhanced.m (line 2852): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10159. Data_GUI_Enhanced.m (line 2852): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10160. Data_GUI_Enhanced.m (line 2865): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10161. Data_GUI_Enhanced.m (line 2877): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10162. Data_GUI_Enhanced.m (line 2877): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10163. Data_GUI_Enhanced.m (line 2933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10164. Data_GUI_Enhanced.m (line 2933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10165. Data_GUI_Enhanced.m (line 2984): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10166. Data_GUI_Enhanced.m (line 2984): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10167. Data_GUI_Enhanced.m (line 3031): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10168. Data_GUI_Enhanced.m (line 3031): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10169. Data_GUI_Enhanced.m (line 3061): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10170. Data_GUI_Enhanced.m (line 3061): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10171. Data_GUI_Enhanced.m (line 3083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10172. Data_GUI_Enhanced.m (line 3083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10173. Data_GUI_Enhanced.m (line 3104): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10174. Data_GUI_Enhanced.m (line 3104): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10175. Data_GUI_Enhanced.m (line 3129): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10176. Data_GUI_Enhanced.m (line 3129): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10177. Data_GUI_Enhanced.m (line 3154): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10178. Data_GUI_Enhanced.m (line 3154): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10179. Data_GUI_Enhanced.m (line 3169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10180. Data_GUI_Enhanced.m (line 3181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10181. Data_GUI_Enhanced.m (line 3181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10182. Data_GUI_Enhanced.m (line 3187): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10183. Data_GUI_Enhanced.m (line 3187): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10184. Data_GUI_Enhanced.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10185. Data_GUI_Enhanced.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10186. Data_GUI_Enhanced.m (line 3202): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10187. Data_GUI_Enhanced.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10188. Data_GUI_Enhanced.m (line 3214): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10189. Data_GUI_Enhanced.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10190. Data_GUI_Enhanced.m (line 3220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10191. Data_GUI_Enhanced.m (line 3260): Value assigned to variable might be unused.\n  10192. Data_GUI_Enhanced.m (line 3463): Value assigned to variable might be unused.\n  10193. Data_GUI_Enhanced.m (line 3653): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  10194. Data_GUI_Enhanced.m (line 3792): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10195. Data_GUI_Enhanced.m (line 3792): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10196. Data_GUI_Enhanced.m (line 3914): Function might be unused.\n  10197. Data_GUI_Enhanced.m (line 4092): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10198. Data_GUI_Enhanced.m (line 4092): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10199. Data_GUI_Enhanced.m (line 4127): Function might be unused.\n  10200. Data_GUI_Enhanced.m (line 4178): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10201. Data_GUI_Enhanced.m (line 4260): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10202. Data_GUI_Enhanced.m (line 4377): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10203. Data_GUI_Enhanced.m (line 4425): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10204. Data_GUI_Enhanced.m (line 4425): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10205. Data_GUI_Enhanced.m (line 4496): Value assigned to variable might be unused.\n  10206. Data_GUI_Enhanced.m (line 4612): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10207. Data_GUI_Enhanced.m (line 4921): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  10208. Data_GUI_Enhanced.m (line 5212): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10209. Data_GUI_Enhanced.m (line 5215): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10210. Data_GUI_Enhanced.m (line 5215): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10211. Data_GUI_Enhanced.m (line 5313): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10212. Data_GUI_Enhanced.m (line 5368): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10213. Data_GUI_Enhanced.m (line 5369): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10214. Data_GUI_Enhanced.m (line 5409): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10215. Data_GUI_Enhanced.m (line 5418): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10216. Data_GUI_Enhanced.m (line 5423): This statement (and possibly following ones) cannot be reached.\n  10217. Data_GUI_Enhanced.m (line 5425): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10218. Data_GUI_Enhanced.m (line 5432): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10219. Data_GUI_Enhanced.m (line 5462): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10220. Data_GUI_Enhanced.m (line 5512): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10221. Data_GUI_Enhanced.m (line 5546): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10222. Data_GUI_Enhanced.m (line 5560): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10223. Data_GUI_Enhanced.m (line 5568): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10224. Data_GUI_Enhanced.m (line 5568): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10225. Data_GUI_Enhanced.m (line 5675): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10226. Data_GUI_Enhanced.m (line 5675): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10227. Data_GUI_Enhanced.m (line 5707): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10228. Data_GUI_Enhanced.m (line 5707): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10229. Data_GUI_Enhanced.m (line 5874): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10230. Data_GUI_Enhanced.m (line 5888): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10231. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_162051\\Data_GUI_Enhanced.m: Missing arguments validation block\n  10232. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  10233. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  10234. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  10235. Dataset_GUI.m (line 2): Function name 'Data_GUI_Enhanced' is known to MATLAB by its file name: 'Dataset_GUI'.\n  10236. Dataset_GUI.m (line 314): Function might be unused.\n  10237. Dataset_GUI.m (line 405): Value assigned to variable might be unused.\n  10238. Dataset_GUI.m (line 627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10239. Dataset_GUI.m (line 651): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10240. Dataset_GUI.m (line 663): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10241. Dataset_GUI.m (line 687): Value assigned to variable might be unused.\n  10242. Dataset_GUI.m (line 939): Value assigned to variable might be unused.\n  10243. Dataset_GUI.m (line 960): Value assigned to variable might be unused.\n  10244. Dataset_GUI.m (line 1134): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10245. Dataset_GUI.m (line 1134): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10246. Dataset_GUI.m (line 1167): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10247. Dataset_GUI.m (line 1248): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10248. Dataset_GUI.m (line 1488): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10249. Dataset_GUI.m (line 1488): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10250. Dataset_GUI.m (line 1494): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10251. Dataset_GUI.m (line 1494): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10252. Dataset_GUI.m (line 1505): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10253. Dataset_GUI.m (line 1505): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10254. Dataset_GUI.m (line 1521): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10255. Dataset_GUI.m (line 1558): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10256. Dataset_GUI.m (line 1558): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10257. Dataset_GUI.m (line 1718): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10258. Dataset_GUI.m (line 1718): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10259. Dataset_GUI.m (line 1822): Value assigned to variable might be unused.\n  10260. Dataset_GUI.m (line 1928): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10261. Dataset_GUI.m (line 1928): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10262. Dataset_GUI.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10263. Dataset_GUI.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10264. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10265. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10266. Dataset_GUI.m (line 2334): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10267. Dataset_GUI.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10268. Dataset_GUI.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10269. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10270. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10271. Dataset_GUI.m (line 2599): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10272. Dataset_GUI.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10273. Dataset_GUI.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10274. Dataset_GUI.m (line 2633): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10275. Dataset_GUI.m (line 2666): Value assigned to variable might be unused.\n  10276. Dataset_GUI.m (line 2691): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10277. Dataset_GUI.m (line 2839): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10278. Dataset_GUI.m (line 2839): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10279. Dataset_GUI.m (line 2852): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10280. Dataset_GUI.m (line 2852): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10281. Dataset_GUI.m (line 2865): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10282. Dataset_GUI.m (line 2877): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10283. Dataset_GUI.m (line 2877): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10284. Dataset_GUI.m (line 2933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10285. Dataset_GUI.m (line 2933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10286. Dataset_GUI.m (line 2984): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10287. Dataset_GUI.m (line 2984): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10288. Dataset_GUI.m (line 3031): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10289. Dataset_GUI.m (line 3031): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10290. Dataset_GUI.m (line 3061): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10291. Dataset_GUI.m (line 3061): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10292. Dataset_GUI.m (line 3083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10293. Dataset_GUI.m (line 3083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10294. Dataset_GUI.m (line 3104): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10295. Dataset_GUI.m (line 3104): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10296. Dataset_GUI.m (line 3129): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10297. Dataset_GUI.m (line 3129): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10298. Dataset_GUI.m (line 3154): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10299. Dataset_GUI.m (line 3154): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10300. Dataset_GUI.m (line 3169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10301. Dataset_GUI.m (line 3181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10302. Dataset_GUI.m (line 3181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10303. Dataset_GUI.m (line 3187): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10304. Dataset_GUI.m (line 3187): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10305. Dataset_GUI.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10306. Dataset_GUI.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10307. Dataset_GUI.m (line 3202): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10308. Dataset_GUI.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10309. Dataset_GUI.m (line 3214): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10310. Dataset_GUI.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10311. Dataset_GUI.m (line 3220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10312. Dataset_GUI.m (line 3260): Value assigned to variable might be unused.\n  10313. Dataset_GUI.m (line 3463): Value assigned to variable might be unused.\n  10314. Dataset_GUI.m (line 3653): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  10315. Dataset_GUI.m (line 3792): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10316. Dataset_GUI.m (line 3792): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10317. Dataset_GUI.m (line 3914): Function might be unused.\n  10318. Dataset_GUI.m (line 4092): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10319. Dataset_GUI.m (line 4092): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10320. Dataset_GUI.m (line 4127): Function might be unused.\n  10321. Dataset_GUI.m (line 4178): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10322. Dataset_GUI.m (line 4260): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10323. Dataset_GUI.m (line 4377): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10324. Dataset_GUI.m (line 4425): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10325. Dataset_GUI.m (line 4425): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10326. Dataset_GUI.m (line 4778): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  10327. Dataset_GUI.m (line 5069): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10328. Dataset_GUI.m (line 5072): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10329. Dataset_GUI.m (line 5072): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10330. Dataset_GUI.m (line 5149): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10331. Dataset_GUI.m (line 5183): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10332. Dataset_GUI.m (line 5197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10333. Dataset_GUI.m (line 5205): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10334. Dataset_GUI.m (line 5205): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10335. Dataset_GUI.m (line 5312): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10336. Dataset_GUI.m (line 5312): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10337. Dataset_GUI.m (line 5344): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10338. Dataset_GUI.m (line 5344): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10339. Dataset_GUI.m (line 5511): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10340. Dataset_GUI.m (line 5525): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10341. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_165407\\Dataset_GUI.m: Missing arguments validation block\n  10342. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10343. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10344. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10345. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_165407\\extractSimscapeDataRecursive.m: Missing function docstring\n  10346. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_165407\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  10347. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  10348. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10349. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_165407\\traverseSimlogNode.m: Missing arguments validation block\n  10350. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  10351. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  10352. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  10353. Dataset_GUI.m (line 2): Function name 'Data_GUI_Enhanced' is known to MATLAB by its file name: 'Dataset_GUI'.\n  10354. Dataset_GUI.m (line 314): Function might be unused.\n  10355. Dataset_GUI.m (line 405): Value assigned to variable might be unused.\n  10356. Dataset_GUI.m (line 627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10357. Dataset_GUI.m (line 651): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10358. Dataset_GUI.m (line 663): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10359. Dataset_GUI.m (line 687): Value assigned to variable might be unused.\n  10360. Dataset_GUI.m (line 939): Value assigned to variable might be unused.\n  10361. Dataset_GUI.m (line 960): Value assigned to variable might be unused.\n  10362. Dataset_GUI.m (line 1134): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10363. Dataset_GUI.m (line 1134): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10364. Dataset_GUI.m (line 1167): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10365. Dataset_GUI.m (line 1248): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10366. Dataset_GUI.m (line 1488): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10367. Dataset_GUI.m (line 1488): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10368. Dataset_GUI.m (line 1494): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10369. Dataset_GUI.m (line 1494): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10370. Dataset_GUI.m (line 1505): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10371. Dataset_GUI.m (line 1505): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10372. Dataset_GUI.m (line 1521): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10373. Dataset_GUI.m (line 1558): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10374. Dataset_GUI.m (line 1558): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10375. Dataset_GUI.m (line 1718): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10376. Dataset_GUI.m (line 1718): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10377. Dataset_GUI.m (line 1822): Value assigned to variable might be unused.\n  10378. Dataset_GUI.m (line 1928): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10379. Dataset_GUI.m (line 1928): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10380. Dataset_GUI.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10381. Dataset_GUI.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10382. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10383. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10384. Dataset_GUI.m (line 2334): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10385. Dataset_GUI.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10386. Dataset_GUI.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10387. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10388. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10389. Dataset_GUI.m (line 2599): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10390. Dataset_GUI.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10391. Dataset_GUI.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10392. Dataset_GUI.m (line 2633): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10393. Dataset_GUI.m (line 2666): Value assigned to variable might be unused.\n  10394. Dataset_GUI.m (line 2691): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10395. Dataset_GUI.m (line 2839): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10396. Dataset_GUI.m (line 2839): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10397. Dataset_GUI.m (line 2852): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10398. Dataset_GUI.m (line 2852): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10399. Dataset_GUI.m (line 2865): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10400. Dataset_GUI.m (line 2877): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10401. Dataset_GUI.m (line 2877): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10402. Dataset_GUI.m (line 2933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10403. Dataset_GUI.m (line 2933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10404. Dataset_GUI.m (line 2984): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10405. Dataset_GUI.m (line 2984): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10406. Dataset_GUI.m (line 3031): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10407. Dataset_GUI.m (line 3031): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10408. Dataset_GUI.m (line 3061): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10409. Dataset_GUI.m (line 3061): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10410. Dataset_GUI.m (line 3083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10411. Dataset_GUI.m (line 3083): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10412. Dataset_GUI.m (line 3104): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10413. Dataset_GUI.m (line 3104): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10414. Dataset_GUI.m (line 3129): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10415. Dataset_GUI.m (line 3129): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10416. Dataset_GUI.m (line 3154): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10417. Dataset_GUI.m (line 3154): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10418. Dataset_GUI.m (line 3169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10419. Dataset_GUI.m (line 3181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10420. Dataset_GUI.m (line 3181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10421. Dataset_GUI.m (line 3187): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10422. Dataset_GUI.m (line 3187): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10423. Dataset_GUI.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10424. Dataset_GUI.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10425. Dataset_GUI.m (line 3202): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10426. Dataset_GUI.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10427. Dataset_GUI.m (line 3214): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10428. Dataset_GUI.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10429. Dataset_GUI.m (line 3220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10430. Dataset_GUI.m (line 3260): Value assigned to variable might be unused.\n  10431. Dataset_GUI.m (line 3463): Value assigned to variable might be unused.\n  10432. Dataset_GUI.m (line 3653): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  10433. Dataset_GUI.m (line 3792): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10434. Dataset_GUI.m (line 3792): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10435. Dataset_GUI.m (line 3914): Function might be unused.\n  10436. Dataset_GUI.m (line 4092): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10437. Dataset_GUI.m (line 4092): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10438. Dataset_GUI.m (line 4127): Function might be unused.\n  10439. Dataset_GUI.m (line 4178): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10440. Dataset_GUI.m (line 4260): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10441. Dataset_GUI.m (line 4377): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10442. Dataset_GUI.m (line 4425): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10443. Dataset_GUI.m (line 4425): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10444. Dataset_GUI.m (line 4778): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  10445. Dataset_GUI.m (line 5069): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10446. Dataset_GUI.m (line 5072): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10447. Dataset_GUI.m (line 5072): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10448. Dataset_GUI.m (line 5149): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10449. Dataset_GUI.m (line 5183): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10450. Dataset_GUI.m (line 5197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10451. Dataset_GUI.m (line 5205): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10452. Dataset_GUI.m (line 5205): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10453. Dataset_GUI.m (line 5312): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10454. Dataset_GUI.m (line 5312): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10455. Dataset_GUI.m (line 5344): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10456. Dataset_GUI.m (line 5344): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10457. Dataset_GUI.m (line 5511): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10458. Dataset_GUI.m (line 5525): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10459. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250822_214947\\Dataset_GUI.m: Missing arguments validation block\n  10460. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  10461. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  10462. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  10463. Dataset_GUI.m (line 313): Function might be unused.\n  10464. Dataset_GUI.m (line 404): Value assigned to variable might be unused.\n  10465. Dataset_GUI.m (line 626): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10466. Dataset_GUI.m (line 650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10467. Dataset_GUI.m (line 662): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10468. Dataset_GUI.m (line 686): Value assigned to variable might be unused.\n  10469. Dataset_GUI.m (line 938): Value assigned to variable might be unused.\n  10470. Dataset_GUI.m (line 959): Value assigned to variable might be unused.\n  10471. Dataset_GUI.m (line 1133): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10472. Dataset_GUI.m (line 1133): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10473. Dataset_GUI.m (line 1166): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10474. Dataset_GUI.m (line 1247): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10475. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10476. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10477. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10478. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10479. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10480. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10481. Dataset_GUI.m (line 1520): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10482. Dataset_GUI.m (line 1557): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10483. Dataset_GUI.m (line 1557): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10484. Dataset_GUI.m (line 1717): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10485. Dataset_GUI.m (line 1717): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10486. Dataset_GUI.m (line 1821): Value assigned to variable might be unused.\n  10487. Dataset_GUI.m (line 1927): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10488. Dataset_GUI.m (line 1927): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10489. Dataset_GUI.m (line 2329): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10490. Dataset_GUI.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10491. Dataset_GUI.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10492. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10493. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10494. Dataset_GUI.m (line 2594): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10495. Dataset_GUI.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10496. Dataset_GUI.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10497. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10498. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10499. Dataset_GUI.m (line 2630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10500. Dataset_GUI.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10501. Dataset_GUI.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10502. Dataset_GUI.m (line 2665): Value assigned to variable might be unused.\n  10503. Dataset_GUI.m (line 2690): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10504. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10505. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10506. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10507. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10508. Dataset_GUI.m (line 2864): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10509. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10510. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10511. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10512. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10513. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10514. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10515. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10516. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10517. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10518. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10519. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10520. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10521. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10522. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10523. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10524. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10525. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10526. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10527. Dataset_GUI.m (line 3168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10528. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10529. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10530. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10531. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10532. Dataset_GUI.m (line 3199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10533. Dataset_GUI.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10534. Dataset_GUI.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10535. Dataset_GUI.m (line 3212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10536. Dataset_GUI.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10537. Dataset_GUI.m (line 3218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10538. Dataset_GUI.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10539. Dataset_GUI.m (line 3259): Value assigned to variable might be unused.\n  10540. Dataset_GUI.m (line 3498): Value assigned to variable might be unused.\n  10541. Dataset_GUI.m (line 3688): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  10542. Dataset_GUI.m (line 3827): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10543. Dataset_GUI.m (line 3827): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10544. Dataset_GUI.m (line 3949): Function might be unused.\n  10545. Dataset_GUI.m (line 4127): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10546. Dataset_GUI.m (line 4127): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10547. Dataset_GUI.m (line 4162): Function might be unused.\n  10548. Dataset_GUI.m (line 4213): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10549. Dataset_GUI.m (line 4295): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10550. Dataset_GUI.m (line 4412): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10551. Dataset_GUI.m (line 4482): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10552. Dataset_GUI.m (line 4482): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10553. Dataset_GUI.m (line 4835): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  10554. Dataset_GUI.m (line 5126): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10555. Dataset_GUI.m (line 5129): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10556. Dataset_GUI.m (line 5129): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10557. Dataset_GUI.m (line 5224): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10558. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_075005\\Dataset_GUI.m: Missing arguments validation block\n  10559. Dataset_GUI_backup.m (line 1): Function name 'Dataset_GUI' is known to MATLAB by its file name: 'Dataset_GUI_backup'.\n  10560. Dataset_GUI_backup.m (line 313): Function might be unused.\n  10561. Dataset_GUI_backup.m (line 404): Value assigned to variable might be unused.\n  10562. Dataset_GUI_backup.m (line 626): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10563. Dataset_GUI_backup.m (line 650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10564. Dataset_GUI_backup.m (line 662): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10565. Dataset_GUI_backup.m (line 686): Value assigned to variable might be unused.\n  10566. Dataset_GUI_backup.m (line 938): Value assigned to variable might be unused.\n  10567. Dataset_GUI_backup.m (line 959): Value assigned to variable might be unused.\n  10568. Dataset_GUI_backup.m (line 1133): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10569. Dataset_GUI_backup.m (line 1133): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10570. Dataset_GUI_backup.m (line 1166): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10571. Dataset_GUI_backup.m (line 1247): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10572. Dataset_GUI_backup.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10573. Dataset_GUI_backup.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10574. Dataset_GUI_backup.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10575. Dataset_GUI_backup.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10576. Dataset_GUI_backup.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10577. Dataset_GUI_backup.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10578. Dataset_GUI_backup.m (line 1520): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10579. Dataset_GUI_backup.m (line 1557): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10580. Dataset_GUI_backup.m (line 1557): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10581. Dataset_GUI_backup.m (line 1717): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10582. Dataset_GUI_backup.m (line 1717): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10583. Dataset_GUI_backup.m (line 1821): Value assigned to variable might be unused.\n  10584. Dataset_GUI_backup.m (line 1927): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10585. Dataset_GUI_backup.m (line 1927): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10586. Dataset_GUI_backup.m (line 2329): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10587. Dataset_GUI_backup.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10588. Dataset_GUI_backup.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10589. Dataset_GUI_backup.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10590. Dataset_GUI_backup.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10591. Dataset_GUI_backup.m (line 2594): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10592. Dataset_GUI_backup.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10593. Dataset_GUI_backup.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10594. Dataset_GUI_backup.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10595. Dataset_GUI_backup.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10596. Dataset_GUI_backup.m (line 2630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10597. Dataset_GUI_backup.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10598. Dataset_GUI_backup.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10599. Dataset_GUI_backup.m (line 2665): Value assigned to variable might be unused.\n  10600. Dataset_GUI_backup.m (line 2690): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10601. Dataset_GUI_backup.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10602. Dataset_GUI_backup.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10603. Dataset_GUI_backup.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10604. Dataset_GUI_backup.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10605. Dataset_GUI_backup.m (line 2864): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10606. Dataset_GUI_backup.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10607. Dataset_GUI_backup.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10608. Dataset_GUI_backup.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10609. Dataset_GUI_backup.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10610. Dataset_GUI_backup.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10611. Dataset_GUI_backup.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10612. Dataset_GUI_backup.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10613. Dataset_GUI_backup.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10614. Dataset_GUI_backup.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10615. Dataset_GUI_backup.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10616. Dataset_GUI_backup.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10617. Dataset_GUI_backup.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10618. Dataset_GUI_backup.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10619. Dataset_GUI_backup.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10620. Dataset_GUI_backup.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10621. Dataset_GUI_backup.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10622. Dataset_GUI_backup.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10623. Dataset_GUI_backup.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10624. Dataset_GUI_backup.m (line 3168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10625. Dataset_GUI_backup.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10626. Dataset_GUI_backup.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10627. Dataset_GUI_backup.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10628. Dataset_GUI_backup.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10629. Dataset_GUI_backup.m (line 3199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10630. Dataset_GUI_backup.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10631. Dataset_GUI_backup.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10632. Dataset_GUI_backup.m (line 3212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10633. Dataset_GUI_backup.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10634. Dataset_GUI_backup.m (line 3218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10635. Dataset_GUI_backup.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10636. Dataset_GUI_backup.m (line 3259): Value assigned to variable might be unused.\n  10637. Dataset_GUI_backup.m (line 3498): Value assigned to variable might be unused.\n  10638. Dataset_GUI_backup.m (line 3688): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  10639. Dataset_GUI_backup.m (line 3827): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10640. Dataset_GUI_backup.m (line 3827): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10641. Dataset_GUI_backup.m (line 3949): Function might be unused.\n  10642. Dataset_GUI_backup.m (line 4127): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10643. Dataset_GUI_backup.m (line 4127): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10644. Dataset_GUI_backup.m (line 4162): Function might be unused.\n  10645. Dataset_GUI_backup.m (line 4213): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10646. Dataset_GUI_backup.m (line 4295): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10647. Dataset_GUI_backup.m (line 4412): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10648. Dataset_GUI_backup.m (line 4482): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10649. Dataset_GUI_backup.m (line 4482): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10650. Dataset_GUI_backup.m (line 4835): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  10651. Dataset_GUI_backup.m (line 5126): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10652. Dataset_GUI_backup.m (line 5129): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10653. Dataset_GUI_backup.m (line 5129): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10654. Dataset_GUI_backup.m (line 5224): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10655. Dataset_GUI_backup.m (line 5336): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10656. Dataset_GUI_backup.m (line 5336): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10657. Dataset_GUI_backup.m (line 5340): Value assigned to variable might be unused.\n  10658. Dataset_GUI_backup.m (line 5508): This variable, apparently a structure, is changed but the value might be unused.\n  10659. Dataset_GUI_backup.m (line 5529): Value assigned to variable might be unused.\n  10660. Dataset_GUI_backup.m (line 5530): Value assigned to variable might be unused.\n  10661. Dataset_GUI_backup.m (line 5546): Value assigned to variable might be unused.\n  10662. Dataset_GUI_backup.m (line 5556): Value assigned to variable might be unused.\n  10663. Dataset_GUI_backup.m (line 5561): Value assigned to variable might be unused.\n  10664. Dataset_GUI_backup.m (line 5566): Value assigned to variable might be unused.\n  10665. Dataset_GUI_backup.m (line 5606): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10666. Dataset_GUI_backup.m (line 5607): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10667. Dataset_GUI_backup.m (line 5611): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10668. Dataset_GUI_backup.m (line 5612): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10669. Dataset_GUI_backup.m (line 5620): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10670. Dataset_GUI_backup.m (line 5622): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10671. Dataset_GUI_backup.m (line 5637): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10672. Dataset_GUI_backup.m (line 5638): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10673. Dataset_GUI_backup.m (line 5644): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10674. Dataset_GUI_backup.m (line 5645): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10675. Dataset_GUI_backup.m (line 5651): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10676. Dataset_GUI_backup.m (line 5652): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10677. Dataset_GUI_backup.m (line 5659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10678. Dataset_GUI_backup.m (line 5660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10679. Dataset_GUI_backup.m (line 5670): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10680. Dataset_GUI_backup.m (line 5671): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10681. Dataset_GUI_backup.m (line 5679): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10682. Dataset_GUI_backup.m (line 5680): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10683. Dataset_GUI_backup.m (line 5784): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10684. Dataset_GUI_backup.m (line 5829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10685. Dataset_GUI_backup.m (line 5863): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10686. Dataset_GUI_backup.m (line 5864): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10687. Dataset_GUI_backup.m (line 5870): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10688. Dataset_GUI_backup.m (line 5871): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10689. Dataset_GUI_backup.m (line 5885): The current use of 'validateCoefficientBounds' is inconsistent with its previous use or definition (line 5336).\n  10690. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_075005\\Dataset_GUI_backup.m: Missing arguments validation block\n  10691. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_075005\\test_1956_columns.m: Missing arguments validation block\n  10692. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  10693. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  10694. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  10695. Dataset_GUI.m (line 313): Function might be unused.\n  10696. Dataset_GUI.m (line 404): Value assigned to variable might be unused.\n  10697. Dataset_GUI.m (line 626): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10698. Dataset_GUI.m (line 650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10699. Dataset_GUI.m (line 662): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10700. Dataset_GUI.m (line 686): Value assigned to variable might be unused.\n  10701. Dataset_GUI.m (line 938): Value assigned to variable might be unused.\n  10702. Dataset_GUI.m (line 959): Value assigned to variable might be unused.\n  10703. Dataset_GUI.m (line 1133): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10704. Dataset_GUI.m (line 1133): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10705. Dataset_GUI.m (line 1166): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10706. Dataset_GUI.m (line 1247): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10707. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10708. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10709. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10710. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10711. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10712. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10713. Dataset_GUI.m (line 1520): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10714. Dataset_GUI.m (line 1557): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10715. Dataset_GUI.m (line 1557): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10716. Dataset_GUI.m (line 1717): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10717. Dataset_GUI.m (line 1717): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10718. Dataset_GUI.m (line 1821): Value assigned to variable might be unused.\n  10719. Dataset_GUI.m (line 1927): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10720. Dataset_GUI.m (line 1927): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10721. Dataset_GUI.m (line 2329): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10722. Dataset_GUI.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10723. Dataset_GUI.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10724. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10725. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10726. Dataset_GUI.m (line 2594): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10727. Dataset_GUI.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10728. Dataset_GUI.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10729. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10730. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10731. Dataset_GUI.m (line 2630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10732. Dataset_GUI.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10733. Dataset_GUI.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10734. Dataset_GUI.m (line 2665): Value assigned to variable might be unused.\n  10735. Dataset_GUI.m (line 2690): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10736. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10737. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10738. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10739. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10740. Dataset_GUI.m (line 2864): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10741. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10742. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10743. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10744. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10745. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10746. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10747. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10748. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10749. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10750. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10751. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10752. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10753. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10754. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10755. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10756. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10757. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10758. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10759. Dataset_GUI.m (line 3168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10760. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10761. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10762. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10763. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10764. Dataset_GUI.m (line 3199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10765. Dataset_GUI.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10766. Dataset_GUI.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10767. Dataset_GUI.m (line 3212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10768. Dataset_GUI.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10769. Dataset_GUI.m (line 3218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10770. Dataset_GUI.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10771. Dataset_GUI.m (line 3259): Value assigned to variable might be unused.\n  10772. Dataset_GUI.m (line 3495): Value assigned to variable might be unused.\n  10773. Dataset_GUI.m (line 3682): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  10774. Dataset_GUI.m (line 3812): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10775. Dataset_GUI.m (line 3812): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10776. Dataset_GUI.m (line 4045): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10777. Dataset_GUI.m (line 4045): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10778. Dataset_GUI.m (line 4080): Function might be unused.\n  10779. Dataset_GUI.m (line 4131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10780. Dataset_GUI.m (line 4213): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10781. Dataset_GUI.m (line 4330): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10782. Dataset_GUI.m (line 4400): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10783. Dataset_GUI.m (line 4400): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10784. Dataset_GUI.m (line 4753): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  10785. Dataset_GUI.m (line 5044): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10786. Dataset_GUI.m (line 5047): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10787. Dataset_GUI.m (line 5047): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10788. Dataset_GUI.m (line 5142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10789. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_081135\\Dataset_GUI.m: Missing arguments validation block\n  10790. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  10791. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  10792. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  10793. Dataset_GUI.m (line 313): Function might be unused.\n  10794. Dataset_GUI.m (line 404): Value assigned to variable might be unused.\n  10795. Dataset_GUI.m (line 626): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10796. Dataset_GUI.m (line 650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10797. Dataset_GUI.m (line 662): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10798. Dataset_GUI.m (line 686): Value assigned to variable might be unused.\n  10799. Dataset_GUI.m (line 938): Value assigned to variable might be unused.\n  10800. Dataset_GUI.m (line 959): Value assigned to variable might be unused.\n  10801. Dataset_GUI.m (line 1133): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10802. Dataset_GUI.m (line 1133): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10803. Dataset_GUI.m (line 1166): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10804. Dataset_GUI.m (line 1247): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10805. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10806. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10807. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10808. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10809. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10810. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10811. Dataset_GUI.m (line 1520): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10812. Dataset_GUI.m (line 1557): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10813. Dataset_GUI.m (line 1557): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10814. Dataset_GUI.m (line 1717): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10815. Dataset_GUI.m (line 1717): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10816. Dataset_GUI.m (line 1821): Value assigned to variable might be unused.\n  10817. Dataset_GUI.m (line 1927): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10818. Dataset_GUI.m (line 1927): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10819. Dataset_GUI.m (line 2329): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10820. Dataset_GUI.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10821. Dataset_GUI.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10822. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10823. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10824. Dataset_GUI.m (line 2594): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10825. Dataset_GUI.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10826. Dataset_GUI.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10827. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10828. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10829. Dataset_GUI.m (line 2630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10830. Dataset_GUI.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10831. Dataset_GUI.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10832. Dataset_GUI.m (line 2665): Value assigned to variable might be unused.\n  10833. Dataset_GUI.m (line 2690): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10834. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10835. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10836. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10837. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10838. Dataset_GUI.m (line 2864): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10839. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10840. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10841. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10842. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10843. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10844. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10845. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10846. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10847. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10848. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10849. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10850. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10851. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10852. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10853. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10854. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10855. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10856. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10857. Dataset_GUI.m (line 3168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10858. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10859. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10860. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10861. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10862. Dataset_GUI.m (line 3199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10863. Dataset_GUI.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10864. Dataset_GUI.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10865. Dataset_GUI.m (line 3212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10866. Dataset_GUI.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10867. Dataset_GUI.m (line 3218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10868. Dataset_GUI.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10869. Dataset_GUI.m (line 3259): Value assigned to variable might be unused.\n  10870. Dataset_GUI.m (line 3495): Value assigned to variable might be unused.\n  10871. Dataset_GUI.m (line 3682): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  10872. Dataset_GUI.m (line 3812): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10873. Dataset_GUI.m (line 3812): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10874. Dataset_GUI.m (line 4045): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10875. Dataset_GUI.m (line 4045): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10876. Dataset_GUI.m (line 4080): Function might be unused.\n  10877. Dataset_GUI.m (line 4131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10878. Dataset_GUI.m (line 4213): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10879. Dataset_GUI.m (line 4330): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10880. Dataset_GUI.m (line 4400): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10881. Dataset_GUI.m (line 4400): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10882. Dataset_GUI.m (line 4753): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  10883. Dataset_GUI.m (line 5044): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10884. Dataset_GUI.m (line 5047): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10885. Dataset_GUI.m (line 5047): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10886. Dataset_GUI.m (line 5142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10887. Dataset_GUI.m (line 5292): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10888. Dataset_GUI.m (line 5292): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10889. Dataset_GUI.m (line 5324): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10890. Dataset_GUI.m (line 5324): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10891. Dataset_GUI.m (line 5451): Value assigned to variable might be unused.\n  10892. Dataset_GUI.m (line 5453): Value assigned to variable might be unused.\n  10893. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_082950\\Dataset_GUI.m: Missing arguments validation block\n  10894. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  10895. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  10896. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  10897. Dataset_GUI.m (line 313): Function might be unused.\n  10898. Dataset_GUI.m (line 404): Value assigned to variable might be unused.\n  10899. Dataset_GUI.m (line 626): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10900. Dataset_GUI.m (line 650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10901. Dataset_GUI.m (line 662): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10902. Dataset_GUI.m (line 686): Value assigned to variable might be unused.\n  10903. Dataset_GUI.m (line 938): Value assigned to variable might be unused.\n  10904. Dataset_GUI.m (line 959): Value assigned to variable might be unused.\n  10905. Dataset_GUI.m (line 1133): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10906. Dataset_GUI.m (line 1133): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10907. Dataset_GUI.m (line 1166): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10908. Dataset_GUI.m (line 1247): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10909. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10910. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10911. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10912. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10913. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10914. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10915. Dataset_GUI.m (line 1520): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10916. Dataset_GUI.m (line 1557): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10917. Dataset_GUI.m (line 1557): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10918. Dataset_GUI.m (line 1717): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10919. Dataset_GUI.m (line 1717): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10920. Dataset_GUI.m (line 1821): Value assigned to variable might be unused.\n  10921. Dataset_GUI.m (line 1927): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10922. Dataset_GUI.m (line 1927): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10923. Dataset_GUI.m (line 2329): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10924. Dataset_GUI.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10925. Dataset_GUI.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10926. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10927. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10928. Dataset_GUI.m (line 2594): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10929. Dataset_GUI.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10930. Dataset_GUI.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10931. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10932. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10933. Dataset_GUI.m (line 2630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10934. Dataset_GUI.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10935. Dataset_GUI.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10936. Dataset_GUI.m (line 2665): Value assigned to variable might be unused.\n  10937. Dataset_GUI.m (line 2690): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10938. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10939. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10940. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10941. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10942. Dataset_GUI.m (line 2864): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10943. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10944. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10945. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10946. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10947. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10948. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10949. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10950. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10951. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10952. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10953. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10954. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10955. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10956. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10957. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10958. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10959. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10960. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10961. Dataset_GUI.m (line 3168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10962. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10963. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10964. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10965. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10966. Dataset_GUI.m (line 3199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10967. Dataset_GUI.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10968. Dataset_GUI.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  10969. Dataset_GUI.m (line 3212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10970. Dataset_GUI.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10971. Dataset_GUI.m (line 3218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10972. Dataset_GUI.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10973. Dataset_GUI.m (line 3259): Value assigned to variable might be unused.\n  10974. Dataset_GUI.m (line 3495): Value assigned to variable might be unused.\n  10975. Dataset_GUI.m (line 3682): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  10976. Dataset_GUI.m (line 3812): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10977. Dataset_GUI.m (line 3812): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10978. Dataset_GUI.m (line 4045): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10979. Dataset_GUI.m (line 4045): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10980. Dataset_GUI.m (line 4080): Function might be unused.\n  10981. Dataset_GUI.m (line 4131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10982. Dataset_GUI.m (line 4213): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10983. Dataset_GUI.m (line 4330): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  10984. Dataset_GUI.m (line 4400): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10985. Dataset_GUI.m (line 4400): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10986. Dataset_GUI.m (line 4753): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  10987. Dataset_GUI.m (line 5044): Input argument might be unused. Consider replacing the argument with ~ instead.\n  10988. Dataset_GUI.m (line 5047): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10989. Dataset_GUI.m (line 5047): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10990. Dataset_GUI.m (line 5142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  10991. Dataset_GUI.m (line 5292): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10992. Dataset_GUI.m (line 5292): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10993. Dataset_GUI.m (line 5324): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  10994. Dataset_GUI.m (line 5324): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  10995. Dataset_GUI.m (line 5451): Value assigned to variable might be unused.\n  10996. Dataset_GUI.m (line 5453): Value assigned to variable might be unused.\n  10997. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_084930\\Dataset_GUI.m: Missing arguments validation block\n  10998. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  10999. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  11000. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  11001. Dataset_GUI.m (line 313): Function might be unused.\n  11002. Dataset_GUI.m (line 404): Value assigned to variable might be unused.\n  11003. Dataset_GUI.m (line 626): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11004. Dataset_GUI.m (line 650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11005. Dataset_GUI.m (line 662): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11006. Dataset_GUI.m (line 686): Value assigned to variable might be unused.\n  11007. Dataset_GUI.m (line 938): Value assigned to variable might be unused.\n  11008. Dataset_GUI.m (line 959): Value assigned to variable might be unused.\n  11009. Dataset_GUI.m (line 1133): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11010. Dataset_GUI.m (line 1133): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11011. Dataset_GUI.m (line 1166): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11012. Dataset_GUI.m (line 1247): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  11013. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11014. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11015. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11016. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11017. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11018. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11019. Dataset_GUI.m (line 1520): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11020. Dataset_GUI.m (line 1557): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11021. Dataset_GUI.m (line 1557): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11022. Dataset_GUI.m (line 1717): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11023. Dataset_GUI.m (line 1717): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11024. Dataset_GUI.m (line 1821): Value assigned to variable might be unused.\n  11025. Dataset_GUI.m (line 1927): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11026. Dataset_GUI.m (line 1927): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11027. Dataset_GUI.m (line 2329): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11028. Dataset_GUI.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11029. Dataset_GUI.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11030. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11031. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11032. Dataset_GUI.m (line 2594): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11033. Dataset_GUI.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11034. Dataset_GUI.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11035. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11036. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11037. Dataset_GUI.m (line 2630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11038. Dataset_GUI.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11039. Dataset_GUI.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11040. Dataset_GUI.m (line 2665): Value assigned to variable might be unused.\n  11041. Dataset_GUI.m (line 2690): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11042. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11043. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11044. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11045. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11046. Dataset_GUI.m (line 2864): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11047. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11048. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11049. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11050. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11051. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11052. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11053. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11054. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11055. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11056. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11057. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11058. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11059. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11060. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11061. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11062. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11063. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11064. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11065. Dataset_GUI.m (line 3168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11066. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11067. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11068. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11069. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11070. Dataset_GUI.m (line 3199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11071. Dataset_GUI.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11072. Dataset_GUI.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11073. Dataset_GUI.m (line 3212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11074. Dataset_GUI.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11075. Dataset_GUI.m (line 3218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11076. Dataset_GUI.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11077. Dataset_GUI.m (line 3259): Value assigned to variable might be unused.\n  11078. Dataset_GUI.m (line 3495): Value assigned to variable might be unused.\n  11079. Dataset_GUI.m (line 3682): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  11080. Dataset_GUI.m (line 3812): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11081. Dataset_GUI.m (line 3812): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11082. Dataset_GUI.m (line 4045): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11083. Dataset_GUI.m (line 4045): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11084. Dataset_GUI.m (line 4080): Function might be unused.\n  11085. Dataset_GUI.m (line 4131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11086. Dataset_GUI.m (line 4213): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11087. Dataset_GUI.m (line 4330): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  11088. Dataset_GUI.m (line 4400): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11089. Dataset_GUI.m (line 4400): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11090. Dataset_GUI.m (line 4753): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  11091. Dataset_GUI.m (line 5044): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11092. Dataset_GUI.m (line 5047): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11093. Dataset_GUI.m (line 5047): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11094. Dataset_GUI.m (line 5142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11095. Dataset_GUI.m (line 5292): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11096. Dataset_GUI.m (line 5292): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11097. Dataset_GUI.m (line 5324): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11098. Dataset_GUI.m (line 5324): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11099. Dataset_GUI.m (line 5451): Value assigned to variable might be unused.\n  11100. Dataset_GUI.m (line 5453): Value assigned to variable might be unused.\n  11101. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_090618\\Dataset_GUI.m: Missing arguments validation block\n  11102. exportCodeIssues.m (line 84): Value assigned to variable might be unused.\n  11103. exportCodeIssues.m (line 118): No Code Analyzer check is found for this check ID.\n  11104. exportCodeIssues.m (line 125): string('...') is not recommended. Use \"...\" instead.\n  11105. exportCodeIssues.m (line 240): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11106. exportCodeIssues.m (line 282): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11107. exportCodeIssues.m (line 350): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11108. exportCodeIssues.m (line 355): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11109. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_090618\\exportCodeIssues.m: Missing arguments validation block\n  11110. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  11111. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  11112. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  11113. Dataset_GUI.m (line 313): Function might be unused.\n  11114. Dataset_GUI.m (line 404): Value assigned to variable might be unused.\n  11115. Dataset_GUI.m (line 626): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11116. Dataset_GUI.m (line 650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11117. Dataset_GUI.m (line 662): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11118. Dataset_GUI.m (line 686): Value assigned to variable might be unused.\n  11119. Dataset_GUI.m (line 938): Value assigned to variable might be unused.\n  11120. Dataset_GUI.m (line 959): Value assigned to variable might be unused.\n  11121. Dataset_GUI.m (line 1133): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11122. Dataset_GUI.m (line 1133): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11123. Dataset_GUI.m (line 1166): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11124. Dataset_GUI.m (line 1247): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  11125. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11126. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11127. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11128. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11129. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11130. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11131. Dataset_GUI.m (line 1520): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11132. Dataset_GUI.m (line 1557): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11133. Dataset_GUI.m (line 1557): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11134. Dataset_GUI.m (line 1717): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11135. Dataset_GUI.m (line 1717): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11136. Dataset_GUI.m (line 1821): Value assigned to variable might be unused.\n  11137. Dataset_GUI.m (line 1927): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11138. Dataset_GUI.m (line 1927): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11139. Dataset_GUI.m (line 2329): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11140. Dataset_GUI.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11141. Dataset_GUI.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11142. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11143. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11144. Dataset_GUI.m (line 2594): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11145. Dataset_GUI.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11146. Dataset_GUI.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11147. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11148. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11149. Dataset_GUI.m (line 2630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11150. Dataset_GUI.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11151. Dataset_GUI.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11152. Dataset_GUI.m (line 2665): Value assigned to variable might be unused.\n  11153. Dataset_GUI.m (line 2690): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11154. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11155. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11156. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11157. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11158. Dataset_GUI.m (line 2864): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11159. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11160. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11161. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11162. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11163. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11164. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11165. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11166. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11167. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11168. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11169. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11170. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11171. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11172. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11173. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11174. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11175. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11176. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11177. Dataset_GUI.m (line 3168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11178. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11179. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11180. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11181. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11182. Dataset_GUI.m (line 3199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11183. Dataset_GUI.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11184. Dataset_GUI.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11185. Dataset_GUI.m (line 3212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11186. Dataset_GUI.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11187. Dataset_GUI.m (line 3218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11188. Dataset_GUI.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11189. Dataset_GUI.m (line 3259): Value assigned to variable might be unused.\n  11190. Dataset_GUI.m (line 3495): Value assigned to variable might be unused.\n  11191. Dataset_GUI.m (line 3682): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  11192. Dataset_GUI.m (line 3812): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11193. Dataset_GUI.m (line 3812): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11194. Dataset_GUI.m (line 4045): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11195. Dataset_GUI.m (line 4045): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11196. Dataset_GUI.m (line 4080): Function might be unused.\n  11197. Dataset_GUI.m (line 4131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11198. Dataset_GUI.m (line 4213): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11199. Dataset_GUI.m (line 4330): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  11200. Dataset_GUI.m (line 4400): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11201. Dataset_GUI.m (line 4400): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11202. Dataset_GUI.m (line 4753): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  11203. Dataset_GUI.m (line 5044): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11204. Dataset_GUI.m (line 5047): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11205. Dataset_GUI.m (line 5047): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11206. Dataset_GUI.m (line 5142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11207. Dataset_GUI.m (line 5292): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11208. Dataset_GUI.m (line 5292): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11209. Dataset_GUI.m (line 5324): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11210. Dataset_GUI.m (line 5324): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11211. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_091542\\Dataset_GUI.m: Missing arguments validation block\n  11212. exportCodeIssues.m (line 84): Value assigned to variable might be unused.\n  11213. exportCodeIssues.m (line 118): No Code Analyzer check is found for this check ID.\n  11214. exportCodeIssues.m (line 125): string('...') is not recommended. Use \"...\" instead.\n  11215. exportCodeIssues.m (line 240): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11216. exportCodeIssues.m (line 282): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11217. exportCodeIssues.m (line 350): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11218. exportCodeIssues.m (line 355): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11219. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_091542\\exportCodeIssues.m: Missing arguments validation block\n  11220. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  11221. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  11222. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  11223. Dataset_GUI.m (line 313): Function might be unused.\n  11224. Dataset_GUI.m (line 404): Value assigned to variable might be unused.\n  11225. Dataset_GUI.m (line 626): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11226. Dataset_GUI.m (line 650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11227. Dataset_GUI.m (line 662): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11228. Dataset_GUI.m (line 686): Value assigned to variable might be unused.\n  11229. Dataset_GUI.m (line 938): Value assigned to variable might be unused.\n  11230. Dataset_GUI.m (line 959): Value assigned to variable might be unused.\n  11231. Dataset_GUI.m (line 1133): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11232. Dataset_GUI.m (line 1133): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11233. Dataset_GUI.m (line 1166): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11234. Dataset_GUI.m (line 1247): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  11235. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11236. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11237. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11238. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11239. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11240. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11241. Dataset_GUI.m (line 1520): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11242. Dataset_GUI.m (line 1557): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11243. Dataset_GUI.m (line 1557): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11244. Dataset_GUI.m (line 1717): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11245. Dataset_GUI.m (line 1717): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11246. Dataset_GUI.m (line 1821): Value assigned to variable might be unused.\n  11247. Dataset_GUI.m (line 1927): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11248. Dataset_GUI.m (line 1927): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11249. Dataset_GUI.m (line 2329): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11250. Dataset_GUI.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11251. Dataset_GUI.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11252. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11253. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11254. Dataset_GUI.m (line 2594): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11255. Dataset_GUI.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11256. Dataset_GUI.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11257. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11258. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11259. Dataset_GUI.m (line 2630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11260. Dataset_GUI.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11261. Dataset_GUI.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11262. Dataset_GUI.m (line 2665): Value assigned to variable might be unused.\n  11263. Dataset_GUI.m (line 2690): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11264. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11265. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11266. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11267. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11268. Dataset_GUI.m (line 2864): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11269. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11270. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11271. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11272. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11273. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11274. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11275. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11276. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11277. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11278. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11279. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11280. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11281. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11282. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11283. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11284. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11285. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11286. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11287. Dataset_GUI.m (line 3168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11288. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11289. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11290. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11291. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11292. Dataset_GUI.m (line 3199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11293. Dataset_GUI.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11294. Dataset_GUI.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11295. Dataset_GUI.m (line 3212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11296. Dataset_GUI.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11297. Dataset_GUI.m (line 3218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11298. Dataset_GUI.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11299. Dataset_GUI.m (line 3259): Value assigned to variable might be unused.\n  11300. Dataset_GUI.m (line 3495): Value assigned to variable might be unused.\n  11301. Dataset_GUI.m (line 3682): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  11302. Dataset_GUI.m (line 3812): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11303. Dataset_GUI.m (line 3812): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11304. Dataset_GUI.m (line 4045): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11305. Dataset_GUI.m (line 4045): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11306. Dataset_GUI.m (line 4080): Function might be unused.\n  11307. Dataset_GUI.m (line 4131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11308. Dataset_GUI.m (line 4213): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11309. Dataset_GUI.m (line 4330): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  11310. Dataset_GUI.m (line 4400): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11311. Dataset_GUI.m (line 4400): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11312. Dataset_GUI.m (line 4753): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  11313. Dataset_GUI.m (line 5044): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11314. Dataset_GUI.m (line 5047): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11315. Dataset_GUI.m (line 5047): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11316. Dataset_GUI.m (line 5142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11317. Dataset_GUI.m (line 5292): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11318. Dataset_GUI.m (line 5292): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11319. Dataset_GUI.m (line 5324): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11320. Dataset_GUI.m (line 5324): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11321. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_110150\\Dataset_GUI.m: Missing arguments validation block\n  11322. cleanup_matlab_path.m (line 32): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  11323. exportCodeIssues.m (line 1): Function might be unused.\n  11324. exportCodeIssues.m (line 1): Unable to define local function 'exportCodeIssues' because it has the same name as the file.\n  11325. exportCodeIssues.m (line 84): Value assigned to variable might be unused.\n  11326. exportCodeIssues.m (line 118): No Code Analyzer check is found for this check ID.\n  11327. exportCodeIssues.m (line 125): string('...') is not recommended. Use \"...\" instead.\n  11328. exportCodeIssues.m (line 240): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11329. exportCodeIssues.m (line 282): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11330. exportCodeIssues.m (line 326): Parse error at ELSE: usage might be invalid MATLAB syntax.\n  11331. exportCodeIssues.m (line 328): Parse error at END: usage might be invalid MATLAB syntax.\n  11332. exportCodeIssues.m (line 329): Parse error at END: usage might be invalid MATLAB syntax.\n  11333. exportCodeIssues.m (line 370): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11334. exportCodeIssues.m (line 375): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11335. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250823_110150\\exportCodeIssues.m: Missing arguments validation block\n  11336. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  11337. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  11338. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  11339. Dataset_GUI.m (line 316): Function might be unused.\n  11340. Dataset_GUI.m (line 407): Value assigned to variable might be unused.\n  11341. Dataset_GUI.m (line 629): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11342. Dataset_GUI.m (line 653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11343. Dataset_GUI.m (line 665): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11344. Dataset_GUI.m (line 689): Value assigned to variable might be unused.\n  11345. Dataset_GUI.m (line 941): Value assigned to variable might be unused.\n  11346. Dataset_GUI.m (line 962): Value assigned to variable might be unused.\n  11347. Dataset_GUI.m (line 1136): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11348. Dataset_GUI.m (line 1136): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11349. Dataset_GUI.m (line 1169): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11350. Dataset_GUI.m (line 1250): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  11351. Dataset_GUI.m (line 1490): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11352. Dataset_GUI.m (line 1490): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11353. Dataset_GUI.m (line 1496): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11354. Dataset_GUI.m (line 1496): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11355. Dataset_GUI.m (line 1507): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11356. Dataset_GUI.m (line 1507): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11357. Dataset_GUI.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11358. Dataset_GUI.m (line 1560): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11359. Dataset_GUI.m (line 1560): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11360. Dataset_GUI.m (line 1720): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11361. Dataset_GUI.m (line 1720): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11362. Dataset_GUI.m (line 1824): Value assigned to variable might be unused.\n  11363. Dataset_GUI.m (line 1930): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11364. Dataset_GUI.m (line 1930): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11365. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11366. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11367. Dataset_GUI.m (line 2334): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11368. Dataset_GUI.m (line 2335): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11369. Dataset_GUI.m (line 2336): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11370. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11371. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11372. Dataset_GUI.m (line 2599): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11373. Dataset_GUI.m (line 2600): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11374. Dataset_GUI.m (line 2601): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11375. Dataset_GUI.m (line 2633): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11376. Dataset_GUI.m (line 2634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11377. Dataset_GUI.m (line 2635): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11378. Dataset_GUI.m (line 2668): Value assigned to variable might be unused.\n  11379. Dataset_GUI.m (line 2693): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11380. Dataset_GUI.m (line 2841): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11381. Dataset_GUI.m (line 2841): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11382. Dataset_GUI.m (line 2854): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11383. Dataset_GUI.m (line 2854): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11384. Dataset_GUI.m (line 2867): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11385. Dataset_GUI.m (line 2879): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11386. Dataset_GUI.m (line 2879): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11387. Dataset_GUI.m (line 2935): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11388. Dataset_GUI.m (line 2935): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11389. Dataset_GUI.m (line 2986): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11390. Dataset_GUI.m (line 2986): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11391. Dataset_GUI.m (line 3033): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11392. Dataset_GUI.m (line 3033): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11393. Dataset_GUI.m (line 3063): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11394. Dataset_GUI.m (line 3063): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11395. Dataset_GUI.m (line 3085): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11396. Dataset_GUI.m (line 3085): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11397. Dataset_GUI.m (line 3106): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11398. Dataset_GUI.m (line 3106): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11399. Dataset_GUI.m (line 3131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11400. Dataset_GUI.m (line 3131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11401. Dataset_GUI.m (line 3156): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11402. Dataset_GUI.m (line 3156): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11403. Dataset_GUI.m (line 3171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11404. Dataset_GUI.m (line 3183): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11405. Dataset_GUI.m (line 3183): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11406. Dataset_GUI.m (line 3189): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11407. Dataset_GUI.m (line 3189): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11408. Dataset_GUI.m (line 3202): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11409. Dataset_GUI.m (line 3203): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11410. Dataset_GUI.m (line 3204): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11411. Dataset_GUI.m (line 3215): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11412. Dataset_GUI.m (line 3216): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11413. Dataset_GUI.m (line 3221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11414. Dataset_GUI.m (line 3222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11415. Dataset_GUI.m (line 3262): Value assigned to variable might be unused.\n  11416. Dataset_GUI.m (line 3498): Value assigned to variable might be unused.\n  11417. Dataset_GUI.m (line 3684): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  11418. Dataset_GUI.m (line 3814): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11419. Dataset_GUI.m (line 3814): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11420. Dataset_GUI.m (line 4047): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11421. Dataset_GUI.m (line 4047): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11422. Dataset_GUI.m (line 4082): Function might be unused.\n  11423. Dataset_GUI.m (line 4133): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11424. Dataset_GUI.m (line 4215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11425. Dataset_GUI.m (line 4332): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  11426. Dataset_GUI.m (line 4402): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11427. Dataset_GUI.m (line 4402): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11428. Dataset_GUI.m (line 4792): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11429. Dataset_GUI.m (line 4795): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11430. Dataset_GUI.m (line 4795): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11431. Dataset_GUI.m (line 4890): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11432. Dataset_GUI.m (line 5040): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11433. Dataset_GUI.m (line 5040): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11434. Dataset_GUI.m (line 5072): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11435. Dataset_GUI.m (line 5072): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11436. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250827_072956\\Dataset_GUI.m: Missing arguments validation block\n  11437. cleanup_matlab_path.m (line 32): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  11438. exportCodeIssues.m (line 1): Function might be unused.\n  11439. exportCodeIssues.m (line 1): Unable to define local function 'exportCodeIssues' because it has the same name as the file.\n  11440. exportCodeIssues.m (line 84): Value assigned to variable might be unused.\n  11441. exportCodeIssues.m (line 118): No Code Analyzer check is found for this check ID.\n  11442. exportCodeIssues.m (line 125): string('...') is not recommended. Use \"...\" instead.\n  11443. exportCodeIssues.m (line 240): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11444. exportCodeIssues.m (line 282): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11445. exportCodeIssues.m (line 326): Parse error at ELSE: usage might be invalid MATLAB syntax.\n  11446. exportCodeIssues.m (line 328): Parse error at END: usage might be invalid MATLAB syntax.\n  11447. exportCodeIssues.m (line 329): Parse error at END: usage might be invalid MATLAB syntax.\n  11448. exportCodeIssues.m (line 370): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11449. exportCodeIssues.m (line 375): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11450. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250827_072956\\exportCodeIssues.m: Missing arguments validation block\n  11451. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  11452. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  11453. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  11454. Dataset_GUI.m (line 316): Function might be unused.\n  11455. Dataset_GUI.m (line 407): Value assigned to variable might be unused.\n  11456. Dataset_GUI.m (line 629): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11457. Dataset_GUI.m (line 653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11458. Dataset_GUI.m (line 665): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11459. Dataset_GUI.m (line 689): Value assigned to variable might be unused.\n  11460. Dataset_GUI.m (line 941): Value assigned to variable might be unused.\n  11461. Dataset_GUI.m (line 962): Value assigned to variable might be unused.\n  11462. Dataset_GUI.m (line 1136): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11463. Dataset_GUI.m (line 1136): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11464. Dataset_GUI.m (line 1169): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11465. Dataset_GUI.m (line 1250): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  11466. Dataset_GUI.m (line 1490): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11467. Dataset_GUI.m (line 1490): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11468. Dataset_GUI.m (line 1496): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11469. Dataset_GUI.m (line 1496): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11470. Dataset_GUI.m (line 1507): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11471. Dataset_GUI.m (line 1507): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11472. Dataset_GUI.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11473. Dataset_GUI.m (line 1560): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11474. Dataset_GUI.m (line 1560): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11475. Dataset_GUI.m (line 1720): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11476. Dataset_GUI.m (line 1720): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11477. Dataset_GUI.m (line 1824): Value assigned to variable might be unused.\n  11478. Dataset_GUI.m (line 1930): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11479. Dataset_GUI.m (line 1930): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11480. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11481. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11482. Dataset_GUI.m (line 2334): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11483. Dataset_GUI.m (line 2335): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11484. Dataset_GUI.m (line 2336): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11485. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11486. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11487. Dataset_GUI.m (line 2599): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11488. Dataset_GUI.m (line 2600): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11489. Dataset_GUI.m (line 2601): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11490. Dataset_GUI.m (line 2633): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11491. Dataset_GUI.m (line 2634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11492. Dataset_GUI.m (line 2635): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11493. Dataset_GUI.m (line 2668): Value assigned to variable might be unused.\n  11494. Dataset_GUI.m (line 2693): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11495. Dataset_GUI.m (line 2841): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11496. Dataset_GUI.m (line 2841): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11497. Dataset_GUI.m (line 2854): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11498. Dataset_GUI.m (line 2854): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11499. Dataset_GUI.m (line 2867): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11500. Dataset_GUI.m (line 2879): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11501. Dataset_GUI.m (line 2879): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11502. Dataset_GUI.m (line 2935): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11503. Dataset_GUI.m (line 2935): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11504. Dataset_GUI.m (line 2986): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11505. Dataset_GUI.m (line 2986): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11506. Dataset_GUI.m (line 3033): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11507. Dataset_GUI.m (line 3033): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11508. Dataset_GUI.m (line 3063): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11509. Dataset_GUI.m (line 3063): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11510. Dataset_GUI.m (line 3085): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11511. Dataset_GUI.m (line 3085): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11512. Dataset_GUI.m (line 3106): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11513. Dataset_GUI.m (line 3106): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11514. Dataset_GUI.m (line 3131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11515. Dataset_GUI.m (line 3131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11516. Dataset_GUI.m (line 3156): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11517. Dataset_GUI.m (line 3156): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11518. Dataset_GUI.m (line 3171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11519. Dataset_GUI.m (line 3183): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11520. Dataset_GUI.m (line 3183): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11521. Dataset_GUI.m (line 3189): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11522. Dataset_GUI.m (line 3189): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11523. Dataset_GUI.m (line 3202): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11524. Dataset_GUI.m (line 3203): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11525. Dataset_GUI.m (line 3204): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11526. Dataset_GUI.m (line 3215): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11527. Dataset_GUI.m (line 3216): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11528. Dataset_GUI.m (line 3221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11529. Dataset_GUI.m (line 3222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11530. Dataset_GUI.m (line 3262): Value assigned to variable might be unused.\n  11531. Dataset_GUI.m (line 3498): Value assigned to variable might be unused.\n  11532. Dataset_GUI.m (line 3684): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  11533. Dataset_GUI.m (line 3814): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11534. Dataset_GUI.m (line 3814): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11535. Dataset_GUI.m (line 4047): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11536. Dataset_GUI.m (line 4047): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11537. Dataset_GUI.m (line 4082): Function might be unused.\n  11538. Dataset_GUI.m (line 4133): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11539. Dataset_GUI.m (line 4215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11540. Dataset_GUI.m (line 4332): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  11541. Dataset_GUI.m (line 4402): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11542. Dataset_GUI.m (line 4402): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11543. Dataset_GUI.m (line 4792): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11544. Dataset_GUI.m (line 4795): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11545. Dataset_GUI.m (line 4795): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11546. Dataset_GUI.m (line 4890): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11547. Dataset_GUI.m (line 5040): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11548. Dataset_GUI.m (line 5040): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11549. Dataset_GUI.m (line 5072): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11550. Dataset_GUI.m (line 5072): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11551. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250827_092217\\Dataset_GUI.m: Missing arguments validation block\n  11552. cleanup_matlab_path.m (line 32): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  11553. exportCodeIssues.m (line 1): Function might be unused.\n  11554. exportCodeIssues.m (line 1): Unable to define local function 'exportCodeIssues' because it has the same name as the file.\n  11555. exportCodeIssues.m (line 84): Value assigned to variable might be unused.\n  11556. exportCodeIssues.m (line 118): No Code Analyzer check is found for this check ID.\n  11557. exportCodeIssues.m (line 125): string('...') is not recommended. Use \"...\" instead.\n  11558. exportCodeIssues.m (line 240): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11559. exportCodeIssues.m (line 282): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11560. exportCodeIssues.m (line 326): Parse error at ELSE: usage might be invalid MATLAB syntax.\n  11561. exportCodeIssues.m (line 328): Parse error at END: usage might be invalid MATLAB syntax.\n  11562. exportCodeIssues.m (line 329): Parse error at END: usage might be invalid MATLAB syntax.\n  11563. exportCodeIssues.m (line 370): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11564. exportCodeIssues.m (line 375): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11565. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250827_092217\\exportCodeIssues.m: Missing arguments validation block\n  11566. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  11567. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  11568. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  11569. Dataset_GUI.m (line 316): Function might be unused.\n  11570. Dataset_GUI.m (line 407): Value assigned to variable might be unused.\n  11571. Dataset_GUI.m (line 629): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11572. Dataset_GUI.m (line 653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11573. Dataset_GUI.m (line 665): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11574. Dataset_GUI.m (line 689): Value assigned to variable might be unused.\n  11575. Dataset_GUI.m (line 941): Value assigned to variable might be unused.\n  11576. Dataset_GUI.m (line 962): Value assigned to variable might be unused.\n  11577. Dataset_GUI.m (line 1136): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11578. Dataset_GUI.m (line 1136): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11579. Dataset_GUI.m (line 1169): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11580. Dataset_GUI.m (line 1250): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  11581. Dataset_GUI.m (line 1490): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11582. Dataset_GUI.m (line 1490): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11583. Dataset_GUI.m (line 1496): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11584. Dataset_GUI.m (line 1496): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11585. Dataset_GUI.m (line 1507): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11586. Dataset_GUI.m (line 1507): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11587. Dataset_GUI.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11588. Dataset_GUI.m (line 1560): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11589. Dataset_GUI.m (line 1560): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11590. Dataset_GUI.m (line 1720): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11591. Dataset_GUI.m (line 1720): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11592. Dataset_GUI.m (line 1824): Value assigned to variable might be unused.\n  11593. Dataset_GUI.m (line 1930): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11594. Dataset_GUI.m (line 1930): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11595. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11596. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11597. Dataset_GUI.m (line 2334): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11598. Dataset_GUI.m (line 2335): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11599. Dataset_GUI.m (line 2336): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11600. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11601. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11602. Dataset_GUI.m (line 2599): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11603. Dataset_GUI.m (line 2600): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11604. Dataset_GUI.m (line 2601): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11605. Dataset_GUI.m (line 2633): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11606. Dataset_GUI.m (line 2634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11607. Dataset_GUI.m (line 2635): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11608. Dataset_GUI.m (line 2668): Value assigned to variable might be unused.\n  11609. Dataset_GUI.m (line 2693): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11610. Dataset_GUI.m (line 2841): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11611. Dataset_GUI.m (line 2841): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11612. Dataset_GUI.m (line 2854): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11613. Dataset_GUI.m (line 2854): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11614. Dataset_GUI.m (line 2867): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11615. Dataset_GUI.m (line 2879): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11616. Dataset_GUI.m (line 2879): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11617. Dataset_GUI.m (line 2935): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11618. Dataset_GUI.m (line 2935): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11619. Dataset_GUI.m (line 2986): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11620. Dataset_GUI.m (line 2986): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11621. Dataset_GUI.m (line 3033): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11622. Dataset_GUI.m (line 3033): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11623. Dataset_GUI.m (line 3063): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11624. Dataset_GUI.m (line 3063): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11625. Dataset_GUI.m (line 3085): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11626. Dataset_GUI.m (line 3085): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11627. Dataset_GUI.m (line 3106): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11628. Dataset_GUI.m (line 3106): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11629. Dataset_GUI.m (line 3131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11630. Dataset_GUI.m (line 3131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11631. Dataset_GUI.m (line 3156): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11632. Dataset_GUI.m (line 3156): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11633. Dataset_GUI.m (line 3171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11634. Dataset_GUI.m (line 3183): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11635. Dataset_GUI.m (line 3183): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11636. Dataset_GUI.m (line 3189): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11637. Dataset_GUI.m (line 3189): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11638. Dataset_GUI.m (line 3202): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11639. Dataset_GUI.m (line 3203): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11640. Dataset_GUI.m (line 3204): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11641. Dataset_GUI.m (line 3215): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11642. Dataset_GUI.m (line 3216): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11643. Dataset_GUI.m (line 3221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11644. Dataset_GUI.m (line 3222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11645. Dataset_GUI.m (line 3262): Value assigned to variable might be unused.\n  11646. Dataset_GUI.m (line 3498): Value assigned to variable might be unused.\n  11647. Dataset_GUI.m (line 3684): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  11648. Dataset_GUI.m (line 3814): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11649. Dataset_GUI.m (line 3814): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11650. Dataset_GUI.m (line 4047): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11651. Dataset_GUI.m (line 4047): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11652. Dataset_GUI.m (line 4082): Function might be unused.\n  11653. Dataset_GUI.m (line 4133): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11654. Dataset_GUI.m (line 4215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11655. Dataset_GUI.m (line 4332): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  11656. Dataset_GUI.m (line 4402): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11657. Dataset_GUI.m (line 4402): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11658. Dataset_GUI.m (line 4792): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11659. Dataset_GUI.m (line 4795): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11660. Dataset_GUI.m (line 4795): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11661. Dataset_GUI.m (line 4890): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11662. Dataset_GUI.m (line 5040): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11663. Dataset_GUI.m (line 5040): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11664. Dataset_GUI.m (line 5072): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11665. Dataset_GUI.m (line 5072): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11666. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250828_193954\\Dataset_GUI.m: Missing arguments validation block\n  11667. cleanup_matlab_path.m (line 32): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  11668. exportCodeIssues.m (line 1): Function might be unused.\n  11669. exportCodeIssues.m (line 1): Unable to define local function 'exportCodeIssues' because it has the same name as the file.\n  11670. exportCodeIssues.m (line 84): Value assigned to variable might be unused.\n  11671. exportCodeIssues.m (line 118): No Code Analyzer check is found for this check ID.\n  11672. exportCodeIssues.m (line 125): string('...') is not recommended. Use \"...\" instead.\n  11673. exportCodeIssues.m (line 240): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11674. exportCodeIssues.m (line 282): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11675. exportCodeIssues.m (line 326): Parse error at ELSE: usage might be invalid MATLAB syntax.\n  11676. exportCodeIssues.m (line 328): Parse error at END: usage might be invalid MATLAB syntax.\n  11677. exportCodeIssues.m (line 329): Parse error at END: usage might be invalid MATLAB syntax.\n  11678. exportCodeIssues.m (line 370): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11679. exportCodeIssues.m (line 375): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11680. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250828_193954\\exportCodeIssues.m: Missing arguments validation block\n  11681. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  11682. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  11683. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  11684. Dataset_GUI.m (line 313): Function might be unused.\n  11685. Dataset_GUI.m (line 404): Value assigned to variable might be unused.\n  11686. Dataset_GUI.m (line 626): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11687. Dataset_GUI.m (line 650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11688. Dataset_GUI.m (line 662): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11689. Dataset_GUI.m (line 686): Value assigned to variable might be unused.\n  11690. Dataset_GUI.m (line 938): Value assigned to variable might be unused.\n  11691. Dataset_GUI.m (line 959): Value assigned to variable might be unused.\n  11692. Dataset_GUI.m (line 1133): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11693. Dataset_GUI.m (line 1133): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11694. Dataset_GUI.m (line 1166): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11695. Dataset_GUI.m (line 1247): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  11696. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11697. Dataset_GUI.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11698. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11699. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11700. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11701. Dataset_GUI.m (line 1504): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11702. Dataset_GUI.m (line 1520): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11703. Dataset_GUI.m (line 1557): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11704. Dataset_GUI.m (line 1557): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11705. Dataset_GUI.m (line 1717): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11706. Dataset_GUI.m (line 1717): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11707. Dataset_GUI.m (line 1821): Value assigned to variable might be unused.\n  11708. Dataset_GUI.m (line 1927): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11709. Dataset_GUI.m (line 1927): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11710. Dataset_GUI.m (line 2329): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11711. Dataset_GUI.m (line 2330): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11712. Dataset_GUI.m (line 2331): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11713. Dataset_GUI.m (line 2332): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11714. Dataset_GUI.m (line 2333): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11715. Dataset_GUI.m (line 2594): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11716. Dataset_GUI.m (line 2595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11717. Dataset_GUI.m (line 2596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11718. Dataset_GUI.m (line 2597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11719. Dataset_GUI.m (line 2598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11720. Dataset_GUI.m (line 2630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11721. Dataset_GUI.m (line 2631): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11722. Dataset_GUI.m (line 2632): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11723. Dataset_GUI.m (line 2665): Value assigned to variable might be unused.\n  11724. Dataset_GUI.m (line 2690): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11725. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11726. Dataset_GUI.m (line 2838): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11727. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11728. Dataset_GUI.m (line 2851): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11729. Dataset_GUI.m (line 2864): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11730. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11731. Dataset_GUI.m (line 2876): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11732. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11733. Dataset_GUI.m (line 2932): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11734. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11735. Dataset_GUI.m (line 2983): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11736. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11737. Dataset_GUI.m (line 3030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11738. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11739. Dataset_GUI.m (line 3060): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11740. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11741. Dataset_GUI.m (line 3082): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11742. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11743. Dataset_GUI.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11744. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11745. Dataset_GUI.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11746. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11747. Dataset_GUI.m (line 3153): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11748. Dataset_GUI.m (line 3168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11749. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11750. Dataset_GUI.m (line 3180): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11751. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11752. Dataset_GUI.m (line 3186): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11753. Dataset_GUI.m (line 3199): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11754. Dataset_GUI.m (line 3200): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11755. Dataset_GUI.m (line 3201): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11756. Dataset_GUI.m (line 3212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11757. Dataset_GUI.m (line 3213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11758. Dataset_GUI.m (line 3218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11759. Dataset_GUI.m (line 3219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11760. Dataset_GUI.m (line 3259): Value assigned to variable might be unused.\n  11761. Dataset_GUI.m (line 3495): Value assigned to variable might be unused.\n  11762. Dataset_GUI.m (line 3682): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  11763. Dataset_GUI.m (line 3812): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11764. Dataset_GUI.m (line 3812): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11765. Dataset_GUI.m (line 4045): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11766. Dataset_GUI.m (line 4045): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11767. Dataset_GUI.m (line 4080): Function might be unused.\n  11768. Dataset_GUI.m (line 4131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11769. Dataset_GUI.m (line 4213): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11770. Dataset_GUI.m (line 4330): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  11771. Dataset_GUI.m (line 4400): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11772. Dataset_GUI.m (line 4400): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11773. Dataset_GUI.m (line 4753): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  11774. Dataset_GUI.m (line 5044): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11775. Dataset_GUI.m (line 5047): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11776. Dataset_GUI.m (line 5047): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11777. Dataset_GUI.m (line 5142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11778. Dataset_GUI.m (line 5292): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11779. Dataset_GUI.m (line 5292): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11780. Dataset_GUI.m (line 5324): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11781. Dataset_GUI.m (line 5324): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11782. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250828_201053\\Dataset_GUI.m: Missing arguments validation block\n  11783. cleanup_matlab_path.m (line 32): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  11784. exportCodeIssues.m (line 1): Function might be unused.\n  11785. exportCodeIssues.m (line 1): Unable to define local function 'exportCodeIssues' because it has the same name as the file.\n  11786. exportCodeIssues.m (line 84): Value assigned to variable might be unused.\n  11787. exportCodeIssues.m (line 118): No Code Analyzer check is found for this check ID.\n  11788. exportCodeIssues.m (line 125): string('...') is not recommended. Use \"...\" instead.\n  11789. exportCodeIssues.m (line 240): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11790. exportCodeIssues.m (line 282): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11791. exportCodeIssues.m (line 326): Parse error at ELSE: usage might be invalid MATLAB syntax.\n  11792. exportCodeIssues.m (line 328): Parse error at END: usage might be invalid MATLAB syntax.\n  11793. exportCodeIssues.m (line 329): Parse error at END: usage might be invalid MATLAB syntax.\n  11794. exportCodeIssues.m (line 370): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11795. exportCodeIssues.m (line 375): A Code Analyzer message was once suppressed here, but the message is no longer generated.\n  11796. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Run_Backup_20250828_201053\\exportCodeIssues.m: Missing arguments validation block\n  11797. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  11798. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  11799. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  11800. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  11801. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11802. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11803. Data_GUI.m (line 725): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11804. Data_GUI.m (line 726): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11805. Data_GUI.m (line 727): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11806. Data_GUI.m (line 728): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11807. Data_GUI.m (line 729): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11808. Data_GUI.m (line 745): Function might be unused.\n  11809. Data_GUI.m (line 970): Function might be unused.\n  11810. Data_GUI.m (line 985): Value assigned to variable might be unused.\n  11811. Data_GUI.m (line 1007): Function might be unused.\n  11812. Data_GUI.m (line 1184): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11813. Data_GUI.m (line 1185): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11814. Data_GUI.m (line 1186): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11815. Data_GUI.m (line 1187): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11816. Data_GUI.m (line 1188): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11817. Data_GUI.m (line 1218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11818. Data_GUI.m (line 1219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11819. Data_GUI.m (line 1220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11820. Data_GUI.m (line 1240): Function might be unused.\n  11821. Data_GUI.m (line 1281): Function might be unused.\n  11822. Data_GUI.m (line 1357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11823. Data_GUI.m (line 1427): Value assigned to variable might be unused.\n  11824. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11825. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11826. Data_GUI.m (line 1569): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11827. Data_GUI.m (line 1569): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11828. Data_GUI.m (line 1579): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11829. Data_GUI.m (line 1579): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11830. Data_GUI.m (line 1592): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11831. Data_GUI.m (line 1593): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11832. Data_GUI.m (line 1594): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11833. Data_GUI.m (line 1595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11834. Data_GUI.m (line 1624): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11835. Data_GUI.m (line 1624): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11836. Data_GUI.m (line 1637): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11837. Data_GUI.m (line 1638): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11838. Data_GUI.m (line 1639): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11839. Data_GUI.m (line 1650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11840. Data_GUI.m (line 1651): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11841. Data_GUI.m (line 1656): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11842. Data_GUI.m (line 1657): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11843. Data_GUI.m (line 1696): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11844. Data_GUI.m (line 1696): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11845. Data_GUI.m (line 1709): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11846. Data_GUI.m (line 1709): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11847. Data_GUI.m (line 1722): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11848. Data_GUI.m (line 1734): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11849. Data_GUI.m (line 1734): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11850. Data_GUI.m (line 1790): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11851. Data_GUI.m (line 1790): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11852. Data_GUI.m (line 1840): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11853. Data_GUI.m (line 1840): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11854. Data_GUI.m (line 1887): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11855. Data_GUI.m (line 1887): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11856. Data_GUI.m (line 1917): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11857. Data_GUI.m (line 1917): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11858. Data_GUI.m (line 1939): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11859. Data_GUI.m (line 1939): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11860. Data_GUI.m (line 1960): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11861. Data_GUI.m (line 1960): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11862. Data_GUI.m (line 1984): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11863. Data_GUI.m (line 1984): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11864. Data_GUI.m (line 2009): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11865. Data_GUI.m (line 2009): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11866. Data_GUI.m (line 2024): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11867. Data_GUI.m (line 2035): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11868. Data_GUI.m (line 2035): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11869. Data_GUI.m (line 2040): Function might be unused.\n  11870. Data_GUI.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11871. Data_GUI.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11872. Data_GUI.m (line 2053): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11873. Data_GUI.m (line 2053): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11874. Data_GUI.m (line 2067): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11875. Data_GUI.m (line 2067): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11876. Data_GUI.m (line 2249): Value assigned to variable might be unused.\n  11877. Data_GUI.m (line 2308): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  11878. Data_GUI.m (line 2452): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  11879. Data_GUI.m (line 2591): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11880. Data_GUI.m (line 2591): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11881. Data_GUI.m (line 2713): Function might be unused.\n  11882. Data_GUI.m (line 2890): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11883. Data_GUI.m (line 2890): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11884. Data_GUI.m (line 2922): Function might be unused.\n  11885. Data_GUI.m (line 3073): Function might be unused.\n  11886. Data_GUI.m (line 3151): Function might be unused.\n  11887. Data_GUI.m (line 3166): This keyword might not be aligned with its matching END on line 3177.\n  11888. Data_GUI.m (line 3179): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  11889. Data_GUI.m (line 3395): This keyword might not be aligned with its matching END on line 3397.\n  11890. Data_GUI.m (line 3499): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  11891. Data_GUI.m (line 3534): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11892. Data_GUI.m (line 3568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11893. Data_GUI.m (line 3582): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11894. Data_GUI.m (line 3590): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11895. Data_GUI.m (line 3590): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11896. Data_GUI.m (line 3789): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11897. Data_GUI.m (line 3829): Function might be unused.\n  11898. Data_GUI.m (line 3861): Function might be unused.\n  11899. Data_GUI.m (line 3873): Value assigned to variable might be unused.\n  11900. Data_GUI.m (line 3883): Value assigned to variable might be unused.\n  11901. Data_GUI.m (line 3888): Value assigned to variable might be unused.\n  11902. Data_GUI.m (line 3893): Value assigned to variable might be unused.\n  11903. Data_GUI.m (line 3910): Value assigned to variable might be unused.\n  11904. Data_GUI.m (line 4019): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11905. Data_GUI.m (line 4020): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11906. Data_GUI.m (line 4027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11907. Data_GUI.m (line 4028): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11908. Data_GUI.m (line 4041): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11909. Data_GUI.m (line 4043): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11910. Data_GUI.m (line 4065): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11911. Data_GUI.m (line 4066): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11912. Data_GUI.m (line 4086): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11913. Data_GUI.m (line 4087): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11914. Data_GUI.m (line 4099): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11915. Data_GUI.m (line 4100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11916. Data_GUI.m (line 4118): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11917. Data_GUI.m (line 4119): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11918. Data_GUI.m (line 4163): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11919. Data_GUI.m (line 4164): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11920. Data_GUI.m (line 4171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11921. Data_GUI.m (line 4172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11922. Data_GUI.m (line 4191): Function might be unused.\n  11923. Data_GUI.m (line 4249): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11924. Data_GUI.m (line 4250): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11925. Data_GUI.m (line 4260): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11926. Data_GUI.m (line 4261): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11927. Data_GUI.m (line 4280): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11928. Data_GUI.m (line 4281): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11929. Data_GUI.m (line 4334): Function might be unused.\n  11930. Data_GUI.m (line 4381): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11931. Data_GUI.m (line 4446): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11932. Data_GUI.m (line 4447): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11933. Data_GUI.m (line 4495): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11934. Data_GUI.m (line 4504): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11935. Data_GUI.m (line 4509): This statement (and possibly following ones) cannot be reached.\n  11936. Data_GUI.m (line 4511): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11937. Data_GUI.m (line 4518): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11938. Data_GUI.m (line 4548): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11939. Data_GUI.m (line 4588): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11940. Data_GUI.m (line 4611): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11941. Data_GUI.m (line 4622): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11942. Data_GUI.m (line 4634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11943. Data_GUI.m (line 4647): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11944. Data_GUI.m (line 4741): Function might be unused.\n  11945. Data_GUI.m (line 4747): Value assigned to variable might be unused.\n  11946. Data_GUI.m (line 4775): Value assigned to variable might be unused.\n  11947. Data_GUI.m (line 4800): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11948. Data_GUI.m (line 4822): Value assigned to variable might be unused.\n  11949. Data_GUI.m (line 4856): Value assigned to variable might be unused.\n  11950. Data_GUI.m (line 4885): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11951. Data_GUI.m (line 4918): Function might be unused.\n  11952. Data_GUI.m (line 4962): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11953. Data_GUI.m (line 4963): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11954. Data_GUI.m (line 4986): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11955. Data_GUI.m (line 4987): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11956. Data_GUI.m (line 5007): Function might be unused.\n  11957. Data_GUI.m (line 5084): Function might be unused.\n  11958. Data_GUI.m (line 5101): Value assigned to variable might be unused.\n  11959. Data_GUI.m (line 5159): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11960. Data_GUI.m (line 5160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11961. Data_GUI.m (line 5164): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11962. Data_GUI.m (line 5165): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11963. Data_GUI.m (line 5183): Function might be unused.\n  11964. Data_GUI.m (line 5241): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11965. Data_GUI.m (line 5241): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11966. Data_GUI.m (line 5273): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11967. Data_GUI.m (line 5273): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11968. Data_GUI.m (line 5436): Function might be unused.\n  11969. Data_GUI.m (line 5466): Function might be unused.\n  11970. Data_GUI.m (line 5557): Function might be unused.\n  11971. Data_GUI.m (line 5595): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11972. Data_GUI.m (line 5626): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11973. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\Data_GUI.m: Missing arguments validation block\n  11974. Data_GUI_BROKEN.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_BROKEN'.\n  11975. Data_GUI_BROKEN.m (line 239): Value assigned to variable might be unused.\n  11976. Data_GUI_BROKEN.m (line 340): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  11977. Data_GUI_BROKEN.m (line 340): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  11978. Data_GUI_BROKEN.m (line 734): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11979. Data_GUI_BROKEN.m (line 735): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11980. Data_GUI_BROKEN.m (line 736): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11981. Data_GUI_BROKEN.m (line 737): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11982. Data_GUI_BROKEN.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11983. Data_GUI_BROKEN.m (line 754): Function might be unused.\n  11984. Data_GUI_BROKEN.m (line 979): Function might be unused.\n  11985. Data_GUI_BROKEN.m (line 994): Value assigned to variable might be unused.\n  11986. Data_GUI_BROKEN.m (line 1016): Function might be unused.\n  11987. Data_GUI_BROKEN.m (line 1193): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11988. Data_GUI_BROKEN.m (line 1194): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11989. Data_GUI_BROKEN.m (line 1195): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11990. Data_GUI_BROKEN.m (line 1196): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11991. Data_GUI_BROKEN.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  11992. Data_GUI_BROKEN.m (line 1227): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11993. Data_GUI_BROKEN.m (line 1228): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11994. Data_GUI_BROKEN.m (line 1229): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  11995. Data_GUI_BROKEN.m (line 1249): Function might be unused.\n  11996. Data_GUI_BROKEN.m (line 1290): Function might be unused.\n  11997. Data_GUI_BROKEN.m (line 1366): Input argument might be unused. Consider replacing the argument with ~ instead.\n  11998. Data_GUI_BROKEN.m (line 1436): Value assigned to variable might be unused.\n  11999. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12000. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12001. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12002. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12003. Data_GUI_BROKEN.m (line 1652): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12004. Data_GUI_BROKEN.m (line 1654): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12005. Data_GUI_BROKEN.m (line 1654): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12006. Data_GUI_BROKEN.m (line 1664): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12007. Data_GUI_BROKEN.m (line 1665): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12008. Data_GUI_BROKEN.m (line 1666): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12009. Data_GUI_BROKEN.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12010. Data_GUI_BROKEN.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12011. Data_GUI_BROKEN.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12012. Data_GUI_BROKEN.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12013. Data_GUI_BROKEN.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12014. Data_GUI_BROKEN.m (line 1672): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12015. Data_GUI_BROKEN.m (line 1673): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12016. Data_GUI_BROKEN.m (line 1674): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12017. Data_GUI_BROKEN.m (line 1675): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12018. Data_GUI_BROKEN.m (line 1676): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12019. Data_GUI_BROKEN.m (line 1677): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12020. Data_GUI_BROKEN.m (line 1678): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12021. Data_GUI_BROKEN.m (line 1679): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12022. Data_GUI_BROKEN.m (line 1680): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12023. Data_GUI_BROKEN.m (line 1681): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12024. Data_GUI_BROKEN.m (line 1682): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12025. Data_GUI_BROKEN.m (line 1683): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12026. Data_GUI_BROKEN.m (line 1684): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12027. Data_GUI_BROKEN.m (line 1685): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12028. Data_GUI_BROKEN.m (line 1686): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12029. Data_GUI_BROKEN.m (line 1687): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12030. Data_GUI_BROKEN.m (line 1688): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12031. Data_GUI_BROKEN.m (line 1689): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12032. Data_GUI_BROKEN.m (line 1690): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12033. Data_GUI_BROKEN.m (line 1691): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12034. Data_GUI_BROKEN.m (line 1692): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12035. Data_GUI_BROKEN.m (line 1693): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12036. Data_GUI_BROKEN.m (line 1694): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12037. Data_GUI_BROKEN.m (line 1695): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12038. Data_GUI_BROKEN.m (line 1696): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12039. Data_GUI_BROKEN.m (line 1697): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12040. Data_GUI_BROKEN.m (line 1698): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12041. Data_GUI_BROKEN.m (line 1699): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12042. Data_GUI_BROKEN.m (line 1700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12043. Data_GUI_BROKEN.m (line 1701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12044. Data_GUI_BROKEN.m (line 1702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12045. Data_GUI_BROKEN.m (line 1703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12046. Data_GUI_BROKEN.m (line 1704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12047. Data_GUI_BROKEN.m (line 1705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12048. Data_GUI_BROKEN.m (line 1706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12049. Data_GUI_BROKEN.m (line 1707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12050. Data_GUI_BROKEN.m (line 1708): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12051. Data_GUI_BROKEN.m (line 1709): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12052. Data_GUI_BROKEN.m (line 1710): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12053. Data_GUI_BROKEN.m (line 1711): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12054. Data_GUI_BROKEN.m (line 1712): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12055. Data_GUI_BROKEN.m (line 1713): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12056. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12057. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12058. Data_GUI_BROKEN.m (line 1767): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12059. Data_GUI_BROKEN.m (line 1768): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12060. Data_GUI_BROKEN.m (line 1769): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12061. Data_GUI_BROKEN.m (line 1770): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12062. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12063. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12064. Data_GUI_BROKEN.m (line 1812): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12065. Data_GUI_BROKEN.m (line 1813): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12066. Data_GUI_BROKEN.m (line 1814): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12067. Data_GUI_BROKEN.m (line 1825): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12068. Data_GUI_BROKEN.m (line 1826): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12069. Data_GUI_BROKEN.m (line 1831): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12070. Data_GUI_BROKEN.m (line 1832): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12071. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12072. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12073. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12074. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12075. Data_GUI_BROKEN.m (line 1897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12076. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12077. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12078. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12079. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12080. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12081. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12082. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12083. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12084. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12085. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12086. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12087. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12088. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12089. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12090. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12091. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12092. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12093. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12094. Data_GUI_BROKEN.m (line 2199): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12095. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12096. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12097. Data_GUI_BROKEN.m (line 2215): Function might be unused.\n  12098. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12099. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12100. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12101. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12102. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12103. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12104. Data_GUI_BROKEN.m (line 2427): Value assigned to variable might be unused.\n  12105. Data_GUI_BROKEN.m (line 2486): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  12106. Data_GUI_BROKEN.m (line 2630): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  12107. Data_GUI_BROKEN.m (line 2769): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12108. Data_GUI_BROKEN.m (line 2769): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12109. Data_GUI_BROKEN.m (line 2891): Function might be unused.\n  12110. Data_GUI_BROKEN.m (line 3068): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12111. Data_GUI_BROKEN.m (line 3068): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12112. Data_GUI_BROKEN.m (line 3100): Function might be unused.\n  12113. Data_GUI_BROKEN.m (line 3251): Function might be unused.\n  12114. Data_GUI_BROKEN.m (line 3329): Function might be unused.\n  12115. Data_GUI_BROKEN.m (line 3344): This keyword might not be aligned with its matching END on line 3355.\n  12116. Data_GUI_BROKEN.m (line 3357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  12117. Data_GUI_BROKEN.m (line 3573): This keyword might not be aligned with its matching END on line 3575.\n  12118. Data_GUI_BROKEN.m (line 3677): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  12119. Data_GUI_BROKEN.m (line 3712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12120. Data_GUI_BROKEN.m (line 3746): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12121. Data_GUI_BROKEN.m (line 3760): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12122. Data_GUI_BROKEN.m (line 3768): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12123. Data_GUI_BROKEN.m (line 3768): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12124. Data_GUI_BROKEN.m (line 3967): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12125. Data_GUI_BROKEN.m (line 4007): Function might be unused.\n  12126. Data_GUI_BROKEN.m (line 4039): Function might be unused.\n  12127. Data_GUI_BROKEN.m (line 4051): Value assigned to variable might be unused.\n  12128. Data_GUI_BROKEN.m (line 4061): Value assigned to variable might be unused.\n  12129. Data_GUI_BROKEN.m (line 4066): Value assigned to variable might be unused.\n  12130. Data_GUI_BROKEN.m (line 4071): Value assigned to variable might be unused.\n  12131. Data_GUI_BROKEN.m (line 4088): Value assigned to variable might be unused.\n  12132. Data_GUI_BROKEN.m (line 4197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12133. Data_GUI_BROKEN.m (line 4198): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12134. Data_GUI_BROKEN.m (line 4205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12135. Data_GUI_BROKEN.m (line 4206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12136. Data_GUI_BROKEN.m (line 4219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12137. Data_GUI_BROKEN.m (line 4221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12138. Data_GUI_BROKEN.m (line 4243): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12139. Data_GUI_BROKEN.m (line 4244): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12140. Data_GUI_BROKEN.m (line 4262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12141. Data_GUI_BROKEN.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12142. Data_GUI_BROKEN.m (line 4282): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12143. Data_GUI_BROKEN.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12144. Data_GUI_BROKEN.m (line 4294): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12145. Data_GUI_BROKEN.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12146. Data_GUI_BROKEN.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12147. Data_GUI_BROKEN.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12148. Data_GUI_BROKEN.m (line 4325): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12149. Data_GUI_BROKEN.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12150. Data_GUI_BROKEN.m (line 4370): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12151. Data_GUI_BROKEN.m (line 4371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12152. Data_GUI_BROKEN.m (line 4378): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12153. Data_GUI_BROKEN.m (line 4379): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12154. Data_GUI_BROKEN.m (line 4398): Function might be unused.\n  12155. Data_GUI_BROKEN.m (line 4456): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12156. Data_GUI_BROKEN.m (line 4457): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12157. Data_GUI_BROKEN.m (line 4467): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12158. Data_GUI_BROKEN.m (line 4468): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12159. Data_GUI_BROKEN.m (line 4487): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12160. Data_GUI_BROKEN.m (line 4488): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12161. Data_GUI_BROKEN.m (line 4541): Function might be unused.\n  12162. Data_GUI_BROKEN.m (line 4588): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12163. Data_GUI_BROKEN.m (line 4653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12164. Data_GUI_BROKEN.m (line 4654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12165. Data_GUI_BROKEN.m (line 4702): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12166. Data_GUI_BROKEN.m (line 4711): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12167. Data_GUI_BROKEN.m (line 4716): This statement (and possibly following ones) cannot be reached.\n  12168. Data_GUI_BROKEN.m (line 4718): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12169. Data_GUI_BROKEN.m (line 4725): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12170. Data_GUI_BROKEN.m (line 4755): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12171. Data_GUI_BROKEN.m (line 4795): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12172. Data_GUI_BROKEN.m (line 4818): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12173. Data_GUI_BROKEN.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12174. Data_GUI_BROKEN.m (line 4841): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12175. Data_GUI_BROKEN.m (line 4854): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12176. Data_GUI_BROKEN.m (line 4948): Function might be unused.\n  12177. Data_GUI_BROKEN.m (line 4954): Value assigned to variable might be unused.\n  12178. Data_GUI_BROKEN.m (line 4982): Value assigned to variable might be unused.\n  12179. Data_GUI_BROKEN.m (line 5007): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12180. Data_GUI_BROKEN.m (line 5029): Value assigned to variable might be unused.\n  12181. Data_GUI_BROKEN.m (line 5063): Value assigned to variable might be unused.\n  12182. Data_GUI_BROKEN.m (line 5092): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12183. Data_GUI_BROKEN.m (line 5125): Function might be unused.\n  12184. Data_GUI_BROKEN.m (line 5169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12185. Data_GUI_BROKEN.m (line 5170): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12186. Data_GUI_BROKEN.m (line 5193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12187. Data_GUI_BROKEN.m (line 5194): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12188. Data_GUI_BROKEN.m (line 5214): Function might be unused.\n  12189. Data_GUI_BROKEN.m (line 5291): Function might be unused.\n  12190. Data_GUI_BROKEN.m (line 5308): Value assigned to variable might be unused.\n  12191. Data_GUI_BROKEN.m (line 5366): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12192. Data_GUI_BROKEN.m (line 5367): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12193. Data_GUI_BROKEN.m (line 5371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12194. Data_GUI_BROKEN.m (line 5372): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12195. Data_GUI_BROKEN.m (line 5390): Function might be unused.\n  12196. Data_GUI_BROKEN.m (line 5448): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12197. Data_GUI_BROKEN.m (line 5448): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12198. Data_GUI_BROKEN.m (line 5480): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12199. Data_GUI_BROKEN.m (line 5480): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12200. Data_GUI_BROKEN.m (line 5643): Function might be unused.\n  12201. Data_GUI_BROKEN.m (line 5673): Function might be unused.\n  12202. Data_GUI_BROKEN.m (line 5764): Function might be unused.\n  12203. Data_GUI_BROKEN.m (line 5802): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12204. Data_GUI_BROKEN.m (line 5833): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12205. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\Data_GUI_BROKEN.m: Missing arguments validation block\n  12206. Data_GUI_No_Batch.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_No_Batch'.\n  12207. Data_GUI_No_Batch.m (line 237): Value assigned to variable might be unused.\n  12208. Data_GUI_No_Batch.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12209. Data_GUI_No_Batch.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12210. Data_GUI_No_Batch.m (line 700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12211. Data_GUI_No_Batch.m (line 701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12212. Data_GUI_No_Batch.m (line 702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12213. Data_GUI_No_Batch.m (line 703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12214. Data_GUI_No_Batch.m (line 704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12215. Data_GUI_No_Batch.m (line 720): Function might be unused.\n  12216. Data_GUI_No_Batch.m (line 945): Function might be unused.\n  12217. Data_GUI_No_Batch.m (line 960): Value assigned to variable might be unused.\n  12218. Data_GUI_No_Batch.m (line 982): Function might be unused.\n  12219. Data_GUI_No_Batch.m (line 1157): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12220. Data_GUI_No_Batch.m (line 1158): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12221. Data_GUI_No_Batch.m (line 1159): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12222. Data_GUI_No_Batch.m (line 1160): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12223. Data_GUI_No_Batch.m (line 1161): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12224. Data_GUI_No_Batch.m (line 1191): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12225. Data_GUI_No_Batch.m (line 1192): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12226. Data_GUI_No_Batch.m (line 1193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12227. Data_GUI_No_Batch.m (line 1213): Function might be unused.\n  12228. Data_GUI_No_Batch.m (line 1254): Function might be unused.\n  12229. Data_GUI_No_Batch.m (line 1330): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12230. Data_GUI_No_Batch.m (line 1400): Value assigned to variable might be unused.\n  12231. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12232. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12233. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12234. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12235. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12236. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12237. Data_GUI_No_Batch.m (line 1565): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12238. Data_GUI_No_Batch.m (line 1566): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12239. Data_GUI_No_Batch.m (line 1567): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12240. Data_GUI_No_Batch.m (line 1568): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12241. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12242. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12243. Data_GUI_No_Batch.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12244. Data_GUI_No_Batch.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12245. Data_GUI_No_Batch.m (line 1612): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12246. Data_GUI_No_Batch.m (line 1623): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12247. Data_GUI_No_Batch.m (line 1624): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12248. Data_GUI_No_Batch.m (line 1629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12249. Data_GUI_No_Batch.m (line 1630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12250. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12251. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12252. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12253. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12254. Data_GUI_No_Batch.m (line 1695): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12255. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12256. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12257. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12258. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12259. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12260. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12261. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12262. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12263. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12264. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12265. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12266. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12267. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12268. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12269. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12270. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12271. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12272. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12273. Data_GUI_No_Batch.m (line 1997): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12274. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12275. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12276. Data_GUI_No_Batch.m (line 2013): Function might be unused.\n  12277. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12278. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12279. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12280. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12281. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12282. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12283. Data_GUI_No_Batch.m (line 2222): Value assigned to variable might be unused.\n  12284. Data_GUI_No_Batch.m (line 2281): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  12285. Data_GUI_No_Batch.m (line 2385): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  12286. Data_GUI_No_Batch.m (line 2524): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12287. Data_GUI_No_Batch.m (line 2524): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12288. Data_GUI_No_Batch.m (line 2646): Function might be unused.\n  12289. Data_GUI_No_Batch.m (line 2821): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12290. Data_GUI_No_Batch.m (line 2821): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12291. Data_GUI_No_Batch.m (line 2853): Function might be unused.\n  12292. Data_GUI_No_Batch.m (line 2971): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12293. Data_GUI_No_Batch.m (line 3151): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12294. Data_GUI_No_Batch.m (line 3249): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  12295. Data_GUI_No_Batch.m (line 3297): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12296. Data_GUI_No_Batch.m (line 3297): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12297. Data_GUI_No_Batch.m (line 3626): This keyword might not be aligned with its matching END on line 3637.\n  12298. Data_GUI_No_Batch.m (line 3639): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  12299. Data_GUI_No_Batch.m (line 3855): This keyword might not be aligned with its matching END on line 3857.\n  12300. Data_GUI_No_Batch.m (line 3959): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  12301. Data_GUI_No_Batch.m (line 3969): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12302. Data_GUI_No_Batch.m (line 3970): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12303. Data_GUI_No_Batch.m (line 3971): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12304. Data_GUI_No_Batch.m (line 4014): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12305. Data_GUI_No_Batch.m (line 4015): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12306. Data_GUI_No_Batch.m (line 4025): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  12307. Data_GUI_No_Batch.m (line 4041): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12308. Data_GUI_No_Batch.m (line 4042): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12309. Data_GUI_No_Batch.m (line 4083): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12310. Data_GUI_No_Batch.m (line 4117): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12311. Data_GUI_No_Batch.m (line 4131): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12312. Data_GUI_No_Batch.m (line 4139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12313. Data_GUI_No_Batch.m (line 4139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12314. Data_GUI_No_Batch.m (line 4338): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12315. Data_GUI_No_Batch.m (line 4378): Function might be unused.\n  12316. Data_GUI_No_Batch.m (line 4422): Value assigned to variable might be unused.\n  12317. Data_GUI_No_Batch.m (line 4432): Value assigned to variable might be unused.\n  12318. Data_GUI_No_Batch.m (line 4437): Value assigned to variable might be unused.\n  12319. Data_GUI_No_Batch.m (line 4442): Value assigned to variable might be unused.\n  12320. Data_GUI_No_Batch.m (line 4459): Value assigned to variable might be unused.\n  12321. Data_GUI_No_Batch.m (line 4568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12322. Data_GUI_No_Batch.m (line 4569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12323. Data_GUI_No_Batch.m (line 4576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12324. Data_GUI_No_Batch.m (line 4577): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12325. Data_GUI_No_Batch.m (line 4590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12326. Data_GUI_No_Batch.m (line 4592): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12327. Data_GUI_No_Batch.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12328. Data_GUI_No_Batch.m (line 4615): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12329. Data_GUI_No_Batch.m (line 4635): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12330. Data_GUI_No_Batch.m (line 4636): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12331. Data_GUI_No_Batch.m (line 4648): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12332. Data_GUI_No_Batch.m (line 4649): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12333. Data_GUI_No_Batch.m (line 4667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12334. Data_GUI_No_Batch.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12335. Data_GUI_No_Batch.m (line 4712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12336. Data_GUI_No_Batch.m (line 4713): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12337. Data_GUI_No_Batch.m (line 4720): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12338. Data_GUI_No_Batch.m (line 4721): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12339. Data_GUI_No_Batch.m (line 4798): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12340. Data_GUI_No_Batch.m (line 4799): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12341. Data_GUI_No_Batch.m (line 4809): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12342. Data_GUI_No_Batch.m (line 4810): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12343. Data_GUI_No_Batch.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12344. Data_GUI_No_Batch.m (line 4830): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12345. Data_GUI_No_Batch.m (line 4930): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12346. Data_GUI_No_Batch.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12347. Data_GUI_No_Batch.m (line 4996): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12348. Data_GUI_No_Batch.m (line 5044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12349. Data_GUI_No_Batch.m (line 5053): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12350. Data_GUI_No_Batch.m (line 5058): This statement (and possibly following ones) cannot be reached.\n  12351. Data_GUI_No_Batch.m (line 5060): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12352. Data_GUI_No_Batch.m (line 5067): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12353. Data_GUI_No_Batch.m (line 5097): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12354. Data_GUI_No_Batch.m (line 5137): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12355. Data_GUI_No_Batch.m (line 5160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12356. Data_GUI_No_Batch.m (line 5171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12357. Data_GUI_No_Batch.m (line 5183): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12358. Data_GUI_No_Batch.m (line 5196): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12359. Data_GUI_No_Batch.m (line 5225): Value assigned to variable might be unused.\n  12360. Data_GUI_No_Batch.m (line 5252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12361. Data_GUI_No_Batch.m (line 5284): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  12362. Data_GUI_No_Batch.m (line 5298): Value assigned to variable might be unused.\n  12363. Data_GUI_No_Batch.m (line 5316): Value assigned to variable might be unused.\n  12364. Data_GUI_No_Batch.m (line 5332): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12365. Data_GUI_No_Batch.m (line 5360): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12366. Data_GUI_No_Batch.m (line 5447): Function might be unused.\n  12367. Data_GUI_No_Batch.m (line 5453): Value assigned to variable might be unused.\n  12368. Data_GUI_No_Batch.m (line 5481): Value assigned to variable might be unused.\n  12369. Data_GUI_No_Batch.m (line 5506): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12370. Data_GUI_No_Batch.m (line 5528): Value assigned to variable might be unused.\n  12371. Data_GUI_No_Batch.m (line 5562): Value assigned to variable might be unused.\n  12372. Data_GUI_No_Batch.m (line 5591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12373. Data_GUI_No_Batch.m (line 5624): Function might be unused.\n  12374. Data_GUI_No_Batch.m (line 5668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12375. Data_GUI_No_Batch.m (line 5669): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12376. Data_GUI_No_Batch.m (line 5692): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12377. Data_GUI_No_Batch.m (line 5693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12378. Data_GUI_No_Batch.m (line 5790): Function might be unused.\n  12379. Data_GUI_No_Batch.m (line 5807): Value assigned to variable might be unused.\n  12380. Data_GUI_No_Batch.m (line 5865): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12381. Data_GUI_No_Batch.m (line 5866): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12382. Data_GUI_No_Batch.m (line 5870): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12383. Data_GUI_No_Batch.m (line 5871): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12384. Data_GUI_No_Batch.m (line 5889): Function might be unused.\n  12385. Data_GUI_No_Batch.m (line 5947): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12386. Data_GUI_No_Batch.m (line 5947): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12387. Data_GUI_No_Batch.m (line 5979): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12388. Data_GUI_No_Batch.m (line 5979): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12389. Data_GUI_No_Batch.m (line 6142): Function might be unused.\n  12390. Data_GUI_No_Batch.m (line 6172): Function might be unused.\n  12391. Data_GUI_No_Batch.m (line 6263): Function might be unused.\n  12392. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\Data_GUI_No_Batch.m: Missing arguments validation block\n  12393. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  12394. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\addModelWorkspaceData.m: Missing arguments validation block\n  12395. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\checkHighMemoryUsage.m: Missing function docstring\n  12396. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\checkHighMemoryUsage.m: Missing arguments validation block\n  12397. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\checkModelConfiguration.m: Missing arguments validation block\n  12398. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\checkStopRequest.m: Missing function docstring\n  12399. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\checkStopRequest.m: Missing arguments validation block\n  12400. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12401. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12402. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12403. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12404. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12405. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12406. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12407. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\check_model_configuration.m: Missing arguments validation block\n  12408. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12409. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12410. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12411. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\checkpoint_recovery.m: Missing arguments validation block\n  12412. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\combineDataSources.m: Missing arguments validation block\n  12413. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  12414. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12415. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12416. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12417. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12418. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12419. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12420. data_extraction_functions.m (line 146): Function might be unused.\n  12421. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12422. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12423. data_extraction_functions.m (line 202): Function might be unused.\n  12424. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12425. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12426. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12427. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12428. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\data_extraction_functions.m: Missing function docstring\n  12429. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\data_extraction_functions.m: Missing arguments validation block\n  12430. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12431. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\endPhase.m: Missing arguments validation block\n  12432. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  12433. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12434. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12435. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12436. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12437. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12438. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12439. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractAllSignalsFromBus.m: Missing arguments validation block\n  12440. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  12441. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractCoefficientsFromTable.m: Missing function docstring\n  12442. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractCoefficientsFromTable.m: Missing arguments validation block\n  12443. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12444. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12445. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12446. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12447. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12448. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12449. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12450. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12451. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12452. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12453. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12454. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12455. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractCombinedSignalBusData.m: Missing function docstring\n  12456. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractCombinedSignalBusData.m: Missing arguments validation block\n  12457. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12458. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12459. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12460. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12461. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12462. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractConstantMatrixData.m: Missing function docstring\n  12463. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractConstantMatrixData.m: Missing arguments validation block\n  12464. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractDataFromField.m: Missing arguments validation block\n  12465. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  12466. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  12467. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractDataWithOptions.m: Missing arguments validation block\n  12468. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  12469. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  12470. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  12471. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  12472. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  12473. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12474. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12475. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12476. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12477. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12478. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12479. extractFromCombinedSignalBus.m (line 200): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12480. extractFromCombinedSignalBus.m (line 201): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12481. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12482. extractFromCombinedSignalBus.m (line 213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12483. extractFromCombinedSignalBus.m (line 228): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12484. extractFromCombinedSignalBus.m (line 229): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12485. extractFromCombinedSignalBus.m (line 243): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12486. extractFromCombinedSignalBus.m (line 244): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12487. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractFromCombinedSignalBus.m: Missing function docstring\n  12488. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  12489. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  12490. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  12491. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  12492. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  12493. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  12494. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  12495. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12496. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12497. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12498. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12499. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12500. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12501. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12502. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12503. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12504. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12505. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12506. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12507. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12508. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12509. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12510. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12511. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  12512. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  12513. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12514. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12515. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractFromNestedStruct.m: Missing arguments validation block\n  12516. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12517. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12518. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12519. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12520. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12521. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12522. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractLogsoutDataFixed.m: Missing function docstring\n  12523. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractLogsoutDataFixed.m: Missing arguments validation block\n  12524. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractSignalsFromSimOut.m: Missing arguments validation block\n  12525. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12526. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12527. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12528. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractSimscapeDataRecursive.m: Missing function docstring\n  12529. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  12530. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractTimeSeriesData.m: Missing function docstring\n  12531. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractTimeSeriesData.m: Missing arguments validation block\n  12532. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12533. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12534. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12535. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12536. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractWorkspaceOutputs.m: Missing function docstring\n  12537. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\extractWorkspaceOutputs.m: Missing arguments validation block\n  12538. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12539. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12540. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  12541. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12542. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12543. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12544. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\fallbackSimlogExtraction.m: Missing function docstring\n  12545. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\fallbackSimlogExtraction.m: Missing arguments validation block\n  12546. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\generateRandomCoefficients.m: Missing arguments validation block\n  12547. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\getMemoryInfo.m: Missing function docstring\n  12548. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\getMemoryInfo.m: Missing arguments validation block\n  12549. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\getMemoryUsage.m: Missing arguments validation block\n  12550. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12551. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12552. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12553. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12554. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12555. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12556. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12557. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  12558. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12559. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12560. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12561. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12562. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12563. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\getPolynomialParameterInfo.m: Missing arguments validation block\n  12564. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\getShortenedJointName.m: Missing arguments validation block\n  12565. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12566. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12567. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  12568. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  12569. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\loadInputFile.m: Missing function docstring\n  12570. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\loadInputFile.m: Missing arguments validation block\n  12571. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\logBatchResult.m: Missing arguments validation block\n  12572. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12573. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\logMessage.m: Missing arguments validation block\n  12574. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\logical2str.m: Missing function docstring\n  12575. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\logical2str.m: Missing arguments validation block\n  12576. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  12577. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\memory_monitor.m: Missing arguments validation block\n  12578. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\mergeTables.m: Missing function docstring\n  12579. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\mergeTables.m: Missing arguments validation block\n  12580. performance_monitor.m (line 11): Persistent variable might be unused.\n  12581. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12582. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12583. performance_monitor.m (line 77): Function might be unused.\n  12584. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12585. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12586. performance_monitor.m (line 118): Function might be unused.\n  12587. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12588. performance_monitor.m (line 133): Function might be unused.\n  12589. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12590. performance_monitor.m (line 149): Function might be unused.\n  12591. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12592. performance_monitor.m (line 162): Function might be unused.\n  12593. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12594. performance_monitor.m (line 175): Function might be unused.\n  12595. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12596. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12597. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12598. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\performance_monitor.m: Missing arguments validation block\n  12599. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  12600. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  12601. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12602. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12603. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\processSimulationOutput.m: Missing function docstring\n  12604. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\processSimulationOutput.m: Missing arguments validation block\n  12605. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12606. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\recordBatchTime.m: Missing arguments validation block\n  12607. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12608. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\recordPhase.m: Missing arguments validation block\n  12609. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\resampleDataToFrequency.m: Missing function docstring\n  12610. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\resampleDataToFrequency.m: Missing arguments validation block\n  12611. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\restoreWorkspace.m: Missing arguments validation block\n  12612. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\runSingleTrial.m: Missing arguments validation block\n  12613. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\setModelParameters.m: Missing arguments validation block\n  12614. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12615. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\setPolynomialCoefficients.m: Missing arguments validation block\n  12616. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\shouldShowDebug.m: Missing function docstring\n  12617. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\shouldShowDebug.m: Missing arguments validation block\n  12618. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\shouldShowNormal.m: Missing function docstring\n  12619. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\shouldShowNormal.m: Missing arguments validation block\n  12620. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\shouldShowVerbose.m: Missing function docstring\n  12621. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\shouldShowVerbose.m: Missing arguments validation block\n  12622. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  12623. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12624. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\traverseSimlogNode.m: Missing arguments validation block\n  12625. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12626. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12627. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12628. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12629. verbosity_control.m (line 203): Function might be unused.\n  12630. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12631. verbosity_control.m (line 225): Function might be unused.\n  12632. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12633. verbosity_control.m (line 248): Function might be unused.\n  12634. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12635. verbosity_control.m (line 274): Function might be unused.\n  12636. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12637. verbosity_control.m (line 293): Function might be unused.\n  12638. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12639. verbosity_control.m (line 320): Function might be unused.\n  12640. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12641. verbosity_control.m (line 335): Function might be unused.\n  12642. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  12643. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1912_COLUMNS_20250802_112606\\verbosity_control.m: Missing arguments validation block\n  12644. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  12645. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  12646. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  12647. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  12648. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12649. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12650. Data_GUI.m (line 725): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12651. Data_GUI.m (line 726): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12652. Data_GUI.m (line 727): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12653. Data_GUI.m (line 728): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12654. Data_GUI.m (line 729): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12655. Data_GUI.m (line 745): Function might be unused.\n  12656. Data_GUI.m (line 970): Function might be unused.\n  12657. Data_GUI.m (line 985): Value assigned to variable might be unused.\n  12658. Data_GUI.m (line 1007): Function might be unused.\n  12659. Data_GUI.m (line 1184): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12660. Data_GUI.m (line 1185): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12661. Data_GUI.m (line 1186): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12662. Data_GUI.m (line 1187): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12663. Data_GUI.m (line 1188): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12664. Data_GUI.m (line 1218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12665. Data_GUI.m (line 1219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12666. Data_GUI.m (line 1220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12667. Data_GUI.m (line 1240): Function might be unused.\n  12668. Data_GUI.m (line 1281): Function might be unused.\n  12669. Data_GUI.m (line 1357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12670. Data_GUI.m (line 1427): Value assigned to variable might be unused.\n  12671. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12672. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12673. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12674. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12675. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12676. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12677. Data_GUI.m (line 1595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12678. Data_GUI.m (line 1596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12679. Data_GUI.m (line 1597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12680. Data_GUI.m (line 1598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12681. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12682. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12683. Data_GUI.m (line 1640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12684. Data_GUI.m (line 1641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12685. Data_GUI.m (line 1642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12686. Data_GUI.m (line 1653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12687. Data_GUI.m (line 1654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12688. Data_GUI.m (line 1659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12689. Data_GUI.m (line 1660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12690. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12691. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12692. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12693. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12694. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12695. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12696. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12697. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12698. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12699. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12700. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12701. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12702. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12703. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12704. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12705. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12706. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12707. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12708. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12709. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12710. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12711. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12712. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12713. Data_GUI.m (line 2027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12714. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12715. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12716. Data_GUI.m (line 2043): Function might be unused.\n  12717. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12718. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12719. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12720. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12721. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12722. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12723. Data_GUI.m (line 2257): Value assigned to variable might be unused.\n  12724. Data_GUI.m (line 2316): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  12725. Data_GUI.m (line 2460): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  12726. Data_GUI.m (line 2599): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12727. Data_GUI.m (line 2599): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12728. Data_GUI.m (line 2721): Function might be unused.\n  12729. Data_GUI.m (line 2898): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12730. Data_GUI.m (line 2898): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12731. Data_GUI.m (line 2930): Function might be unused.\n  12732. Data_GUI.m (line 3081): Function might be unused.\n  12733. Data_GUI.m (line 3159): Function might be unused.\n  12734. Data_GUI.m (line 3174): This keyword might not be aligned with its matching END on line 3185.\n  12735. Data_GUI.m (line 3187): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  12736. Data_GUI.m (line 3403): This keyword might not be aligned with its matching END on line 3405.\n  12737. Data_GUI.m (line 3507): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  12738. Data_GUI.m (line 3542): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12739. Data_GUI.m (line 3576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12740. Data_GUI.m (line 3590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12741. Data_GUI.m (line 3598): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12742. Data_GUI.m (line 3598): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12743. Data_GUI.m (line 3797): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12744. Data_GUI.m (line 3837): Function might be unused.\n  12745. Data_GUI.m (line 3869): Function might be unused.\n  12746. Data_GUI.m (line 3881): Value assigned to variable might be unused.\n  12747. Data_GUI.m (line 3891): Value assigned to variable might be unused.\n  12748. Data_GUI.m (line 3896): Value assigned to variable might be unused.\n  12749. Data_GUI.m (line 3901): Value assigned to variable might be unused.\n  12750. Data_GUI.m (line 3918): Value assigned to variable might be unused.\n  12751. Data_GUI.m (line 4027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12752. Data_GUI.m (line 4028): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12753. Data_GUI.m (line 4035): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12754. Data_GUI.m (line 4036): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12755. Data_GUI.m (line 4049): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12756. Data_GUI.m (line 4051): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12757. Data_GUI.m (line 4073): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12758. Data_GUI.m (line 4074): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12759. Data_GUI.m (line 4094): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12760. Data_GUI.m (line 4095): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12761. Data_GUI.m (line 4107): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12762. Data_GUI.m (line 4108): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12763. Data_GUI.m (line 4126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12764. Data_GUI.m (line 4127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12765. Data_GUI.m (line 4171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12766. Data_GUI.m (line 4172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12767. Data_GUI.m (line 4179): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12768. Data_GUI.m (line 4180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12769. Data_GUI.m (line 4199): Function might be unused.\n  12770. Data_GUI.m (line 4257): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12771. Data_GUI.m (line 4258): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12772. Data_GUI.m (line 4268): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12773. Data_GUI.m (line 4269): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12774. Data_GUI.m (line 4288): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12775. Data_GUI.m (line 4289): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12776. Data_GUI.m (line 4342): Function might be unused.\n  12777. Data_GUI.m (line 4389): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12778. Data_GUI.m (line 4454): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12779. Data_GUI.m (line 4455): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12780. Data_GUI.m (line 4503): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12781. Data_GUI.m (line 4512): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12782. Data_GUI.m (line 4517): This statement (and possibly following ones) cannot be reached.\n  12783. Data_GUI.m (line 4519): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12784. Data_GUI.m (line 4526): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12785. Data_GUI.m (line 4556): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12786. Data_GUI.m (line 4596): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12787. Data_GUI.m (line 4619): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12788. Data_GUI.m (line 4630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12789. Data_GUI.m (line 4642): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12790. Data_GUI.m (line 4655): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12791. Data_GUI.m (line 4749): Function might be unused.\n  12792. Data_GUI.m (line 4755): Value assigned to variable might be unused.\n  12793. Data_GUI.m (line 4783): Value assigned to variable might be unused.\n  12794. Data_GUI.m (line 4808): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12795. Data_GUI.m (line 4830): Value assigned to variable might be unused.\n  12796. Data_GUI.m (line 4864): Value assigned to variable might be unused.\n  12797. Data_GUI.m (line 4893): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12798. Data_GUI.m (line 4926): Function might be unused.\n  12799. Data_GUI.m (line 4970): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12800. Data_GUI.m (line 4971): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12801. Data_GUI.m (line 4994): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12802. Data_GUI.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12803. Data_GUI.m (line 5015): Function might be unused.\n  12804. Data_GUI.m (line 5092): Function might be unused.\n  12805. Data_GUI.m (line 5109): Value assigned to variable might be unused.\n  12806. Data_GUI.m (line 5167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12807. Data_GUI.m (line 5168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12808. Data_GUI.m (line 5172): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12809. Data_GUI.m (line 5173): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12810. Data_GUI.m (line 5191): Function might be unused.\n  12811. Data_GUI.m (line 5249): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12812. Data_GUI.m (line 5249): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12813. Data_GUI.m (line 5281): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12814. Data_GUI.m (line 5281): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12815. Data_GUI.m (line 5444): Function might be unused.\n  12816. Data_GUI.m (line 5474): Function might be unused.\n  12817. Data_GUI.m (line 5565): Function might be unused.\n  12818. Data_GUI.m (line 5603): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12819. Data_GUI.m (line 5634): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12820. Data_GUI.m (line 5670): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12821. Data_GUI.m (line 5672): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12822. Data_GUI.m (line 5672): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12823. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\Data_GUI.m: Missing arguments validation block\n  12824. Data_GUI_BROKEN.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_BROKEN'.\n  12825. Data_GUI_BROKEN.m (line 239): Value assigned to variable might be unused.\n  12826. Data_GUI_BROKEN.m (line 340): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12827. Data_GUI_BROKEN.m (line 340): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12828. Data_GUI_BROKEN.m (line 734): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12829. Data_GUI_BROKEN.m (line 735): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12830. Data_GUI_BROKEN.m (line 736): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12831. Data_GUI_BROKEN.m (line 737): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12832. Data_GUI_BROKEN.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12833. Data_GUI_BROKEN.m (line 754): Function might be unused.\n  12834. Data_GUI_BROKEN.m (line 979): Function might be unused.\n  12835. Data_GUI_BROKEN.m (line 994): Value assigned to variable might be unused.\n  12836. Data_GUI_BROKEN.m (line 1016): Function might be unused.\n  12837. Data_GUI_BROKEN.m (line 1193): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12838. Data_GUI_BROKEN.m (line 1194): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12839. Data_GUI_BROKEN.m (line 1195): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12840. Data_GUI_BROKEN.m (line 1196): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12841. Data_GUI_BROKEN.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12842. Data_GUI_BROKEN.m (line 1227): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12843. Data_GUI_BROKEN.m (line 1228): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12844. Data_GUI_BROKEN.m (line 1229): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12845. Data_GUI_BROKEN.m (line 1249): Function might be unused.\n  12846. Data_GUI_BROKEN.m (line 1290): Function might be unused.\n  12847. Data_GUI_BROKEN.m (line 1366): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12848. Data_GUI_BROKEN.m (line 1436): Value assigned to variable might be unused.\n  12849. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12850. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12851. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12852. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12853. Data_GUI_BROKEN.m (line 1652): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12854. Data_GUI_BROKEN.m (line 1654): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12855. Data_GUI_BROKEN.m (line 1654): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12856. Data_GUI_BROKEN.m (line 1664): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12857. Data_GUI_BROKEN.m (line 1665): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12858. Data_GUI_BROKEN.m (line 1666): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12859. Data_GUI_BROKEN.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12860. Data_GUI_BROKEN.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12861. Data_GUI_BROKEN.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12862. Data_GUI_BROKEN.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12863. Data_GUI_BROKEN.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12864. Data_GUI_BROKEN.m (line 1672): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12865. Data_GUI_BROKEN.m (line 1673): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12866. Data_GUI_BROKEN.m (line 1674): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12867. Data_GUI_BROKEN.m (line 1675): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12868. Data_GUI_BROKEN.m (line 1676): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12869. Data_GUI_BROKEN.m (line 1677): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12870. Data_GUI_BROKEN.m (line 1678): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12871. Data_GUI_BROKEN.m (line 1679): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12872. Data_GUI_BROKEN.m (line 1680): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12873. Data_GUI_BROKEN.m (line 1681): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12874. Data_GUI_BROKEN.m (line 1682): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12875. Data_GUI_BROKEN.m (line 1683): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12876. Data_GUI_BROKEN.m (line 1684): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12877. Data_GUI_BROKEN.m (line 1685): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12878. Data_GUI_BROKEN.m (line 1686): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12879. Data_GUI_BROKEN.m (line 1687): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12880. Data_GUI_BROKEN.m (line 1688): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12881. Data_GUI_BROKEN.m (line 1689): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12882. Data_GUI_BROKEN.m (line 1690): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12883. Data_GUI_BROKEN.m (line 1691): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12884. Data_GUI_BROKEN.m (line 1692): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12885. Data_GUI_BROKEN.m (line 1693): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12886. Data_GUI_BROKEN.m (line 1694): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12887. Data_GUI_BROKEN.m (line 1695): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12888. Data_GUI_BROKEN.m (line 1696): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12889. Data_GUI_BROKEN.m (line 1697): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12890. Data_GUI_BROKEN.m (line 1698): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12891. Data_GUI_BROKEN.m (line 1699): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12892. Data_GUI_BROKEN.m (line 1700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12893. Data_GUI_BROKEN.m (line 1701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12894. Data_GUI_BROKEN.m (line 1702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12895. Data_GUI_BROKEN.m (line 1703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12896. Data_GUI_BROKEN.m (line 1704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12897. Data_GUI_BROKEN.m (line 1705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12898. Data_GUI_BROKEN.m (line 1706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12899. Data_GUI_BROKEN.m (line 1707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12900. Data_GUI_BROKEN.m (line 1708): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12901. Data_GUI_BROKEN.m (line 1709): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12902. Data_GUI_BROKEN.m (line 1710): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12903. Data_GUI_BROKEN.m (line 1711): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12904. Data_GUI_BROKEN.m (line 1712): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12905. Data_GUI_BROKEN.m (line 1713): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12906. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12907. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12908. Data_GUI_BROKEN.m (line 1767): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12909. Data_GUI_BROKEN.m (line 1768): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12910. Data_GUI_BROKEN.m (line 1769): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12911. Data_GUI_BROKEN.m (line 1770): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12912. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12913. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12914. Data_GUI_BROKEN.m (line 1812): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12915. Data_GUI_BROKEN.m (line 1813): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12916. Data_GUI_BROKEN.m (line 1814): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  12917. Data_GUI_BROKEN.m (line 1825): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12918. Data_GUI_BROKEN.m (line 1826): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12919. Data_GUI_BROKEN.m (line 1831): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12920. Data_GUI_BROKEN.m (line 1832): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12921. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12922. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12923. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12924. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12925. Data_GUI_BROKEN.m (line 1897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12926. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12927. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12928. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12929. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12930. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12931. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12932. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12933. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12934. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12935. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12936. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12937. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12938. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12939. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12940. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12941. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12942. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12943. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12944. Data_GUI_BROKEN.m (line 2199): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12945. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12946. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12947. Data_GUI_BROKEN.m (line 2215): Function might be unused.\n  12948. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12949. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12950. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12951. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12952. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12953. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12954. Data_GUI_BROKEN.m (line 2427): Value assigned to variable might be unused.\n  12955. Data_GUI_BROKEN.m (line 2486): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  12956. Data_GUI_BROKEN.m (line 2630): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  12957. Data_GUI_BROKEN.m (line 2769): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12958. Data_GUI_BROKEN.m (line 2769): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12959. Data_GUI_BROKEN.m (line 2891): Function might be unused.\n  12960. Data_GUI_BROKEN.m (line 3068): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12961. Data_GUI_BROKEN.m (line 3068): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12962. Data_GUI_BROKEN.m (line 3100): Function might be unused.\n  12963. Data_GUI_BROKEN.m (line 3251): Function might be unused.\n  12964. Data_GUI_BROKEN.m (line 3329): Function might be unused.\n  12965. Data_GUI_BROKEN.m (line 3344): This keyword might not be aligned with its matching END on line 3355.\n  12966. Data_GUI_BROKEN.m (line 3357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  12967. Data_GUI_BROKEN.m (line 3573): This keyword might not be aligned with its matching END on line 3575.\n  12968. Data_GUI_BROKEN.m (line 3677): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  12969. Data_GUI_BROKEN.m (line 3712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12970. Data_GUI_BROKEN.m (line 3746): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12971. Data_GUI_BROKEN.m (line 3760): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12972. Data_GUI_BROKEN.m (line 3768): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  12973. Data_GUI_BROKEN.m (line 3768): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  12974. Data_GUI_BROKEN.m (line 3967): Input argument might be unused. Consider replacing the argument with ~ instead.\n  12975. Data_GUI_BROKEN.m (line 4007): Function might be unused.\n  12976. Data_GUI_BROKEN.m (line 4039): Function might be unused.\n  12977. Data_GUI_BROKEN.m (line 4051): Value assigned to variable might be unused.\n  12978. Data_GUI_BROKEN.m (line 4061): Value assigned to variable might be unused.\n  12979. Data_GUI_BROKEN.m (line 4066): Value assigned to variable might be unused.\n  12980. Data_GUI_BROKEN.m (line 4071): Value assigned to variable might be unused.\n  12981. Data_GUI_BROKEN.m (line 4088): Value assigned to variable might be unused.\n  12982. Data_GUI_BROKEN.m (line 4197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12983. Data_GUI_BROKEN.m (line 4198): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12984. Data_GUI_BROKEN.m (line 4205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12985. Data_GUI_BROKEN.m (line 4206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12986. Data_GUI_BROKEN.m (line 4219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12987. Data_GUI_BROKEN.m (line 4221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12988. Data_GUI_BROKEN.m (line 4243): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12989. Data_GUI_BROKEN.m (line 4244): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12990. Data_GUI_BROKEN.m (line 4262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12991. Data_GUI_BROKEN.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12992. Data_GUI_BROKEN.m (line 4282): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12993. Data_GUI_BROKEN.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12994. Data_GUI_BROKEN.m (line 4294): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12995. Data_GUI_BROKEN.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12996. Data_GUI_BROKEN.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12997. Data_GUI_BROKEN.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12998. Data_GUI_BROKEN.m (line 4325): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  12999. Data_GUI_BROKEN.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13000. Data_GUI_BROKEN.m (line 4370): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13001. Data_GUI_BROKEN.m (line 4371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13002. Data_GUI_BROKEN.m (line 4378): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13003. Data_GUI_BROKEN.m (line 4379): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13004. Data_GUI_BROKEN.m (line 4398): Function might be unused.\n  13005. Data_GUI_BROKEN.m (line 4456): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13006. Data_GUI_BROKEN.m (line 4457): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13007. Data_GUI_BROKEN.m (line 4467): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13008. Data_GUI_BROKEN.m (line 4468): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13009. Data_GUI_BROKEN.m (line 4487): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13010. Data_GUI_BROKEN.m (line 4488): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13011. Data_GUI_BROKEN.m (line 4541): Function might be unused.\n  13012. Data_GUI_BROKEN.m (line 4588): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13013. Data_GUI_BROKEN.m (line 4653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13014. Data_GUI_BROKEN.m (line 4654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13015. Data_GUI_BROKEN.m (line 4702): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13016. Data_GUI_BROKEN.m (line 4711): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13017. Data_GUI_BROKEN.m (line 4716): This statement (and possibly following ones) cannot be reached.\n  13018. Data_GUI_BROKEN.m (line 4718): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13019. Data_GUI_BROKEN.m (line 4725): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13020. Data_GUI_BROKEN.m (line 4755): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13021. Data_GUI_BROKEN.m (line 4795): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13022. Data_GUI_BROKEN.m (line 4818): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13023. Data_GUI_BROKEN.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13024. Data_GUI_BROKEN.m (line 4841): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13025. Data_GUI_BROKEN.m (line 4854): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13026. Data_GUI_BROKEN.m (line 4948): Function might be unused.\n  13027. Data_GUI_BROKEN.m (line 4954): Value assigned to variable might be unused.\n  13028. Data_GUI_BROKEN.m (line 4982): Value assigned to variable might be unused.\n  13029. Data_GUI_BROKEN.m (line 5007): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13030. Data_GUI_BROKEN.m (line 5029): Value assigned to variable might be unused.\n  13031. Data_GUI_BROKEN.m (line 5063): Value assigned to variable might be unused.\n  13032. Data_GUI_BROKEN.m (line 5092): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13033. Data_GUI_BROKEN.m (line 5125): Function might be unused.\n  13034. Data_GUI_BROKEN.m (line 5169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13035. Data_GUI_BROKEN.m (line 5170): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13036. Data_GUI_BROKEN.m (line 5193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13037. Data_GUI_BROKEN.m (line 5194): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13038. Data_GUI_BROKEN.m (line 5214): Function might be unused.\n  13039. Data_GUI_BROKEN.m (line 5291): Function might be unused.\n  13040. Data_GUI_BROKEN.m (line 5308): Value assigned to variable might be unused.\n  13041. Data_GUI_BROKEN.m (line 5366): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13042. Data_GUI_BROKEN.m (line 5367): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13043. Data_GUI_BROKEN.m (line 5371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13044. Data_GUI_BROKEN.m (line 5372): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13045. Data_GUI_BROKEN.m (line 5390): Function might be unused.\n  13046. Data_GUI_BROKEN.m (line 5448): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13047. Data_GUI_BROKEN.m (line 5448): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13048. Data_GUI_BROKEN.m (line 5480): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13049. Data_GUI_BROKEN.m (line 5480): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13050. Data_GUI_BROKEN.m (line 5643): Function might be unused.\n  13051. Data_GUI_BROKEN.m (line 5673): Function might be unused.\n  13052. Data_GUI_BROKEN.m (line 5764): Function might be unused.\n  13053. Data_GUI_BROKEN.m (line 5802): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13054. Data_GUI_BROKEN.m (line 5833): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13055. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\Data_GUI_BROKEN.m: Missing arguments validation block\n  13056. Data_GUI_No_Batch.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_No_Batch'.\n  13057. Data_GUI_No_Batch.m (line 237): Value assigned to variable might be unused.\n  13058. Data_GUI_No_Batch.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13059. Data_GUI_No_Batch.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13060. Data_GUI_No_Batch.m (line 700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13061. Data_GUI_No_Batch.m (line 701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13062. Data_GUI_No_Batch.m (line 702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13063. Data_GUI_No_Batch.m (line 703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13064. Data_GUI_No_Batch.m (line 704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13065. Data_GUI_No_Batch.m (line 720): Function might be unused.\n  13066. Data_GUI_No_Batch.m (line 945): Function might be unused.\n  13067. Data_GUI_No_Batch.m (line 960): Value assigned to variable might be unused.\n  13068. Data_GUI_No_Batch.m (line 982): Function might be unused.\n  13069. Data_GUI_No_Batch.m (line 1157): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13070. Data_GUI_No_Batch.m (line 1158): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13071. Data_GUI_No_Batch.m (line 1159): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13072. Data_GUI_No_Batch.m (line 1160): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13073. Data_GUI_No_Batch.m (line 1161): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13074. Data_GUI_No_Batch.m (line 1191): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13075. Data_GUI_No_Batch.m (line 1192): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13076. Data_GUI_No_Batch.m (line 1193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13077. Data_GUI_No_Batch.m (line 1213): Function might be unused.\n  13078. Data_GUI_No_Batch.m (line 1254): Function might be unused.\n  13079. Data_GUI_No_Batch.m (line 1330): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13080. Data_GUI_No_Batch.m (line 1400): Value assigned to variable might be unused.\n  13081. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13082. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13083. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13084. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13085. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13086. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13087. Data_GUI_No_Batch.m (line 1565): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13088. Data_GUI_No_Batch.m (line 1566): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13089. Data_GUI_No_Batch.m (line 1567): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13090. Data_GUI_No_Batch.m (line 1568): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13091. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13092. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13093. Data_GUI_No_Batch.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13094. Data_GUI_No_Batch.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13095. Data_GUI_No_Batch.m (line 1612): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13096. Data_GUI_No_Batch.m (line 1623): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13097. Data_GUI_No_Batch.m (line 1624): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13098. Data_GUI_No_Batch.m (line 1629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13099. Data_GUI_No_Batch.m (line 1630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13100. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13101. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13102. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13103. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13104. Data_GUI_No_Batch.m (line 1695): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13105. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13106. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13107. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13108. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13109. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13110. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13111. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13112. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13113. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13114. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13115. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13116. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13117. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13118. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13119. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13120. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13121. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13122. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13123. Data_GUI_No_Batch.m (line 1997): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13124. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13125. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13126. Data_GUI_No_Batch.m (line 2013): Function might be unused.\n  13127. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13128. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13129. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13130. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13131. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13132. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13133. Data_GUI_No_Batch.m (line 2222): Value assigned to variable might be unused.\n  13134. Data_GUI_No_Batch.m (line 2281): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  13135. Data_GUI_No_Batch.m (line 2385): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  13136. Data_GUI_No_Batch.m (line 2524): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13137. Data_GUI_No_Batch.m (line 2524): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13138. Data_GUI_No_Batch.m (line 2646): Function might be unused.\n  13139. Data_GUI_No_Batch.m (line 2821): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13140. Data_GUI_No_Batch.m (line 2821): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13141. Data_GUI_No_Batch.m (line 2853): Function might be unused.\n  13142. Data_GUI_No_Batch.m (line 2971): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13143. Data_GUI_No_Batch.m (line 3151): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13144. Data_GUI_No_Batch.m (line 3249): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  13145. Data_GUI_No_Batch.m (line 3297): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13146. Data_GUI_No_Batch.m (line 3297): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13147. Data_GUI_No_Batch.m (line 3626): This keyword might not be aligned with its matching END on line 3637.\n  13148. Data_GUI_No_Batch.m (line 3639): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  13149. Data_GUI_No_Batch.m (line 3855): This keyword might not be aligned with its matching END on line 3857.\n  13150. Data_GUI_No_Batch.m (line 3959): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  13151. Data_GUI_No_Batch.m (line 3969): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13152. Data_GUI_No_Batch.m (line 3970): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13153. Data_GUI_No_Batch.m (line 3971): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13154. Data_GUI_No_Batch.m (line 4014): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13155. Data_GUI_No_Batch.m (line 4015): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13156. Data_GUI_No_Batch.m (line 4025): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  13157. Data_GUI_No_Batch.m (line 4041): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13158. Data_GUI_No_Batch.m (line 4042): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13159. Data_GUI_No_Batch.m (line 4083): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13160. Data_GUI_No_Batch.m (line 4117): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13161. Data_GUI_No_Batch.m (line 4131): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13162. Data_GUI_No_Batch.m (line 4139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13163. Data_GUI_No_Batch.m (line 4139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13164. Data_GUI_No_Batch.m (line 4338): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13165. Data_GUI_No_Batch.m (line 4378): Function might be unused.\n  13166. Data_GUI_No_Batch.m (line 4422): Value assigned to variable might be unused.\n  13167. Data_GUI_No_Batch.m (line 4432): Value assigned to variable might be unused.\n  13168. Data_GUI_No_Batch.m (line 4437): Value assigned to variable might be unused.\n  13169. Data_GUI_No_Batch.m (line 4442): Value assigned to variable might be unused.\n  13170. Data_GUI_No_Batch.m (line 4459): Value assigned to variable might be unused.\n  13171. Data_GUI_No_Batch.m (line 4568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13172. Data_GUI_No_Batch.m (line 4569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13173. Data_GUI_No_Batch.m (line 4576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13174. Data_GUI_No_Batch.m (line 4577): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13175. Data_GUI_No_Batch.m (line 4590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13176. Data_GUI_No_Batch.m (line 4592): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13177. Data_GUI_No_Batch.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13178. Data_GUI_No_Batch.m (line 4615): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13179. Data_GUI_No_Batch.m (line 4635): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13180. Data_GUI_No_Batch.m (line 4636): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13181. Data_GUI_No_Batch.m (line 4648): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13182. Data_GUI_No_Batch.m (line 4649): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13183. Data_GUI_No_Batch.m (line 4667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13184. Data_GUI_No_Batch.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13185. Data_GUI_No_Batch.m (line 4712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13186. Data_GUI_No_Batch.m (line 4713): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13187. Data_GUI_No_Batch.m (line 4720): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13188. Data_GUI_No_Batch.m (line 4721): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13189. Data_GUI_No_Batch.m (line 4798): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13190. Data_GUI_No_Batch.m (line 4799): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13191. Data_GUI_No_Batch.m (line 4809): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13192. Data_GUI_No_Batch.m (line 4810): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13193. Data_GUI_No_Batch.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13194. Data_GUI_No_Batch.m (line 4830): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13195. Data_GUI_No_Batch.m (line 4930): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13196. Data_GUI_No_Batch.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13197. Data_GUI_No_Batch.m (line 4996): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13198. Data_GUI_No_Batch.m (line 5044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13199. Data_GUI_No_Batch.m (line 5053): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13200. Data_GUI_No_Batch.m (line 5058): This statement (and possibly following ones) cannot be reached.\n  13201. Data_GUI_No_Batch.m (line 5060): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13202. Data_GUI_No_Batch.m (line 5067): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13203. Data_GUI_No_Batch.m (line 5097): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13204. Data_GUI_No_Batch.m (line 5137): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13205. Data_GUI_No_Batch.m (line 5160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13206. Data_GUI_No_Batch.m (line 5171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13207. Data_GUI_No_Batch.m (line 5183): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13208. Data_GUI_No_Batch.m (line 5196): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13209. Data_GUI_No_Batch.m (line 5225): Value assigned to variable might be unused.\n  13210. Data_GUI_No_Batch.m (line 5252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13211. Data_GUI_No_Batch.m (line 5284): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  13212. Data_GUI_No_Batch.m (line 5298): Value assigned to variable might be unused.\n  13213. Data_GUI_No_Batch.m (line 5316): Value assigned to variable might be unused.\n  13214. Data_GUI_No_Batch.m (line 5332): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13215. Data_GUI_No_Batch.m (line 5360): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13216. Data_GUI_No_Batch.m (line 5447): Function might be unused.\n  13217. Data_GUI_No_Batch.m (line 5453): Value assigned to variable might be unused.\n  13218. Data_GUI_No_Batch.m (line 5481): Value assigned to variable might be unused.\n  13219. Data_GUI_No_Batch.m (line 5506): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13220. Data_GUI_No_Batch.m (line 5528): Value assigned to variable might be unused.\n  13221. Data_GUI_No_Batch.m (line 5562): Value assigned to variable might be unused.\n  13222. Data_GUI_No_Batch.m (line 5591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13223. Data_GUI_No_Batch.m (line 5624): Function might be unused.\n  13224. Data_GUI_No_Batch.m (line 5668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13225. Data_GUI_No_Batch.m (line 5669): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13226. Data_GUI_No_Batch.m (line 5692): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13227. Data_GUI_No_Batch.m (line 5693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13228. Data_GUI_No_Batch.m (line 5790): Function might be unused.\n  13229. Data_GUI_No_Batch.m (line 5807): Value assigned to variable might be unused.\n  13230. Data_GUI_No_Batch.m (line 5865): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13231. Data_GUI_No_Batch.m (line 5866): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13232. Data_GUI_No_Batch.m (line 5870): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13233. Data_GUI_No_Batch.m (line 5871): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13234. Data_GUI_No_Batch.m (line 5889): Function might be unused.\n  13235. Data_GUI_No_Batch.m (line 5947): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13236. Data_GUI_No_Batch.m (line 5947): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13237. Data_GUI_No_Batch.m (line 5979): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13238. Data_GUI_No_Batch.m (line 5979): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13239. Data_GUI_No_Batch.m (line 6142): Function might be unused.\n  13240. Data_GUI_No_Batch.m (line 6172): Function might be unused.\n  13241. Data_GUI_No_Batch.m (line 6263): Function might be unused.\n  13242. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\Data_GUI_No_Batch.m: Missing arguments validation block\n  13243. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  13244. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\addModelWorkspaceData.m: Missing arguments validation block\n  13245. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\checkHighMemoryUsage.m: Missing function docstring\n  13246. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\checkHighMemoryUsage.m: Missing arguments validation block\n  13247. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\checkModelConfiguration.m: Missing arguments validation block\n  13248. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\checkStopRequest.m: Missing function docstring\n  13249. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\checkStopRequest.m: Missing arguments validation block\n  13250. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13251. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13252. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13253. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13254. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13255. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13256. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13257. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\check_model_configuration.m: Missing arguments validation block\n  13258. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13259. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13260. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13261. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\checkpoint_recovery.m: Missing arguments validation block\n  13262. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\combineDataSources.m: Missing arguments validation block\n  13263. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  13264. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13265. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13266. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13267. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13268. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13269. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13270. data_extraction_functions.m (line 146): Function might be unused.\n  13271. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13272. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13273. data_extraction_functions.m (line 202): Function might be unused.\n  13274. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13275. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13276. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13277. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13278. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\data_extraction_functions.m: Missing function docstring\n  13279. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\data_extraction_functions.m: Missing arguments validation block\n  13280. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13281. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\endPhase.m: Missing arguments validation block\n  13282. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  13283. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13284. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13285. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13286. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13287. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13288. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13289. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractAllSignalsFromBus.m: Missing arguments validation block\n  13290. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  13291. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractCoefficientsFromTable.m: Missing function docstring\n  13292. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractCoefficientsFromTable.m: Missing arguments validation block\n  13293. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13294. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13295. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13296. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13297. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13298. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13299. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13300. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13301. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13302. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13303. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13304. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13305. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractCombinedSignalBusData.m: Missing function docstring\n  13306. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractCombinedSignalBusData.m: Missing arguments validation block\n  13307. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13308. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13309. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13310. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13311. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13312. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractConstantMatrixData.m: Missing function docstring\n  13313. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractConstantMatrixData.m: Missing arguments validation block\n  13314. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractDataFromField.m: Missing arguments validation block\n  13315. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  13316. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  13317. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractDataWithOptions.m: Missing arguments validation block\n  13318. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  13319. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  13320. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  13321. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  13322. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  13323. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13324. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13325. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13326. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13327. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13328. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13329. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13330. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13331. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13332. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13333. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13334. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13335. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13336. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13337. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13338. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13339. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13340. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13341. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractFromCombinedSignalBus.m: Missing function docstring\n  13342. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  13343. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  13344. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  13345. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  13346. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  13347. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  13348. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  13349. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13350. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13351. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13352. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13353. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13354. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13355. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13356. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13357. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13358. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13359. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13360. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13361. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13362. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13363. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13364. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13365. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  13366. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  13367. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13368. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13369. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractFromNestedStruct.m: Missing arguments validation block\n  13370. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13371. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13372. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13373. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13374. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13375. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13376. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractLogsoutDataFixed.m: Missing function docstring\n  13377. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractLogsoutDataFixed.m: Missing arguments validation block\n  13378. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractSignalsFromSimOut.m: Missing arguments validation block\n  13379. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13380. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13381. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13382. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractSimscapeDataRecursive.m: Missing function docstring\n  13383. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  13384. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractTimeSeriesData.m: Missing function docstring\n  13385. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractTimeSeriesData.m: Missing arguments validation block\n  13386. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13387. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13388. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13389. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13390. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractWorkspaceOutputs.m: Missing function docstring\n  13391. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\extractWorkspaceOutputs.m: Missing arguments validation block\n  13392. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13393. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13394. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  13395. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13396. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13397. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13398. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\fallbackSimlogExtraction.m: Missing function docstring\n  13399. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\fallbackSimlogExtraction.m: Missing arguments validation block\n  13400. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\generateRandomCoefficients.m: Missing arguments validation block\n  13401. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\getMemoryInfo.m: Missing function docstring\n  13402. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\getMemoryInfo.m: Missing arguments validation block\n  13403. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\getMemoryUsage.m: Missing arguments validation block\n  13404. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13405. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13406. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13407. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13408. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13409. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13410. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13411. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  13412. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13413. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13414. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13415. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13416. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13417. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\getPolynomialParameterInfo.m: Missing arguments validation block\n  13418. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\getShortenedJointName.m: Missing arguments validation block\n  13419. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13420. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13421. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  13422. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  13423. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\loadInputFile.m: Missing function docstring\n  13424. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\loadInputFile.m: Missing arguments validation block\n  13425. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\logBatchResult.m: Missing arguments validation block\n  13426. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13427. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\logMessage.m: Missing arguments validation block\n  13428. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\logical2str.m: Missing function docstring\n  13429. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\logical2str.m: Missing arguments validation block\n  13430. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  13431. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\memory_monitor.m: Missing arguments validation block\n  13432. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\mergeTables.m: Missing function docstring\n  13433. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\mergeTables.m: Missing arguments validation block\n  13434. performance_monitor.m (line 11): Persistent variable might be unused.\n  13435. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13436. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13437. performance_monitor.m (line 77): Function might be unused.\n  13438. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13439. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13440. performance_monitor.m (line 118): Function might be unused.\n  13441. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13442. performance_monitor.m (line 133): Function might be unused.\n  13443. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13444. performance_monitor.m (line 149): Function might be unused.\n  13445. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13446. performance_monitor.m (line 162): Function might be unused.\n  13447. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13448. performance_monitor.m (line 175): Function might be unused.\n  13449. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13450. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13451. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13452. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\performance_monitor.m: Missing arguments validation block\n  13453. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  13454. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  13455. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13456. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13457. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\processSimulationOutput.m: Missing function docstring\n  13458. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\processSimulationOutput.m: Missing arguments validation block\n  13459. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13460. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\recordBatchTime.m: Missing arguments validation block\n  13461. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13462. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\recordPhase.m: Missing arguments validation block\n  13463. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\resampleDataToFrequency.m: Missing function docstring\n  13464. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\resampleDataToFrequency.m: Missing arguments validation block\n  13465. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\restoreWorkspace.m: Missing arguments validation block\n  13466. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\runSingleTrial.m: Missing arguments validation block\n  13467. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\setModelParameters.m: Missing arguments validation block\n  13468. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13469. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\setPolynomialCoefficients.m: Missing arguments validation block\n  13470. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\shouldShowDebug.m: Missing function docstring\n  13471. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\shouldShowDebug.m: Missing arguments validation block\n  13472. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\shouldShowNormal.m: Missing function docstring\n  13473. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\shouldShowNormal.m: Missing arguments validation block\n  13474. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\shouldShowVerbose.m: Missing function docstring\n  13475. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\shouldShowVerbose.m: Missing arguments validation block\n  13476. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  13477. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13478. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\traverseSimlogNode.m: Missing arguments validation block\n  13479. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13480. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13481. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13482. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13483. verbosity_control.m (line 203): Function might be unused.\n  13484. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13485. verbosity_control.m (line 225): Function might be unused.\n  13486. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13487. verbosity_control.m (line 248): Function might be unused.\n  13488. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13489. verbosity_control.m (line 274): Function might be unused.\n  13490. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13491. verbosity_control.m (line 293): Function might be unused.\n  13492. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13493. verbosity_control.m (line 320): Function might be unused.\n  13494. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13495. verbosity_control.m (line 335): Function might be unused.\n  13496. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  13497. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1956_COLUMNS_20250802_130442\\verbosity_control.m: Missing arguments validation block\n  13498. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  13499. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  13500. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  13501. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  13502. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13503. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13504. Data_GUI.m (line 725): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13505. Data_GUI.m (line 726): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13506. Data_GUI.m (line 727): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13507. Data_GUI.m (line 728): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13508. Data_GUI.m (line 729): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13509. Data_GUI.m (line 745): Function might be unused.\n  13510. Data_GUI.m (line 970): Function might be unused.\n  13511. Data_GUI.m (line 985): Value assigned to variable might be unused.\n  13512. Data_GUI.m (line 1007): Function might be unused.\n  13513. Data_GUI.m (line 1184): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13514. Data_GUI.m (line 1185): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13515. Data_GUI.m (line 1186): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13516. Data_GUI.m (line 1187): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13517. Data_GUI.m (line 1188): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13518. Data_GUI.m (line 1218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13519. Data_GUI.m (line 1219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13520. Data_GUI.m (line 1220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13521. Data_GUI.m (line 1240): Function might be unused.\n  13522. Data_GUI.m (line 1281): Function might be unused.\n  13523. Data_GUI.m (line 1357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13524. Data_GUI.m (line 1427): Value assigned to variable might be unused.\n  13525. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13526. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13527. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13528. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13529. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13530. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13531. Data_GUI.m (line 1595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13532. Data_GUI.m (line 1596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13533. Data_GUI.m (line 1597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13534. Data_GUI.m (line 1598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13535. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13536. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13537. Data_GUI.m (line 1640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13538. Data_GUI.m (line 1641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13539. Data_GUI.m (line 1642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13540. Data_GUI.m (line 1653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13541. Data_GUI.m (line 1654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13542. Data_GUI.m (line 1659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13543. Data_GUI.m (line 1660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13544. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13545. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13546. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13547. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13548. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13549. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13550. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13551. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13552. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13553. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13554. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13555. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13556. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13557. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13558. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13559. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13560. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13561. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13562. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13563. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13564. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13565. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13566. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13567. Data_GUI.m (line 2027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13568. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13569. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13570. Data_GUI.m (line 2043): Function might be unused.\n  13571. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13572. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13573. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13574. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13575. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13576. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13577. Data_GUI.m (line 2252): Value assigned to variable might be unused.\n  13578. Data_GUI.m (line 2311): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  13579. Data_GUI.m (line 2455): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  13580. Data_GUI.m (line 2594): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13581. Data_GUI.m (line 2594): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13582. Data_GUI.m (line 2716): Function might be unused.\n  13583. Data_GUI.m (line 2893): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13584. Data_GUI.m (line 2893): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13585. Data_GUI.m (line 2925): Function might be unused.\n  13586. Data_GUI.m (line 3076): Function might be unused.\n  13587. Data_GUI.m (line 3154): Function might be unused.\n  13588. Data_GUI.m (line 3169): This keyword might not be aligned with its matching END on line 3180.\n  13589. Data_GUI.m (line 3182): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  13590. Data_GUI.m (line 3398): This keyword might not be aligned with its matching END on line 3400.\n  13591. Data_GUI.m (line 3502): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  13592. Data_GUI.m (line 3537): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13593. Data_GUI.m (line 3571): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13594. Data_GUI.m (line 3585): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13595. Data_GUI.m (line 3593): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13596. Data_GUI.m (line 3593): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13597. Data_GUI.m (line 3792): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13598. Data_GUI.m (line 3832): Function might be unused.\n  13599. Data_GUI.m (line 3864): Function might be unused.\n  13600. Data_GUI.m (line 3876): Value assigned to variable might be unused.\n  13601. Data_GUI.m (line 3886): Value assigned to variable might be unused.\n  13602. Data_GUI.m (line 3891): Value assigned to variable might be unused.\n  13603. Data_GUI.m (line 3896): Value assigned to variable might be unused.\n  13604. Data_GUI.m (line 3913): Value assigned to variable might be unused.\n  13605. Data_GUI.m (line 4022): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13606. Data_GUI.m (line 4023): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13607. Data_GUI.m (line 4030): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13608. Data_GUI.m (line 4031): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13609. Data_GUI.m (line 4044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13610. Data_GUI.m (line 4046): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13611. Data_GUI.m (line 4068): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13612. Data_GUI.m (line 4069): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13613. Data_GUI.m (line 4089): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13614. Data_GUI.m (line 4090): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13615. Data_GUI.m (line 4102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13616. Data_GUI.m (line 4103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13617. Data_GUI.m (line 4121): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13618. Data_GUI.m (line 4122): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13619. Data_GUI.m (line 4166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13620. Data_GUI.m (line 4167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13621. Data_GUI.m (line 4174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13622. Data_GUI.m (line 4175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13623. Data_GUI.m (line 4194): Function might be unused.\n  13624. Data_GUI.m (line 4252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13625. Data_GUI.m (line 4253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13626. Data_GUI.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13627. Data_GUI.m (line 4264): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13628. Data_GUI.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13629. Data_GUI.m (line 4284): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13630. Data_GUI.m (line 4337): Function might be unused.\n  13631. Data_GUI.m (line 4384): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13632. Data_GUI.m (line 4449): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13633. Data_GUI.m (line 4450): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13634. Data_GUI.m (line 4498): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13635. Data_GUI.m (line 4507): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13636. Data_GUI.m (line 4512): This statement (and possibly following ones) cannot be reached.\n  13637. Data_GUI.m (line 4514): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13638. Data_GUI.m (line 4521): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13639. Data_GUI.m (line 4551): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13640. Data_GUI.m (line 4591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13641. Data_GUI.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13642. Data_GUI.m (line 4625): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13643. Data_GUI.m (line 4637): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13644. Data_GUI.m (line 4650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13645. Data_GUI.m (line 4744): Function might be unused.\n  13646. Data_GUI.m (line 4750): Value assigned to variable might be unused.\n  13647. Data_GUI.m (line 4778): Value assigned to variable might be unused.\n  13648. Data_GUI.m (line 4803): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13649. Data_GUI.m (line 4825): Value assigned to variable might be unused.\n  13650. Data_GUI.m (line 4859): Value assigned to variable might be unused.\n  13651. Data_GUI.m (line 4888): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13652. Data_GUI.m (line 4921): Function might be unused.\n  13653. Data_GUI.m (line 4965): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13654. Data_GUI.m (line 4966): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13655. Data_GUI.m (line 4989): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13656. Data_GUI.m (line 4990): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13657. Data_GUI.m (line 5010): Function might be unused.\n  13658. Data_GUI.m (line 5087): Function might be unused.\n  13659. Data_GUI.m (line 5104): Value assigned to variable might be unused.\n  13660. Data_GUI.m (line 5162): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13661. Data_GUI.m (line 5163): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13662. Data_GUI.m (line 5167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13663. Data_GUI.m (line 5168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13664. Data_GUI.m (line 5186): Function might be unused.\n  13665. Data_GUI.m (line 5244): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13666. Data_GUI.m (line 5244): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13667. Data_GUI.m (line 5276): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13668. Data_GUI.m (line 5276): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13669. Data_GUI.m (line 5439): Function might be unused.\n  13670. Data_GUI.m (line 5469): Function might be unused.\n  13671. Data_GUI.m (line 5560): Function might be unused.\n  13672. Data_GUI.m (line 5598): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13673. Data_GUI.m (line 5629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13674. Data_GUI.m (line 5665): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13675. Data_GUI.m (line 5667): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13676. Data_GUI.m (line 5667): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13677. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\Data_GUI.m: Missing arguments validation block\n  13678. Data_GUI_BROKEN.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_BROKEN'.\n  13679. Data_GUI_BROKEN.m (line 239): Value assigned to variable might be unused.\n  13680. Data_GUI_BROKEN.m (line 340): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13681. Data_GUI_BROKEN.m (line 340): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13682. Data_GUI_BROKEN.m (line 734): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13683. Data_GUI_BROKEN.m (line 735): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13684. Data_GUI_BROKEN.m (line 736): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13685. Data_GUI_BROKEN.m (line 737): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13686. Data_GUI_BROKEN.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13687. Data_GUI_BROKEN.m (line 754): Function might be unused.\n  13688. Data_GUI_BROKEN.m (line 979): Function might be unused.\n  13689. Data_GUI_BROKEN.m (line 994): Value assigned to variable might be unused.\n  13690. Data_GUI_BROKEN.m (line 1016): Function might be unused.\n  13691. Data_GUI_BROKEN.m (line 1193): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13692. Data_GUI_BROKEN.m (line 1194): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13693. Data_GUI_BROKEN.m (line 1195): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13694. Data_GUI_BROKEN.m (line 1196): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13695. Data_GUI_BROKEN.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13696. Data_GUI_BROKEN.m (line 1227): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13697. Data_GUI_BROKEN.m (line 1228): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13698. Data_GUI_BROKEN.m (line 1229): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13699. Data_GUI_BROKEN.m (line 1249): Function might be unused.\n  13700. Data_GUI_BROKEN.m (line 1290): Function might be unused.\n  13701. Data_GUI_BROKEN.m (line 1366): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13702. Data_GUI_BROKEN.m (line 1436): Value assigned to variable might be unused.\n  13703. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13704. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13705. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13706. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13707. Data_GUI_BROKEN.m (line 1652): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13708. Data_GUI_BROKEN.m (line 1654): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13709. Data_GUI_BROKEN.m (line 1654): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13710. Data_GUI_BROKEN.m (line 1664): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13711. Data_GUI_BROKEN.m (line 1665): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13712. Data_GUI_BROKEN.m (line 1666): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13713. Data_GUI_BROKEN.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13714. Data_GUI_BROKEN.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13715. Data_GUI_BROKEN.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13716. Data_GUI_BROKEN.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13717. Data_GUI_BROKEN.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13718. Data_GUI_BROKEN.m (line 1672): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13719. Data_GUI_BROKEN.m (line 1673): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13720. Data_GUI_BROKEN.m (line 1674): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13721. Data_GUI_BROKEN.m (line 1675): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13722. Data_GUI_BROKEN.m (line 1676): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13723. Data_GUI_BROKEN.m (line 1677): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13724. Data_GUI_BROKEN.m (line 1678): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13725. Data_GUI_BROKEN.m (line 1679): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13726. Data_GUI_BROKEN.m (line 1680): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13727. Data_GUI_BROKEN.m (line 1681): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13728. Data_GUI_BROKEN.m (line 1682): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13729. Data_GUI_BROKEN.m (line 1683): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13730. Data_GUI_BROKEN.m (line 1684): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13731. Data_GUI_BROKEN.m (line 1685): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13732. Data_GUI_BROKEN.m (line 1686): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13733. Data_GUI_BROKEN.m (line 1687): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13734. Data_GUI_BROKEN.m (line 1688): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13735. Data_GUI_BROKEN.m (line 1689): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13736. Data_GUI_BROKEN.m (line 1690): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13737. Data_GUI_BROKEN.m (line 1691): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13738. Data_GUI_BROKEN.m (line 1692): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13739. Data_GUI_BROKEN.m (line 1693): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13740. Data_GUI_BROKEN.m (line 1694): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13741. Data_GUI_BROKEN.m (line 1695): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13742. Data_GUI_BROKEN.m (line 1696): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13743. Data_GUI_BROKEN.m (line 1697): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13744. Data_GUI_BROKEN.m (line 1698): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13745. Data_GUI_BROKEN.m (line 1699): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13746. Data_GUI_BROKEN.m (line 1700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13747. Data_GUI_BROKEN.m (line 1701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13748. Data_GUI_BROKEN.m (line 1702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13749. Data_GUI_BROKEN.m (line 1703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13750. Data_GUI_BROKEN.m (line 1704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13751. Data_GUI_BROKEN.m (line 1705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13752. Data_GUI_BROKEN.m (line 1706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13753. Data_GUI_BROKEN.m (line 1707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13754. Data_GUI_BROKEN.m (line 1708): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13755. Data_GUI_BROKEN.m (line 1709): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13756. Data_GUI_BROKEN.m (line 1710): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13757. Data_GUI_BROKEN.m (line 1711): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13758. Data_GUI_BROKEN.m (line 1712): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13759. Data_GUI_BROKEN.m (line 1713): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13760. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13761. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13762. Data_GUI_BROKEN.m (line 1767): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13763. Data_GUI_BROKEN.m (line 1768): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13764. Data_GUI_BROKEN.m (line 1769): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13765. Data_GUI_BROKEN.m (line 1770): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13766. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13767. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13768. Data_GUI_BROKEN.m (line 1812): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13769. Data_GUI_BROKEN.m (line 1813): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13770. Data_GUI_BROKEN.m (line 1814): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13771. Data_GUI_BROKEN.m (line 1825): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13772. Data_GUI_BROKEN.m (line 1826): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13773. Data_GUI_BROKEN.m (line 1831): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13774. Data_GUI_BROKEN.m (line 1832): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13775. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13776. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13777. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13778. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13779. Data_GUI_BROKEN.m (line 1897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13780. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13781. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13782. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13783. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13784. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13785. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13786. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13787. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13788. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13789. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13790. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13791. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13792. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13793. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13794. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13795. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13796. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13797. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13798. Data_GUI_BROKEN.m (line 2199): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13799. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13800. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13801. Data_GUI_BROKEN.m (line 2215): Function might be unused.\n  13802. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13803. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13804. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13805. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13806. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13807. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13808. Data_GUI_BROKEN.m (line 2427): Value assigned to variable might be unused.\n  13809. Data_GUI_BROKEN.m (line 2486): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  13810. Data_GUI_BROKEN.m (line 2630): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  13811. Data_GUI_BROKEN.m (line 2769): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13812. Data_GUI_BROKEN.m (line 2769): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13813. Data_GUI_BROKEN.m (line 2891): Function might be unused.\n  13814. Data_GUI_BROKEN.m (line 3068): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13815. Data_GUI_BROKEN.m (line 3068): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13816. Data_GUI_BROKEN.m (line 3100): Function might be unused.\n  13817. Data_GUI_BROKEN.m (line 3251): Function might be unused.\n  13818. Data_GUI_BROKEN.m (line 3329): Function might be unused.\n  13819. Data_GUI_BROKEN.m (line 3344): This keyword might not be aligned with its matching END on line 3355.\n  13820. Data_GUI_BROKEN.m (line 3357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  13821. Data_GUI_BROKEN.m (line 3573): This keyword might not be aligned with its matching END on line 3575.\n  13822. Data_GUI_BROKEN.m (line 3677): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  13823. Data_GUI_BROKEN.m (line 3712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13824. Data_GUI_BROKEN.m (line 3746): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13825. Data_GUI_BROKEN.m (line 3760): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13826. Data_GUI_BROKEN.m (line 3768): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13827. Data_GUI_BROKEN.m (line 3768): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13828. Data_GUI_BROKEN.m (line 3967): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13829. Data_GUI_BROKEN.m (line 4007): Function might be unused.\n  13830. Data_GUI_BROKEN.m (line 4039): Function might be unused.\n  13831. Data_GUI_BROKEN.m (line 4051): Value assigned to variable might be unused.\n  13832. Data_GUI_BROKEN.m (line 4061): Value assigned to variable might be unused.\n  13833. Data_GUI_BROKEN.m (line 4066): Value assigned to variable might be unused.\n  13834. Data_GUI_BROKEN.m (line 4071): Value assigned to variable might be unused.\n  13835. Data_GUI_BROKEN.m (line 4088): Value assigned to variable might be unused.\n  13836. Data_GUI_BROKEN.m (line 4197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13837. Data_GUI_BROKEN.m (line 4198): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13838. Data_GUI_BROKEN.m (line 4205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13839. Data_GUI_BROKEN.m (line 4206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13840. Data_GUI_BROKEN.m (line 4219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13841. Data_GUI_BROKEN.m (line 4221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13842. Data_GUI_BROKEN.m (line 4243): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13843. Data_GUI_BROKEN.m (line 4244): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13844. Data_GUI_BROKEN.m (line 4262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13845. Data_GUI_BROKEN.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13846. Data_GUI_BROKEN.m (line 4282): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13847. Data_GUI_BROKEN.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13848. Data_GUI_BROKEN.m (line 4294): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13849. Data_GUI_BROKEN.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13850. Data_GUI_BROKEN.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13851. Data_GUI_BROKEN.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13852. Data_GUI_BROKEN.m (line 4325): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13853. Data_GUI_BROKEN.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13854. Data_GUI_BROKEN.m (line 4370): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13855. Data_GUI_BROKEN.m (line 4371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13856. Data_GUI_BROKEN.m (line 4378): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13857. Data_GUI_BROKEN.m (line 4379): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13858. Data_GUI_BROKEN.m (line 4398): Function might be unused.\n  13859. Data_GUI_BROKEN.m (line 4456): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13860. Data_GUI_BROKEN.m (line 4457): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13861. Data_GUI_BROKEN.m (line 4467): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13862. Data_GUI_BROKEN.m (line 4468): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13863. Data_GUI_BROKEN.m (line 4487): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13864. Data_GUI_BROKEN.m (line 4488): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13865. Data_GUI_BROKEN.m (line 4541): Function might be unused.\n  13866. Data_GUI_BROKEN.m (line 4588): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13867. Data_GUI_BROKEN.m (line 4653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13868. Data_GUI_BROKEN.m (line 4654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13869. Data_GUI_BROKEN.m (line 4702): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13870. Data_GUI_BROKEN.m (line 4711): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13871. Data_GUI_BROKEN.m (line 4716): This statement (and possibly following ones) cannot be reached.\n  13872. Data_GUI_BROKEN.m (line 4718): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13873. Data_GUI_BROKEN.m (line 4725): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13874. Data_GUI_BROKEN.m (line 4755): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13875. Data_GUI_BROKEN.m (line 4795): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13876. Data_GUI_BROKEN.m (line 4818): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13877. Data_GUI_BROKEN.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13878. Data_GUI_BROKEN.m (line 4841): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13879. Data_GUI_BROKEN.m (line 4854): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13880. Data_GUI_BROKEN.m (line 4948): Function might be unused.\n  13881. Data_GUI_BROKEN.m (line 4954): Value assigned to variable might be unused.\n  13882. Data_GUI_BROKEN.m (line 4982): Value assigned to variable might be unused.\n  13883. Data_GUI_BROKEN.m (line 5007): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13884. Data_GUI_BROKEN.m (line 5029): Value assigned to variable might be unused.\n  13885. Data_GUI_BROKEN.m (line 5063): Value assigned to variable might be unused.\n  13886. Data_GUI_BROKEN.m (line 5092): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13887. Data_GUI_BROKEN.m (line 5125): Function might be unused.\n  13888. Data_GUI_BROKEN.m (line 5169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13889. Data_GUI_BROKEN.m (line 5170): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13890. Data_GUI_BROKEN.m (line 5193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13891. Data_GUI_BROKEN.m (line 5194): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13892. Data_GUI_BROKEN.m (line 5214): Function might be unused.\n  13893. Data_GUI_BROKEN.m (line 5291): Function might be unused.\n  13894. Data_GUI_BROKEN.m (line 5308): Value assigned to variable might be unused.\n  13895. Data_GUI_BROKEN.m (line 5366): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13896. Data_GUI_BROKEN.m (line 5367): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13897. Data_GUI_BROKEN.m (line 5371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13898. Data_GUI_BROKEN.m (line 5372): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13899. Data_GUI_BROKEN.m (line 5390): Function might be unused.\n  13900. Data_GUI_BROKEN.m (line 5448): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13901. Data_GUI_BROKEN.m (line 5448): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13902. Data_GUI_BROKEN.m (line 5480): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13903. Data_GUI_BROKEN.m (line 5480): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13904. Data_GUI_BROKEN.m (line 5643): Function might be unused.\n  13905. Data_GUI_BROKEN.m (line 5673): Function might be unused.\n  13906. Data_GUI_BROKEN.m (line 5764): Function might be unused.\n  13907. Data_GUI_BROKEN.m (line 5802): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13908. Data_GUI_BROKEN.m (line 5833): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13909. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\Data_GUI_BROKEN.m: Missing arguments validation block\n  13910. Data_GUI_No_Batch.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_No_Batch'.\n  13911. Data_GUI_No_Batch.m (line 237): Value assigned to variable might be unused.\n  13912. Data_GUI_No_Batch.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13913. Data_GUI_No_Batch.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13914. Data_GUI_No_Batch.m (line 700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13915. Data_GUI_No_Batch.m (line 701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13916. Data_GUI_No_Batch.m (line 702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13917. Data_GUI_No_Batch.m (line 703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13918. Data_GUI_No_Batch.m (line 704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13919. Data_GUI_No_Batch.m (line 720): Function might be unused.\n  13920. Data_GUI_No_Batch.m (line 945): Function might be unused.\n  13921. Data_GUI_No_Batch.m (line 960): Value assigned to variable might be unused.\n  13922. Data_GUI_No_Batch.m (line 982): Function might be unused.\n  13923. Data_GUI_No_Batch.m (line 1157): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13924. Data_GUI_No_Batch.m (line 1158): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13925. Data_GUI_No_Batch.m (line 1159): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13926. Data_GUI_No_Batch.m (line 1160): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13927. Data_GUI_No_Batch.m (line 1161): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13928. Data_GUI_No_Batch.m (line 1191): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13929. Data_GUI_No_Batch.m (line 1192): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13930. Data_GUI_No_Batch.m (line 1193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13931. Data_GUI_No_Batch.m (line 1213): Function might be unused.\n  13932. Data_GUI_No_Batch.m (line 1254): Function might be unused.\n  13933. Data_GUI_No_Batch.m (line 1330): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13934. Data_GUI_No_Batch.m (line 1400): Value assigned to variable might be unused.\n  13935. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13936. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13937. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13938. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13939. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13940. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13941. Data_GUI_No_Batch.m (line 1565): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13942. Data_GUI_No_Batch.m (line 1566): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13943. Data_GUI_No_Batch.m (line 1567): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13944. Data_GUI_No_Batch.m (line 1568): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13945. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13946. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13947. Data_GUI_No_Batch.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13948. Data_GUI_No_Batch.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13949. Data_GUI_No_Batch.m (line 1612): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  13950. Data_GUI_No_Batch.m (line 1623): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13951. Data_GUI_No_Batch.m (line 1624): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13952. Data_GUI_No_Batch.m (line 1629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13953. Data_GUI_No_Batch.m (line 1630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13954. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13955. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13956. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13957. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13958. Data_GUI_No_Batch.m (line 1695): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13959. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13960. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13961. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13962. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13963. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13964. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13965. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13966. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13967. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13968. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13969. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13970. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13971. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13972. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13973. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13974. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13975. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13976. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13977. Data_GUI_No_Batch.m (line 1997): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  13978. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13979. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13980. Data_GUI_No_Batch.m (line 2013): Function might be unused.\n  13981. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13982. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13983. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13984. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13985. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13986. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13987. Data_GUI_No_Batch.m (line 2222): Value assigned to variable might be unused.\n  13988. Data_GUI_No_Batch.m (line 2281): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  13989. Data_GUI_No_Batch.m (line 2385): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  13990. Data_GUI_No_Batch.m (line 2524): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13991. Data_GUI_No_Batch.m (line 2524): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13992. Data_GUI_No_Batch.m (line 2646): Function might be unused.\n  13993. Data_GUI_No_Batch.m (line 2821): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  13994. Data_GUI_No_Batch.m (line 2821): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  13995. Data_GUI_No_Batch.m (line 2853): Function might be unused.\n  13996. Data_GUI_No_Batch.m (line 2971): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13997. Data_GUI_No_Batch.m (line 3151): Input argument might be unused. Consider replacing the argument with ~ instead.\n  13998. Data_GUI_No_Batch.m (line 3249): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  13999. Data_GUI_No_Batch.m (line 3297): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14000. Data_GUI_No_Batch.m (line 3297): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14001. Data_GUI_No_Batch.m (line 3626): This keyword might not be aligned with its matching END on line 3637.\n  14002. Data_GUI_No_Batch.m (line 3639): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  14003. Data_GUI_No_Batch.m (line 3855): This keyword might not be aligned with its matching END on line 3857.\n  14004. Data_GUI_No_Batch.m (line 3959): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  14005. Data_GUI_No_Batch.m (line 3969): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14006. Data_GUI_No_Batch.m (line 3970): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14007. Data_GUI_No_Batch.m (line 3971): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14008. Data_GUI_No_Batch.m (line 4014): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14009. Data_GUI_No_Batch.m (line 4015): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14010. Data_GUI_No_Batch.m (line 4025): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  14011. Data_GUI_No_Batch.m (line 4041): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14012. Data_GUI_No_Batch.m (line 4042): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14013. Data_GUI_No_Batch.m (line 4083): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14014. Data_GUI_No_Batch.m (line 4117): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14015. Data_GUI_No_Batch.m (line 4131): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14016. Data_GUI_No_Batch.m (line 4139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14017. Data_GUI_No_Batch.m (line 4139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14018. Data_GUI_No_Batch.m (line 4338): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14019. Data_GUI_No_Batch.m (line 4378): Function might be unused.\n  14020. Data_GUI_No_Batch.m (line 4422): Value assigned to variable might be unused.\n  14021. Data_GUI_No_Batch.m (line 4432): Value assigned to variable might be unused.\n  14022. Data_GUI_No_Batch.m (line 4437): Value assigned to variable might be unused.\n  14023. Data_GUI_No_Batch.m (line 4442): Value assigned to variable might be unused.\n  14024. Data_GUI_No_Batch.m (line 4459): Value assigned to variable might be unused.\n  14025. Data_GUI_No_Batch.m (line 4568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14026. Data_GUI_No_Batch.m (line 4569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14027. Data_GUI_No_Batch.m (line 4576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14028. Data_GUI_No_Batch.m (line 4577): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14029. Data_GUI_No_Batch.m (line 4590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14030. Data_GUI_No_Batch.m (line 4592): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14031. Data_GUI_No_Batch.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14032. Data_GUI_No_Batch.m (line 4615): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14033. Data_GUI_No_Batch.m (line 4635): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14034. Data_GUI_No_Batch.m (line 4636): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14035. Data_GUI_No_Batch.m (line 4648): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14036. Data_GUI_No_Batch.m (line 4649): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14037. Data_GUI_No_Batch.m (line 4667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14038. Data_GUI_No_Batch.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14039. Data_GUI_No_Batch.m (line 4712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14040. Data_GUI_No_Batch.m (line 4713): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14041. Data_GUI_No_Batch.m (line 4720): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14042. Data_GUI_No_Batch.m (line 4721): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14043. Data_GUI_No_Batch.m (line 4798): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14044. Data_GUI_No_Batch.m (line 4799): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14045. Data_GUI_No_Batch.m (line 4809): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14046. Data_GUI_No_Batch.m (line 4810): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14047. Data_GUI_No_Batch.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14048. Data_GUI_No_Batch.m (line 4830): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14049. Data_GUI_No_Batch.m (line 4930): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14050. Data_GUI_No_Batch.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14051. Data_GUI_No_Batch.m (line 4996): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14052. Data_GUI_No_Batch.m (line 5044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14053. Data_GUI_No_Batch.m (line 5053): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14054. Data_GUI_No_Batch.m (line 5058): This statement (and possibly following ones) cannot be reached.\n  14055. Data_GUI_No_Batch.m (line 5060): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14056. Data_GUI_No_Batch.m (line 5067): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14057. Data_GUI_No_Batch.m (line 5097): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14058. Data_GUI_No_Batch.m (line 5137): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14059. Data_GUI_No_Batch.m (line 5160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14060. Data_GUI_No_Batch.m (line 5171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14061. Data_GUI_No_Batch.m (line 5183): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14062. Data_GUI_No_Batch.m (line 5196): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14063. Data_GUI_No_Batch.m (line 5225): Value assigned to variable might be unused.\n  14064. Data_GUI_No_Batch.m (line 5252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14065. Data_GUI_No_Batch.m (line 5284): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  14066. Data_GUI_No_Batch.m (line 5298): Value assigned to variable might be unused.\n  14067. Data_GUI_No_Batch.m (line 5316): Value assigned to variable might be unused.\n  14068. Data_GUI_No_Batch.m (line 5332): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14069. Data_GUI_No_Batch.m (line 5360): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14070. Data_GUI_No_Batch.m (line 5447): Function might be unused.\n  14071. Data_GUI_No_Batch.m (line 5453): Value assigned to variable might be unused.\n  14072. Data_GUI_No_Batch.m (line 5481): Value assigned to variable might be unused.\n  14073. Data_GUI_No_Batch.m (line 5506): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14074. Data_GUI_No_Batch.m (line 5528): Value assigned to variable might be unused.\n  14075. Data_GUI_No_Batch.m (line 5562): Value assigned to variable might be unused.\n  14076. Data_GUI_No_Batch.m (line 5591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14077. Data_GUI_No_Batch.m (line 5624): Function might be unused.\n  14078. Data_GUI_No_Batch.m (line 5668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14079. Data_GUI_No_Batch.m (line 5669): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14080. Data_GUI_No_Batch.m (line 5692): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14081. Data_GUI_No_Batch.m (line 5693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14082. Data_GUI_No_Batch.m (line 5790): Function might be unused.\n  14083. Data_GUI_No_Batch.m (line 5807): Value assigned to variable might be unused.\n  14084. Data_GUI_No_Batch.m (line 5865): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14085. Data_GUI_No_Batch.m (line 5866): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14086. Data_GUI_No_Batch.m (line 5870): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14087. Data_GUI_No_Batch.m (line 5871): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14088. Data_GUI_No_Batch.m (line 5889): Function might be unused.\n  14089. Data_GUI_No_Batch.m (line 5947): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14090. Data_GUI_No_Batch.m (line 5947): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14091. Data_GUI_No_Batch.m (line 5979): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14092. Data_GUI_No_Batch.m (line 5979): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14093. Data_GUI_No_Batch.m (line 6142): Function might be unused.\n  14094. Data_GUI_No_Batch.m (line 6172): Function might be unused.\n  14095. Data_GUI_No_Batch.m (line 6263): Function might be unused.\n  14096. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\Data_GUI_No_Batch.m: Missing arguments validation block\n  14097. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  14098. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\addModelWorkspaceData.m: Missing arguments validation block\n  14099. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\checkHighMemoryUsage.m: Missing function docstring\n  14100. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\checkHighMemoryUsage.m: Missing arguments validation block\n  14101. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\checkModelConfiguration.m: Missing arguments validation block\n  14102. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\checkStopRequest.m: Missing function docstring\n  14103. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\checkStopRequest.m: Missing arguments validation block\n  14104. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14105. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14106. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14107. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14108. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14109. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14110. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14111. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\check_model_configuration.m: Missing arguments validation block\n  14112. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14113. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14114. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14115. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\checkpoint_recovery.m: Missing arguments validation block\n  14116. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\combineDataSources.m: Missing arguments validation block\n  14117. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  14118. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14119. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14120. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14121. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14122. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14123. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14124. data_extraction_functions.m (line 146): Function might be unused.\n  14125. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14126. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14127. data_extraction_functions.m (line 202): Function might be unused.\n  14128. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14129. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14130. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14131. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14132. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\data_extraction_functions.m: Missing function docstring\n  14133. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\data_extraction_functions.m: Missing arguments validation block\n  14134. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14135. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\endPhase.m: Missing arguments validation block\n  14136. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  14137. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14138. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14139. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14140. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14141. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14142. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14143. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractAllSignalsFromBus.m: Missing arguments validation block\n  14144. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  14145. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractCoefficientsFromTable.m: Missing function docstring\n  14146. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractCoefficientsFromTable.m: Missing arguments validation block\n  14147. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14148. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14149. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14150. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14151. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14152. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14153. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14154. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14155. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14156. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14157. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14158. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14159. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractCombinedSignalBusData.m: Missing function docstring\n  14160. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractCombinedSignalBusData.m: Missing arguments validation block\n  14161. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14162. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14163. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14164. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14165. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14166. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractConstantMatrixData.m: Missing function docstring\n  14167. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractConstantMatrixData.m: Missing arguments validation block\n  14168. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractDataFromField.m: Missing arguments validation block\n  14169. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  14170. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  14171. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractDataWithOptions.m: Missing arguments validation block\n  14172. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  14173. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  14174. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  14175. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  14176. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  14177. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14178. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14179. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14180. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14181. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14182. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14183. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14184. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14185. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14186. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14187. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14188. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14189. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14190. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14191. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14192. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14193. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14194. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14195. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractFromCombinedSignalBus.m: Missing function docstring\n  14196. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  14197. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  14198. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  14199. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  14200. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  14201. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  14202. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  14203. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14204. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14205. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14206. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14207. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14208. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14209. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14210. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14211. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14212. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14213. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14214. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14215. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14216. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14217. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14218. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14219. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  14220. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  14221. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14222. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14223. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractFromNestedStruct.m: Missing arguments validation block\n  14224. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14225. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14226. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14227. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14228. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14229. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14230. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractLogsoutDataFixed.m: Missing function docstring\n  14231. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractLogsoutDataFixed.m: Missing arguments validation block\n  14232. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractSignalsFromSimOut.m: Missing arguments validation block\n  14233. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14234. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14235. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14236. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractSimscapeDataRecursive.m: Missing function docstring\n  14237. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  14238. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractTimeSeriesData.m: Missing function docstring\n  14239. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractTimeSeriesData.m: Missing arguments validation block\n  14240. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14241. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14242. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14243. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14244. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractWorkspaceOutputs.m: Missing function docstring\n  14245. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\extractWorkspaceOutputs.m: Missing arguments validation block\n  14246. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14247. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14248. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  14249. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14250. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14251. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14252. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\fallbackSimlogExtraction.m: Missing function docstring\n  14253. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\fallbackSimlogExtraction.m: Missing arguments validation block\n  14254. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\generateRandomCoefficients.m: Missing arguments validation block\n  14255. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\getMemoryInfo.m: Missing function docstring\n  14256. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\getMemoryInfo.m: Missing arguments validation block\n  14257. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\getMemoryUsage.m: Missing arguments validation block\n  14258. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14259. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14260. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14261. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14262. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14263. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14264. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14265. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  14266. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14267. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14268. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14269. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14270. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14271. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\getPolynomialParameterInfo.m: Missing arguments validation block\n  14272. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\getShortenedJointName.m: Missing arguments validation block\n  14273. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14274. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14275. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  14276. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  14277. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\loadInputFile.m: Missing function docstring\n  14278. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\loadInputFile.m: Missing arguments validation block\n  14279. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\logBatchResult.m: Missing arguments validation block\n  14280. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14281. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\logMessage.m: Missing arguments validation block\n  14282. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\logical2str.m: Missing function docstring\n  14283. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\logical2str.m: Missing arguments validation block\n  14284. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  14285. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\memory_monitor.m: Missing arguments validation block\n  14286. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\mergeTables.m: Missing function docstring\n  14287. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\mergeTables.m: Missing arguments validation block\n  14288. performance_monitor.m (line 11): Persistent variable might be unused.\n  14289. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14290. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14291. performance_monitor.m (line 77): Function might be unused.\n  14292. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14293. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14294. performance_monitor.m (line 118): Function might be unused.\n  14295. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14296. performance_monitor.m (line 133): Function might be unused.\n  14297. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14298. performance_monitor.m (line 149): Function might be unused.\n  14299. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14300. performance_monitor.m (line 162): Function might be unused.\n  14301. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14302. performance_monitor.m (line 175): Function might be unused.\n  14303. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14304. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14305. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14306. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\performance_monitor.m: Missing arguments validation block\n  14307. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  14308. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  14309. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14310. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14311. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\processSimulationOutput.m: Missing function docstring\n  14312. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\processSimulationOutput.m: Missing arguments validation block\n  14313. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14314. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\recordBatchTime.m: Missing arguments validation block\n  14315. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14316. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\recordPhase.m: Missing arguments validation block\n  14317. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\resampleDataToFrequency.m: Missing function docstring\n  14318. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\resampleDataToFrequency.m: Missing arguments validation block\n  14319. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\restoreWorkspace.m: Missing arguments validation block\n  14320. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\runSingleTrial.m: Missing arguments validation block\n  14321. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\setModelParameters.m: Missing arguments validation block\n  14322. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14323. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\setPolynomialCoefficients.m: Missing arguments validation block\n  14324. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\shouldShowDebug.m: Missing function docstring\n  14325. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\shouldShowDebug.m: Missing arguments validation block\n  14326. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\shouldShowNormal.m: Missing function docstring\n  14327. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\shouldShowNormal.m: Missing arguments validation block\n  14328. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\shouldShowVerbose.m: Missing function docstring\n  14329. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\shouldShowVerbose.m: Missing arguments validation block\n  14330. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  14331. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14332. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\traverseSimlogNode.m: Missing arguments validation block\n  14333. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14334. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14335. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14336. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14337. verbosity_control.m (line 203): Function might be unused.\n  14338. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14339. verbosity_control.m (line 225): Function might be unused.\n  14340. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14341. verbosity_control.m (line 248): Function might be unused.\n  14342. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14343. verbosity_control.m (line 274): Function might be unused.\n  14344. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14345. verbosity_control.m (line 293): Function might be unused.\n  14346. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14347. verbosity_control.m (line 320): Function might be unused.\n  14348. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14349. verbosity_control.m (line 335): Function might be unused.\n  14350. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14351. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1959_COLUMNS_20250802_121441\\verbosity_control.m: Missing arguments validation block\n  14352. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  14353. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  14354. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  14355. Data_GUI.m (line 237): Value assigned to variable might be unused.\n  14356. Data_GUI.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14357. Data_GUI.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14358. Data_GUI.m (line 725): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14359. Data_GUI.m (line 726): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14360. Data_GUI.m (line 727): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14361. Data_GUI.m (line 728): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14362. Data_GUI.m (line 729): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14363. Data_GUI.m (line 745): Function might be unused.\n  14364. Data_GUI.m (line 970): Function might be unused.\n  14365. Data_GUI.m (line 985): Value assigned to variable might be unused.\n  14366. Data_GUI.m (line 1007): Function might be unused.\n  14367. Data_GUI.m (line 1184): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14368. Data_GUI.m (line 1185): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14369. Data_GUI.m (line 1186): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14370. Data_GUI.m (line 1187): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14371. Data_GUI.m (line 1188): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14372. Data_GUI.m (line 1218): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14373. Data_GUI.m (line 1219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14374. Data_GUI.m (line 1220): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14375. Data_GUI.m (line 1240): Function might be unused.\n  14376. Data_GUI.m (line 1281): Function might be unused.\n  14377. Data_GUI.m (line 1357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14378. Data_GUI.m (line 1427): Value assigned to variable might be unused.\n  14379. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14380. Data_GUI.m (line 1514): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14381. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14382. Data_GUI.m (line 1572): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14383. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14384. Data_GUI.m (line 1582): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14385. Data_GUI.m (line 1595): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14386. Data_GUI.m (line 1596): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14387. Data_GUI.m (line 1597): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14388. Data_GUI.m (line 1598): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14389. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14390. Data_GUI.m (line 1627): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14391. Data_GUI.m (line 1640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14392. Data_GUI.m (line 1641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14393. Data_GUI.m (line 1642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14394. Data_GUI.m (line 1653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14395. Data_GUI.m (line 1654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14396. Data_GUI.m (line 1659): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14397. Data_GUI.m (line 1660): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14398. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14399. Data_GUI.m (line 1699): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14400. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14401. Data_GUI.m (line 1712): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14402. Data_GUI.m (line 1725): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14403. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14404. Data_GUI.m (line 1737): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14405. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14406. Data_GUI.m (line 1793): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14407. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14408. Data_GUI.m (line 1843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14409. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14410. Data_GUI.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14411. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14412. Data_GUI.m (line 1920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14413. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14414. Data_GUI.m (line 1942): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14415. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14416. Data_GUI.m (line 1963): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14417. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14418. Data_GUI.m (line 1987): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14419. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14420. Data_GUI.m (line 2012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14421. Data_GUI.m (line 2027): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14422. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14423. Data_GUI.m (line 2038): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14424. Data_GUI.m (line 2043): Function might be unused.\n  14425. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14426. Data_GUI.m (line 2043): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14427. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14428. Data_GUI.m (line 2056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14429. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14430. Data_GUI.m (line 2070): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14431. Data_GUI.m (line 2252): Value assigned to variable might be unused.\n  14432. Data_GUI.m (line 2311): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  14433. Data_GUI.m (line 2455): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  14434. Data_GUI.m (line 2594): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14435. Data_GUI.m (line 2594): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14436. Data_GUI.m (line 2716): Function might be unused.\n  14437. Data_GUI.m (line 2893): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14438. Data_GUI.m (line 2893): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14439. Data_GUI.m (line 2925): Function might be unused.\n  14440. Data_GUI.m (line 3076): Function might be unused.\n  14441. Data_GUI.m (line 3154): Function might be unused.\n  14442. Data_GUI.m (line 3169): This keyword might not be aligned with its matching END on line 3180.\n  14443. Data_GUI.m (line 3182): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  14444. Data_GUI.m (line 3398): This keyword might not be aligned with its matching END on line 3400.\n  14445. Data_GUI.m (line 3502): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  14446. Data_GUI.m (line 3537): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14447. Data_GUI.m (line 3571): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14448. Data_GUI.m (line 3585): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14449. Data_GUI.m (line 3593): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14450. Data_GUI.m (line 3593): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14451. Data_GUI.m (line 3792): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14452. Data_GUI.m (line 3832): Function might be unused.\n  14453. Data_GUI.m (line 3864): Function might be unused.\n  14454. Data_GUI.m (line 3876): Value assigned to variable might be unused.\n  14455. Data_GUI.m (line 3886): Value assigned to variable might be unused.\n  14456. Data_GUI.m (line 3891): Value assigned to variable might be unused.\n  14457. Data_GUI.m (line 3896): Value assigned to variable might be unused.\n  14458. Data_GUI.m (line 3913): Value assigned to variable might be unused.\n  14459. Data_GUI.m (line 4022): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14460. Data_GUI.m (line 4023): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14461. Data_GUI.m (line 4030): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14462. Data_GUI.m (line 4031): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14463. Data_GUI.m (line 4044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14464. Data_GUI.m (line 4046): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14465. Data_GUI.m (line 4068): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14466. Data_GUI.m (line 4069): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14467. Data_GUI.m (line 4089): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14468. Data_GUI.m (line 4090): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14469. Data_GUI.m (line 4102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14470. Data_GUI.m (line 4103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14471. Data_GUI.m (line 4121): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14472. Data_GUI.m (line 4122): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14473. Data_GUI.m (line 4166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14474. Data_GUI.m (line 4167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14475. Data_GUI.m (line 4174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14476. Data_GUI.m (line 4175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14477. Data_GUI.m (line 4194): Function might be unused.\n  14478. Data_GUI.m (line 4252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14479. Data_GUI.m (line 4253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14480. Data_GUI.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14481. Data_GUI.m (line 4264): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14482. Data_GUI.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14483. Data_GUI.m (line 4284): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14484. Data_GUI.m (line 4337): Function might be unused.\n  14485. Data_GUI.m (line 4384): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14486. Data_GUI.m (line 4449): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14487. Data_GUI.m (line 4450): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14488. Data_GUI.m (line 4498): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14489. Data_GUI.m (line 4507): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14490. Data_GUI.m (line 4512): This statement (and possibly following ones) cannot be reached.\n  14491. Data_GUI.m (line 4514): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14492. Data_GUI.m (line 4521): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14493. Data_GUI.m (line 4551): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14494. Data_GUI.m (line 4591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14495. Data_GUI.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14496. Data_GUI.m (line 4625): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14497. Data_GUI.m (line 4637): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14498. Data_GUI.m (line 4650): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14499. Data_GUI.m (line 4744): Function might be unused.\n  14500. Data_GUI.m (line 4750): Value assigned to variable might be unused.\n  14501. Data_GUI.m (line 4778): Value assigned to variable might be unused.\n  14502. Data_GUI.m (line 4803): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14503. Data_GUI.m (line 4825): Value assigned to variable might be unused.\n  14504. Data_GUI.m (line 4859): Value assigned to variable might be unused.\n  14505. Data_GUI.m (line 4888): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14506. Data_GUI.m (line 4921): Function might be unused.\n  14507. Data_GUI.m (line 4965): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14508. Data_GUI.m (line 4966): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14509. Data_GUI.m (line 4989): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14510. Data_GUI.m (line 4990): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14511. Data_GUI.m (line 5010): Function might be unused.\n  14512. Data_GUI.m (line 5087): Function might be unused.\n  14513. Data_GUI.m (line 5104): Value assigned to variable might be unused.\n  14514. Data_GUI.m (line 5162): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14515. Data_GUI.m (line 5163): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14516. Data_GUI.m (line 5167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14517. Data_GUI.m (line 5168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14518. Data_GUI.m (line 5186): Function might be unused.\n  14519. Data_GUI.m (line 5244): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14520. Data_GUI.m (line 5244): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14521. Data_GUI.m (line 5276): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14522. Data_GUI.m (line 5276): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14523. Data_GUI.m (line 5439): Function might be unused.\n  14524. Data_GUI.m (line 5469): Function might be unused.\n  14525. Data_GUI.m (line 5560): Function might be unused.\n  14526. Data_GUI.m (line 5598): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14527. Data_GUI.m (line 5629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14528. Data_GUI.m (line 5665): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14529. Data_GUI.m (line 5667): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14530. Data_GUI.m (line 5667): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14531. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\Data_GUI.m: Missing arguments validation block\n  14532. Data_GUI_BROKEN.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_BROKEN'.\n  14533. Data_GUI_BROKEN.m (line 239): Value assigned to variable might be unused.\n  14534. Data_GUI_BROKEN.m (line 340): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14535. Data_GUI_BROKEN.m (line 340): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14536. Data_GUI_BROKEN.m (line 734): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14537. Data_GUI_BROKEN.m (line 735): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14538. Data_GUI_BROKEN.m (line 736): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14539. Data_GUI_BROKEN.m (line 737): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14540. Data_GUI_BROKEN.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14541. Data_GUI_BROKEN.m (line 754): Function might be unused.\n  14542. Data_GUI_BROKEN.m (line 979): Function might be unused.\n  14543. Data_GUI_BROKEN.m (line 994): Value assigned to variable might be unused.\n  14544. Data_GUI_BROKEN.m (line 1016): Function might be unused.\n  14545. Data_GUI_BROKEN.m (line 1193): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14546. Data_GUI_BROKEN.m (line 1194): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14547. Data_GUI_BROKEN.m (line 1195): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14548. Data_GUI_BROKEN.m (line 1196): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14549. Data_GUI_BROKEN.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14550. Data_GUI_BROKEN.m (line 1227): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14551. Data_GUI_BROKEN.m (line 1228): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14552. Data_GUI_BROKEN.m (line 1229): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14553. Data_GUI_BROKEN.m (line 1249): Function might be unused.\n  14554. Data_GUI_BROKEN.m (line 1290): Function might be unused.\n  14555. Data_GUI_BROKEN.m (line 1366): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14556. Data_GUI_BROKEN.m (line 1436): Value assigned to variable might be unused.\n  14557. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14558. Data_GUI_BROKEN.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14559. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14560. Data_GUI_BROKEN.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14561. Data_GUI_BROKEN.m (line 1652): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14562. Data_GUI_BROKEN.m (line 1654): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14563. Data_GUI_BROKEN.m (line 1654): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14564. Data_GUI_BROKEN.m (line 1664): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14565. Data_GUI_BROKEN.m (line 1665): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14566. Data_GUI_BROKEN.m (line 1666): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14567. Data_GUI_BROKEN.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14568. Data_GUI_BROKEN.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14569. Data_GUI_BROKEN.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14570. Data_GUI_BROKEN.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14571. Data_GUI_BROKEN.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14572. Data_GUI_BROKEN.m (line 1672): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14573. Data_GUI_BROKEN.m (line 1673): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14574. Data_GUI_BROKEN.m (line 1674): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14575. Data_GUI_BROKEN.m (line 1675): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14576. Data_GUI_BROKEN.m (line 1676): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14577. Data_GUI_BROKEN.m (line 1677): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14578. Data_GUI_BROKEN.m (line 1678): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14579. Data_GUI_BROKEN.m (line 1679): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14580. Data_GUI_BROKEN.m (line 1680): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14581. Data_GUI_BROKEN.m (line 1681): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14582. Data_GUI_BROKEN.m (line 1682): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14583. Data_GUI_BROKEN.m (line 1683): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14584. Data_GUI_BROKEN.m (line 1684): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14585. Data_GUI_BROKEN.m (line 1685): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14586. Data_GUI_BROKEN.m (line 1686): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14587. Data_GUI_BROKEN.m (line 1687): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14588. Data_GUI_BROKEN.m (line 1688): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14589. Data_GUI_BROKEN.m (line 1689): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14590. Data_GUI_BROKEN.m (line 1690): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14591. Data_GUI_BROKEN.m (line 1691): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14592. Data_GUI_BROKEN.m (line 1692): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14593. Data_GUI_BROKEN.m (line 1693): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14594. Data_GUI_BROKEN.m (line 1694): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14595. Data_GUI_BROKEN.m (line 1695): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14596. Data_GUI_BROKEN.m (line 1696): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14597. Data_GUI_BROKEN.m (line 1697): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14598. Data_GUI_BROKEN.m (line 1698): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14599. Data_GUI_BROKEN.m (line 1699): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14600. Data_GUI_BROKEN.m (line 1700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14601. Data_GUI_BROKEN.m (line 1701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14602. Data_GUI_BROKEN.m (line 1702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14603. Data_GUI_BROKEN.m (line 1703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14604. Data_GUI_BROKEN.m (line 1704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14605. Data_GUI_BROKEN.m (line 1705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14606. Data_GUI_BROKEN.m (line 1706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14607. Data_GUI_BROKEN.m (line 1707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14608. Data_GUI_BROKEN.m (line 1708): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14609. Data_GUI_BROKEN.m (line 1709): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14610. Data_GUI_BROKEN.m (line 1710): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14611. Data_GUI_BROKEN.m (line 1711): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14612. Data_GUI_BROKEN.m (line 1712): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14613. Data_GUI_BROKEN.m (line 1713): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14614. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14615. Data_GUI_BROKEN.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14616. Data_GUI_BROKEN.m (line 1767): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14617. Data_GUI_BROKEN.m (line 1768): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14618. Data_GUI_BROKEN.m (line 1769): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14619. Data_GUI_BROKEN.m (line 1770): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14620. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14621. Data_GUI_BROKEN.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14622. Data_GUI_BROKEN.m (line 1812): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14623. Data_GUI_BROKEN.m (line 1813): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14624. Data_GUI_BROKEN.m (line 1814): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14625. Data_GUI_BROKEN.m (line 1825): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14626. Data_GUI_BROKEN.m (line 1826): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14627. Data_GUI_BROKEN.m (line 1831): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14628. Data_GUI_BROKEN.m (line 1832): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14629. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14630. Data_GUI_BROKEN.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14631. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14632. Data_GUI_BROKEN.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14633. Data_GUI_BROKEN.m (line 1897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14634. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14635. Data_GUI_BROKEN.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14636. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14637. Data_GUI_BROKEN.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14638. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14639. Data_GUI_BROKEN.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14640. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14641. Data_GUI_BROKEN.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14642. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14643. Data_GUI_BROKEN.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14644. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14645. Data_GUI_BROKEN.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14646. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14647. Data_GUI_BROKEN.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14648. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14649. Data_GUI_BROKEN.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14650. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14651. Data_GUI_BROKEN.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14652. Data_GUI_BROKEN.m (line 2199): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14653. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14654. Data_GUI_BROKEN.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14655. Data_GUI_BROKEN.m (line 2215): Function might be unused.\n  14656. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14657. Data_GUI_BROKEN.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14658. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14659. Data_GUI_BROKEN.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14660. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14661. Data_GUI_BROKEN.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14662. Data_GUI_BROKEN.m (line 2427): Value assigned to variable might be unused.\n  14663. Data_GUI_BROKEN.m (line 2486): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  14664. Data_GUI_BROKEN.m (line 2630): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  14665. Data_GUI_BROKEN.m (line 2769): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14666. Data_GUI_BROKEN.m (line 2769): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14667. Data_GUI_BROKEN.m (line 2891): Function might be unused.\n  14668. Data_GUI_BROKEN.m (line 3068): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14669. Data_GUI_BROKEN.m (line 3068): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14670. Data_GUI_BROKEN.m (line 3100): Function might be unused.\n  14671. Data_GUI_BROKEN.m (line 3251): Function might be unused.\n  14672. Data_GUI_BROKEN.m (line 3329): Function might be unused.\n  14673. Data_GUI_BROKEN.m (line 3344): This keyword might not be aligned with its matching END on line 3355.\n  14674. Data_GUI_BROKEN.m (line 3357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  14675. Data_GUI_BROKEN.m (line 3573): This keyword might not be aligned with its matching END on line 3575.\n  14676. Data_GUI_BROKEN.m (line 3677): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  14677. Data_GUI_BROKEN.m (line 3712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14678. Data_GUI_BROKEN.m (line 3746): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14679. Data_GUI_BROKEN.m (line 3760): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14680. Data_GUI_BROKEN.m (line 3768): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14681. Data_GUI_BROKEN.m (line 3768): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14682. Data_GUI_BROKEN.m (line 3967): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14683. Data_GUI_BROKEN.m (line 4007): Function might be unused.\n  14684. Data_GUI_BROKEN.m (line 4039): Function might be unused.\n  14685. Data_GUI_BROKEN.m (line 4051): Value assigned to variable might be unused.\n  14686. Data_GUI_BROKEN.m (line 4061): Value assigned to variable might be unused.\n  14687. Data_GUI_BROKEN.m (line 4066): Value assigned to variable might be unused.\n  14688. Data_GUI_BROKEN.m (line 4071): Value assigned to variable might be unused.\n  14689. Data_GUI_BROKEN.m (line 4088): Value assigned to variable might be unused.\n  14690. Data_GUI_BROKEN.m (line 4197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14691. Data_GUI_BROKEN.m (line 4198): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14692. Data_GUI_BROKEN.m (line 4205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14693. Data_GUI_BROKEN.m (line 4206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14694. Data_GUI_BROKEN.m (line 4219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14695. Data_GUI_BROKEN.m (line 4221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14696. Data_GUI_BROKEN.m (line 4243): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14697. Data_GUI_BROKEN.m (line 4244): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14698. Data_GUI_BROKEN.m (line 4262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14699. Data_GUI_BROKEN.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14700. Data_GUI_BROKEN.m (line 4282): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14701. Data_GUI_BROKEN.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14702. Data_GUI_BROKEN.m (line 4294): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14703. Data_GUI_BROKEN.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14704. Data_GUI_BROKEN.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14705. Data_GUI_BROKEN.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14706. Data_GUI_BROKEN.m (line 4325): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14707. Data_GUI_BROKEN.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14708. Data_GUI_BROKEN.m (line 4370): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14709. Data_GUI_BROKEN.m (line 4371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14710. Data_GUI_BROKEN.m (line 4378): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14711. Data_GUI_BROKEN.m (line 4379): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14712. Data_GUI_BROKEN.m (line 4398): Function might be unused.\n  14713. Data_GUI_BROKEN.m (line 4456): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14714. Data_GUI_BROKEN.m (line 4457): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14715. Data_GUI_BROKEN.m (line 4467): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14716. Data_GUI_BROKEN.m (line 4468): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14717. Data_GUI_BROKEN.m (line 4487): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14718. Data_GUI_BROKEN.m (line 4488): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14719. Data_GUI_BROKEN.m (line 4541): Function might be unused.\n  14720. Data_GUI_BROKEN.m (line 4588): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14721. Data_GUI_BROKEN.m (line 4653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14722. Data_GUI_BROKEN.m (line 4654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14723. Data_GUI_BROKEN.m (line 4702): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14724. Data_GUI_BROKEN.m (line 4711): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14725. Data_GUI_BROKEN.m (line 4716): This statement (and possibly following ones) cannot be reached.\n  14726. Data_GUI_BROKEN.m (line 4718): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14727. Data_GUI_BROKEN.m (line 4725): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14728. Data_GUI_BROKEN.m (line 4755): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14729. Data_GUI_BROKEN.m (line 4795): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14730. Data_GUI_BROKEN.m (line 4818): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14731. Data_GUI_BROKEN.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14732. Data_GUI_BROKEN.m (line 4841): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14733. Data_GUI_BROKEN.m (line 4854): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14734. Data_GUI_BROKEN.m (line 4948): Function might be unused.\n  14735. Data_GUI_BROKEN.m (line 4954): Value assigned to variable might be unused.\n  14736. Data_GUI_BROKEN.m (line 4982): Value assigned to variable might be unused.\n  14737. Data_GUI_BROKEN.m (line 5007): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14738. Data_GUI_BROKEN.m (line 5029): Value assigned to variable might be unused.\n  14739. Data_GUI_BROKEN.m (line 5063): Value assigned to variable might be unused.\n  14740. Data_GUI_BROKEN.m (line 5092): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14741. Data_GUI_BROKEN.m (line 5125): Function might be unused.\n  14742. Data_GUI_BROKEN.m (line 5169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14743. Data_GUI_BROKEN.m (line 5170): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14744. Data_GUI_BROKEN.m (line 5193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14745. Data_GUI_BROKEN.m (line 5194): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14746. Data_GUI_BROKEN.m (line 5214): Function might be unused.\n  14747. Data_GUI_BROKEN.m (line 5291): Function might be unused.\n  14748. Data_GUI_BROKEN.m (line 5308): Value assigned to variable might be unused.\n  14749. Data_GUI_BROKEN.m (line 5366): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14750. Data_GUI_BROKEN.m (line 5367): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14751. Data_GUI_BROKEN.m (line 5371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14752. Data_GUI_BROKEN.m (line 5372): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14753. Data_GUI_BROKEN.m (line 5390): Function might be unused.\n  14754. Data_GUI_BROKEN.m (line 5448): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14755. Data_GUI_BROKEN.m (line 5448): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14756. Data_GUI_BROKEN.m (line 5480): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14757. Data_GUI_BROKEN.m (line 5480): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14758. Data_GUI_BROKEN.m (line 5643): Function might be unused.\n  14759. Data_GUI_BROKEN.m (line 5673): Function might be unused.\n  14760. Data_GUI_BROKEN.m (line 5764): Function might be unused.\n  14761. Data_GUI_BROKEN.m (line 5802): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14762. Data_GUI_BROKEN.m (line 5833): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14763. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\Data_GUI_BROKEN.m: Missing arguments validation block\n  14764. Data_GUI_No_Batch.m (line 2): Function name 'Data_GUI' is known to MATLAB by its file name: 'Data_GUI_No_Batch'.\n  14765. Data_GUI_No_Batch.m (line 237): Value assigned to variable might be unused.\n  14766. Data_GUI_No_Batch.m (line 337): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14767. Data_GUI_No_Batch.m (line 337): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14768. Data_GUI_No_Batch.m (line 700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14769. Data_GUI_No_Batch.m (line 701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14770. Data_GUI_No_Batch.m (line 702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14771. Data_GUI_No_Batch.m (line 703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14772. Data_GUI_No_Batch.m (line 704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14773. Data_GUI_No_Batch.m (line 720): Function might be unused.\n  14774. Data_GUI_No_Batch.m (line 945): Function might be unused.\n  14775. Data_GUI_No_Batch.m (line 960): Value assigned to variable might be unused.\n  14776. Data_GUI_No_Batch.m (line 982): Function might be unused.\n  14777. Data_GUI_No_Batch.m (line 1157): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14778. Data_GUI_No_Batch.m (line 1158): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14779. Data_GUI_No_Batch.m (line 1159): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14780. Data_GUI_No_Batch.m (line 1160): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14781. Data_GUI_No_Batch.m (line 1161): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14782. Data_GUI_No_Batch.m (line 1191): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14783. Data_GUI_No_Batch.m (line 1192): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14784. Data_GUI_No_Batch.m (line 1193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14785. Data_GUI_No_Batch.m (line 1213): Function might be unused.\n  14786. Data_GUI_No_Batch.m (line 1254): Function might be unused.\n  14787. Data_GUI_No_Batch.m (line 1330): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14788. Data_GUI_No_Batch.m (line 1400): Value assigned to variable might be unused.\n  14789. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14790. Data_GUI_No_Batch.m (line 1487): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14791. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14792. Data_GUI_No_Batch.m (line 1542): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14793. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14794. Data_GUI_No_Batch.m (line 1552): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14795. Data_GUI_No_Batch.m (line 1565): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14796. Data_GUI_No_Batch.m (line 1566): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14797. Data_GUI_No_Batch.m (line 1567): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14798. Data_GUI_No_Batch.m (line 1568): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14799. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14800. Data_GUI_No_Batch.m (line 1597): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14801. Data_GUI_No_Batch.m (line 1610): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14802. Data_GUI_No_Batch.m (line 1611): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14803. Data_GUI_No_Batch.m (line 1612): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14804. Data_GUI_No_Batch.m (line 1623): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14805. Data_GUI_No_Batch.m (line 1624): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14806. Data_GUI_No_Batch.m (line 1629): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14807. Data_GUI_No_Batch.m (line 1630): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14808. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14809. Data_GUI_No_Batch.m (line 1669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14810. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14811. Data_GUI_No_Batch.m (line 1682): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14812. Data_GUI_No_Batch.m (line 1695): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14813. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14814. Data_GUI_No_Batch.m (line 1707): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14815. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14816. Data_GUI_No_Batch.m (line 1763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14817. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14818. Data_GUI_No_Batch.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14819. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14820. Data_GUI_No_Batch.m (line 1860): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14821. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14822. Data_GUI_No_Batch.m (line 1890): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14823. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14824. Data_GUI_No_Batch.m (line 1912): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14825. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14826. Data_GUI_No_Batch.m (line 1933): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14827. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14828. Data_GUI_No_Batch.m (line 1957): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14829. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14830. Data_GUI_No_Batch.m (line 1982): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14831. Data_GUI_No_Batch.m (line 1997): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14832. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14833. Data_GUI_No_Batch.m (line 2008): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14834. Data_GUI_No_Batch.m (line 2013): Function might be unused.\n  14835. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14836. Data_GUI_No_Batch.m (line 2013): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14837. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14838. Data_GUI_No_Batch.m (line 2026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14839. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14840. Data_GUI_No_Batch.m (line 2040): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14841. Data_GUI_No_Batch.m (line 2222): Value assigned to variable might be unused.\n  14842. Data_GUI_No_Batch.m (line 2281): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  14843. Data_GUI_No_Batch.m (line 2385): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  14844. Data_GUI_No_Batch.m (line 2524): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14845. Data_GUI_No_Batch.m (line 2524): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14846. Data_GUI_No_Batch.m (line 2646): Function might be unused.\n  14847. Data_GUI_No_Batch.m (line 2821): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14848. Data_GUI_No_Batch.m (line 2821): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14849. Data_GUI_No_Batch.m (line 2853): Function might be unused.\n  14850. Data_GUI_No_Batch.m (line 2971): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14851. Data_GUI_No_Batch.m (line 3151): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14852. Data_GUI_No_Batch.m (line 3249): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  14853. Data_GUI_No_Batch.m (line 3297): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14854. Data_GUI_No_Batch.m (line 3297): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14855. Data_GUI_No_Batch.m (line 3626): This keyword might not be aligned with its matching END on line 3637.\n  14856. Data_GUI_No_Batch.m (line 3639): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  14857. Data_GUI_No_Batch.m (line 3855): This keyword might not be aligned with its matching END on line 3857.\n  14858. Data_GUI_No_Batch.m (line 3959): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  14859. Data_GUI_No_Batch.m (line 3969): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14860. Data_GUI_No_Batch.m (line 3970): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14861. Data_GUI_No_Batch.m (line 3971): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14862. Data_GUI_No_Batch.m (line 4014): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14863. Data_GUI_No_Batch.m (line 4015): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14864. Data_GUI_No_Batch.m (line 4025): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  14865. Data_GUI_No_Batch.m (line 4041): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14866. Data_GUI_No_Batch.m (line 4042): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14867. Data_GUI_No_Batch.m (line 4083): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14868. Data_GUI_No_Batch.m (line 4117): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14869. Data_GUI_No_Batch.m (line 4131): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14870. Data_GUI_No_Batch.m (line 4139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14871. Data_GUI_No_Batch.m (line 4139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14872. Data_GUI_No_Batch.m (line 4338): Input argument might be unused. Consider replacing the argument with ~ instead.\n  14873. Data_GUI_No_Batch.m (line 4378): Function might be unused.\n  14874. Data_GUI_No_Batch.m (line 4422): Value assigned to variable might be unused.\n  14875. Data_GUI_No_Batch.m (line 4432): Value assigned to variable might be unused.\n  14876. Data_GUI_No_Batch.m (line 4437): Value assigned to variable might be unused.\n  14877. Data_GUI_No_Batch.m (line 4442): Value assigned to variable might be unused.\n  14878. Data_GUI_No_Batch.m (line 4459): Value assigned to variable might be unused.\n  14879. Data_GUI_No_Batch.m (line 4568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14880. Data_GUI_No_Batch.m (line 4569): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14881. Data_GUI_No_Batch.m (line 4576): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14882. Data_GUI_No_Batch.m (line 4577): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14883. Data_GUI_No_Batch.m (line 4590): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14884. Data_GUI_No_Batch.m (line 4592): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14885. Data_GUI_No_Batch.m (line 4614): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14886. Data_GUI_No_Batch.m (line 4615): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14887. Data_GUI_No_Batch.m (line 4635): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14888. Data_GUI_No_Batch.m (line 4636): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14889. Data_GUI_No_Batch.m (line 4648): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14890. Data_GUI_No_Batch.m (line 4649): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14891. Data_GUI_No_Batch.m (line 4667): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14892. Data_GUI_No_Batch.m (line 4668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14893. Data_GUI_No_Batch.m (line 4712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14894. Data_GUI_No_Batch.m (line 4713): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14895. Data_GUI_No_Batch.m (line 4720): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14896. Data_GUI_No_Batch.m (line 4721): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14897. Data_GUI_No_Batch.m (line 4798): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14898. Data_GUI_No_Batch.m (line 4799): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14899. Data_GUI_No_Batch.m (line 4809): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14900. Data_GUI_No_Batch.m (line 4810): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14901. Data_GUI_No_Batch.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14902. Data_GUI_No_Batch.m (line 4830): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14903. Data_GUI_No_Batch.m (line 4930): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14904. Data_GUI_No_Batch.m (line 4995): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14905. Data_GUI_No_Batch.m (line 4996): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14906. Data_GUI_No_Batch.m (line 5044): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14907. Data_GUI_No_Batch.m (line 5053): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14908. Data_GUI_No_Batch.m (line 5058): This statement (and possibly following ones) cannot be reached.\n  14909. Data_GUI_No_Batch.m (line 5060): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14910. Data_GUI_No_Batch.m (line 5067): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14911. Data_GUI_No_Batch.m (line 5097): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14912. Data_GUI_No_Batch.m (line 5137): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14913. Data_GUI_No_Batch.m (line 5160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14914. Data_GUI_No_Batch.m (line 5171): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14915. Data_GUI_No_Batch.m (line 5183): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14916. Data_GUI_No_Batch.m (line 5196): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14917. Data_GUI_No_Batch.m (line 5225): Value assigned to variable might be unused.\n  14918. Data_GUI_No_Batch.m (line 5252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14919. Data_GUI_No_Batch.m (line 5284): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  14920. Data_GUI_No_Batch.m (line 5298): Value assigned to variable might be unused.\n  14921. Data_GUI_No_Batch.m (line 5316): Value assigned to variable might be unused.\n  14922. Data_GUI_No_Batch.m (line 5332): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14923. Data_GUI_No_Batch.m (line 5360): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14924. Data_GUI_No_Batch.m (line 5447): Function might be unused.\n  14925. Data_GUI_No_Batch.m (line 5453): Value assigned to variable might be unused.\n  14926. Data_GUI_No_Batch.m (line 5481): Value assigned to variable might be unused.\n  14927. Data_GUI_No_Batch.m (line 5506): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14928. Data_GUI_No_Batch.m (line 5528): Value assigned to variable might be unused.\n  14929. Data_GUI_No_Batch.m (line 5562): Value assigned to variable might be unused.\n  14930. Data_GUI_No_Batch.m (line 5591): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14931. Data_GUI_No_Batch.m (line 5624): Function might be unused.\n  14932. Data_GUI_No_Batch.m (line 5668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14933. Data_GUI_No_Batch.m (line 5669): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14934. Data_GUI_No_Batch.m (line 5692): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14935. Data_GUI_No_Batch.m (line 5693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14936. Data_GUI_No_Batch.m (line 5790): Function might be unused.\n  14937. Data_GUI_No_Batch.m (line 5807): Value assigned to variable might be unused.\n  14938. Data_GUI_No_Batch.m (line 5865): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14939. Data_GUI_No_Batch.m (line 5866): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14940. Data_GUI_No_Batch.m (line 5870): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14941. Data_GUI_No_Batch.m (line 5871): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14942. Data_GUI_No_Batch.m (line 5889): Function might be unused.\n  14943. Data_GUI_No_Batch.m (line 5947): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14944. Data_GUI_No_Batch.m (line 5947): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14945. Data_GUI_No_Batch.m (line 5979): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14946. Data_GUI_No_Batch.m (line 5979): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  14947. Data_GUI_No_Batch.m (line 6142): Function might be unused.\n  14948. Data_GUI_No_Batch.m (line 6172): Function might be unused.\n  14949. Data_GUI_No_Batch.m (line 6263): Function might be unused.\n  14950. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\Data_GUI_No_Batch.m: Missing arguments validation block\n  14951. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  14952. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\addModelWorkspaceData.m: Missing arguments validation block\n  14953. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\checkHighMemoryUsage.m: Missing function docstring\n  14954. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\checkHighMemoryUsage.m: Missing arguments validation block\n  14955. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\checkModelConfiguration.m: Missing arguments validation block\n  14956. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\checkStopRequest.m: Missing function docstring\n  14957. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\checkStopRequest.m: Missing arguments validation block\n  14958. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14959. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14960. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14961. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14962. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  14963. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14964. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14965. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\check_model_configuration.m: Missing arguments validation block\n  14966. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14967. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14968. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  14969. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\checkpoint_recovery.m: Missing arguments validation block\n  14970. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\combineDataSources.m: Missing arguments validation block\n  14971. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  14972. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14973. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14974. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14975. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14976. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14977. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14978. data_extraction_functions.m (line 146): Function might be unused.\n  14979. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14980. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14981. data_extraction_functions.m (line 202): Function might be unused.\n  14982. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14983. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14984. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14985. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14986. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\data_extraction_functions.m: Missing function docstring\n  14987. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\data_extraction_functions.m: Missing arguments validation block\n  14988. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  14989. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\endPhase.m: Missing arguments validation block\n  14990. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  14991. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14992. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14993. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14994. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14995. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14996. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  14997. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractAllSignalsFromBus.m: Missing arguments validation block\n  14998. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  14999. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractCoefficientsFromTable.m: Missing function docstring\n  15000. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractCoefficientsFromTable.m: Missing arguments validation block\n  15001. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15002. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15003. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15004. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15005. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15006. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15007. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15008. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15009. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15010. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15011. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15012. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15013. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractCombinedSignalBusData.m: Missing function docstring\n  15014. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractCombinedSignalBusData.m: Missing arguments validation block\n  15015. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15016. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15017. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15018. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15019. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15020. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractConstantMatrixData.m: Missing function docstring\n  15021. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractConstantMatrixData.m: Missing arguments validation block\n  15022. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractDataFromField.m: Missing arguments validation block\n  15023. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  15024. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  15025. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractDataWithOptions.m: Missing arguments validation block\n  15026. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  15027. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  15028. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  15029. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  15030. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  15031. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15032. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15033. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15034. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15035. extractFromCombinedSignalBus.m (line 178): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15036. extractFromCombinedSignalBus.m (line 180): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15037. extractFromCombinedSignalBus.m (line 202): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15038. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15039. extractFromCombinedSignalBus.m (line 211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15040. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15041. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15042. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15043. extractFromCombinedSignalBus.m (line 235): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15044. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15045. extractFromCombinedSignalBus.m (line 251): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15046. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15047. extractFromCombinedSignalBus.m (line 266): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15048. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15049. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractFromCombinedSignalBus.m: Missing function docstring\n  15050. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  15051. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  15052. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  15053. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  15054. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  15055. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  15056. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  15057. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15058. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15059. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15060. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15061. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15062. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15063. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15064. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15065. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15066. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15067. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15068. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15069. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15070. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15071. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15072. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15073. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  15074. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  15075. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15076. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15077. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractFromNestedStruct.m: Missing arguments validation block\n  15078. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15079. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15080. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15081. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15082. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15083. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15084. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractLogsoutDataFixed.m: Missing function docstring\n  15085. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractLogsoutDataFixed.m: Missing arguments validation block\n  15086. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractSignalsFromSimOut.m: Missing arguments validation block\n  15087. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15088. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15089. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15090. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractSimscapeDataRecursive.m: Missing function docstring\n  15091. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  15092. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractTimeSeriesData.m: Missing function docstring\n  15093. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractTimeSeriesData.m: Missing arguments validation block\n  15094. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15095. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15096. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15097. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15098. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractWorkspaceOutputs.m: Missing function docstring\n  15099. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\extractWorkspaceOutputs.m: Missing arguments validation block\n  15100. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15101. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15102. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  15103. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15104. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15105. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15106. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\fallbackSimlogExtraction.m: Missing function docstring\n  15107. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\fallbackSimlogExtraction.m: Missing arguments validation block\n  15108. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\generateRandomCoefficients.m: Missing arguments validation block\n  15109. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\getMemoryInfo.m: Missing function docstring\n  15110. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\getMemoryInfo.m: Missing arguments validation block\n  15111. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\getMemoryUsage.m: Missing arguments validation block\n  15112. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15113. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15114. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15115. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15116. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15117. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15118. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15119. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  15120. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15121. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15122. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15123. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15124. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15125. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\getPolynomialParameterInfo.m: Missing arguments validation block\n  15126. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\getShortenedJointName.m: Missing arguments validation block\n  15127. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15128. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15129. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  15130. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  15131. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\loadInputFile.m: Missing function docstring\n  15132. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\loadInputFile.m: Missing arguments validation block\n  15133. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\logBatchResult.m: Missing arguments validation block\n  15134. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15135. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\logMessage.m: Missing arguments validation block\n  15136. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\logical2str.m: Missing function docstring\n  15137. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\logical2str.m: Missing arguments validation block\n  15138. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  15139. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\memory_monitor.m: Missing arguments validation block\n  15140. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\mergeTables.m: Missing function docstring\n  15141. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\mergeTables.m: Missing arguments validation block\n  15142. performance_monitor.m (line 11): Persistent variable might be unused.\n  15143. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15144. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15145. performance_monitor.m (line 77): Function might be unused.\n  15146. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15147. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15148. performance_monitor.m (line 118): Function might be unused.\n  15149. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15150. performance_monitor.m (line 133): Function might be unused.\n  15151. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15152. performance_monitor.m (line 149): Function might be unused.\n  15153. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15154. performance_monitor.m (line 162): Function might be unused.\n  15155. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15156. performance_monitor.m (line 175): Function might be unused.\n  15157. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15158. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15159. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15160. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\performance_monitor.m: Missing arguments validation block\n  15161. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  15162. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  15163. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15164. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15165. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\processSimulationOutput.m: Missing function docstring\n  15166. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\processSimulationOutput.m: Missing arguments validation block\n  15167. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15168. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\recordBatchTime.m: Missing arguments validation block\n  15169. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15170. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\recordPhase.m: Missing arguments validation block\n  15171. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\resampleDataToFrequency.m: Missing function docstring\n  15172. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\resampleDataToFrequency.m: Missing arguments validation block\n  15173. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\restoreWorkspace.m: Missing arguments validation block\n  15174. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\runSingleTrial.m: Missing arguments validation block\n  15175. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\setModelParameters.m: Missing arguments validation block\n  15176. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15177. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\setPolynomialCoefficients.m: Missing arguments validation block\n  15178. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\shouldShowDebug.m: Missing function docstring\n  15179. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\shouldShowDebug.m: Missing arguments validation block\n  15180. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\shouldShowNormal.m: Missing function docstring\n  15181. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\shouldShowNormal.m: Missing arguments validation block\n  15182. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\shouldShowVerbose.m: Missing function docstring\n  15183. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\shouldShowVerbose.m: Missing arguments validation block\n  15184. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  15185. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15186. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\traverseSimlogNode.m: Missing arguments validation block\n  15187. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15188. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15189. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15190. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15191. verbosity_control.m (line 203): Function might be unused.\n  15192. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15193. verbosity_control.m (line 225): Function might be unused.\n  15194. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15195. verbosity_control.m (line 248): Function might be unused.\n  15196. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15197. verbosity_control.m (line 274): Function might be unused.\n  15198. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15199. verbosity_control.m (line 293): Function might be unused.\n  15200. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15201. verbosity_control.m (line 320): Function might be unused.\n  15202. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15203. verbosity_control.m (line 335): Function might be unused.\n  15204. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15205. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\SAFE_STATE_1962_COLUMNS_20250802_122448\\verbosity_control.m: Missing arguments validation block\n  15206. Clear_Parallel_Cache.m (line 2): Using 'clear' with the 'all' option usually decreases code performance and is often unnecessary.\n  15207. Clear_Parallel_Cache.m (line 3): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  15208. Clear_Parallel_Cache.m (line 4): Using 'clear' with the 'classes' option will decrease code performance and is often unnecessary.\n  15209. Data_GUI.m (line 239): Value assigned to variable might be unused.\n  15210. Data_GUI.m (line 340): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15211. Data_GUI.m (line 340): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15212. Data_GUI.m (line 734): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15213. Data_GUI.m (line 735): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15214. Data_GUI.m (line 736): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15215. Data_GUI.m (line 737): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15216. Data_GUI.m (line 738): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15217. Data_GUI.m (line 754): Function might be unused.\n  15218. Data_GUI.m (line 979): Function might be unused.\n  15219. Data_GUI.m (line 994): Value assigned to variable might be unused.\n  15220. Data_GUI.m (line 1016): Function might be unused.\n  15221. Data_GUI.m (line 1193): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15222. Data_GUI.m (line 1194): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15223. Data_GUI.m (line 1195): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15224. Data_GUI.m (line 1196): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15225. Data_GUI.m (line 1197): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15226. Data_GUI.m (line 1227): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15227. Data_GUI.m (line 1228): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15228. Data_GUI.m (line 1229): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15229. Data_GUI.m (line 1249): Function might be unused.\n  15230. Data_GUI.m (line 1290): Function might be unused.\n  15231. Data_GUI.m (line 1366): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15232. Data_GUI.m (line 1436): Value assigned to variable might be unused.\n  15233. Data_GUI.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15234. Data_GUI.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15235. Data_GUI.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15236. Data_GUI.m (line 1585): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15237. Data_GUI.m (line 1652): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15238. Data_GUI.m (line 1654): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15239. Data_GUI.m (line 1654): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15240. Data_GUI.m (line 1664): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15241. Data_GUI.m (line 1665): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15242. Data_GUI.m (line 1666): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15243. Data_GUI.m (line 1667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15244. Data_GUI.m (line 1668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15245. Data_GUI.m (line 1669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15246. Data_GUI.m (line 1670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15247. Data_GUI.m (line 1671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15248. Data_GUI.m (line 1672): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15249. Data_GUI.m (line 1673): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15250. Data_GUI.m (line 1674): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15251. Data_GUI.m (line 1675): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15252. Data_GUI.m (line 1676): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15253. Data_GUI.m (line 1677): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15254. Data_GUI.m (line 1678): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15255. Data_GUI.m (line 1679): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15256. Data_GUI.m (line 1680): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15257. Data_GUI.m (line 1681): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15258. Data_GUI.m (line 1682): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15259. Data_GUI.m (line 1683): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15260. Data_GUI.m (line 1684): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15261. Data_GUI.m (line 1685): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15262. Data_GUI.m (line 1686): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15263. Data_GUI.m (line 1687): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15264. Data_GUI.m (line 1688): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15265. Data_GUI.m (line 1689): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15266. Data_GUI.m (line 1690): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15267. Data_GUI.m (line 1691): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15268. Data_GUI.m (line 1692): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15269. Data_GUI.m (line 1693): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15270. Data_GUI.m (line 1694): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15271. Data_GUI.m (line 1695): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15272. Data_GUI.m (line 1696): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15273. Data_GUI.m (line 1697): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15274. Data_GUI.m (line 1698): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15275. Data_GUI.m (line 1699): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15276. Data_GUI.m (line 1700): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15277. Data_GUI.m (line 1701): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15278. Data_GUI.m (line 1702): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15279. Data_GUI.m (line 1703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15280. Data_GUI.m (line 1704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15281. Data_GUI.m (line 1705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15282. Data_GUI.m (line 1706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15283. Data_GUI.m (line 1707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15284. Data_GUI.m (line 1708): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15285. Data_GUI.m (line 1709): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15286. Data_GUI.m (line 1710): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15287. Data_GUI.m (line 1711): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15288. Data_GUI.m (line 1712): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15289. Data_GUI.m (line 1713): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15290. Data_GUI.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15291. Data_GUI.m (line 1754): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15292. Data_GUI.m (line 1767): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15293. Data_GUI.m (line 1768): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15294. Data_GUI.m (line 1769): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15295. Data_GUI.m (line 1770): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15296. Data_GUI.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15297. Data_GUI.m (line 1799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15298. Data_GUI.m (line 1812): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15299. Data_GUI.m (line 1813): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15300. Data_GUI.m (line 1814): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15301. Data_GUI.m (line 1825): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15302. Data_GUI.m (line 1826): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15303. Data_GUI.m (line 1831): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15304. Data_GUI.m (line 1832): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15305. Data_GUI.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15306. Data_GUI.m (line 1871): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15307. Data_GUI.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15308. Data_GUI.m (line 1884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15309. Data_GUI.m (line 1897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15310. Data_GUI.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15311. Data_GUI.m (line 1909): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15312. Data_GUI.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15313. Data_GUI.m (line 1965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15314. Data_GUI.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15315. Data_GUI.m (line 2015): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15316. Data_GUI.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15317. Data_GUI.m (line 2062): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15318. Data_GUI.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15319. Data_GUI.m (line 2092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15320. Data_GUI.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15321. Data_GUI.m (line 2114): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15322. Data_GUI.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15323. Data_GUI.m (line 2135): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15324. Data_GUI.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15325. Data_GUI.m (line 2159): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15326. Data_GUI.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15327. Data_GUI.m (line 2184): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15328. Data_GUI.m (line 2199): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15329. Data_GUI.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15330. Data_GUI.m (line 2210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15331. Data_GUI.m (line 2215): Function might be unused.\n  15332. Data_GUI.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15333. Data_GUI.m (line 2215): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15334. Data_GUI.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15335. Data_GUI.m (line 2228): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15336. Data_GUI.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15337. Data_GUI.m (line 2242): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15338. Data_GUI.m (line 2427): Value assigned to variable might be unused.\n  15339. Data_GUI.m (line 2486): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  15340. Data_GUI.m (line 2630): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  15341. Data_GUI.m (line 2769): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15342. Data_GUI.m (line 2769): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15343. Data_GUI.m (line 2891): Function might be unused.\n  15344. Data_GUI.m (line 3068): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15345. Data_GUI.m (line 3068): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15346. Data_GUI.m (line 3100): Function might be unused.\n  15347. Data_GUI.m (line 3251): Function might be unused.\n  15348. Data_GUI.m (line 3329): Function might be unused.\n  15349. Data_GUI.m (line 3344): This keyword might not be aligned with its matching END on line 3355.\n  15350. Data_GUI.m (line 3357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  15351. Data_GUI.m (line 3573): This keyword might not be aligned with its matching END on line 3575.\n  15352. Data_GUI.m (line 3677): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  15353. Data_GUI.m (line 3712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15354. Data_GUI.m (line 3746): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15355. Data_GUI.m (line 3760): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15356. Data_GUI.m (line 3768): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15357. Data_GUI.m (line 3768): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15358. Data_GUI.m (line 3967): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15359. Data_GUI.m (line 4007): Function might be unused.\n  15360. Data_GUI.m (line 4039): Function might be unused.\n  15361. Data_GUI.m (line 4051): Value assigned to variable might be unused.\n  15362. Data_GUI.m (line 4061): Value assigned to variable might be unused.\n  15363. Data_GUI.m (line 4066): Value assigned to variable might be unused.\n  15364. Data_GUI.m (line 4071): Value assigned to variable might be unused.\n  15365. Data_GUI.m (line 4088): Value assigned to variable might be unused.\n  15366. Data_GUI.m (line 4197): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15367. Data_GUI.m (line 4198): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15368. Data_GUI.m (line 4205): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15369. Data_GUI.m (line 4206): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15370. Data_GUI.m (line 4219): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15371. Data_GUI.m (line 4221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15372. Data_GUI.m (line 4243): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15373. Data_GUI.m (line 4244): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15374. Data_GUI.m (line 4262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15375. Data_GUI.m (line 4263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15376. Data_GUI.m (line 4282): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15377. Data_GUI.m (line 4283): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15378. Data_GUI.m (line 4294): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15379. Data_GUI.m (line 4295): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15380. Data_GUI.m (line 4306): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15381. Data_GUI.m (line 4307): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15382. Data_GUI.m (line 4325): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15383. Data_GUI.m (line 4326): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15384. Data_GUI.m (line 4370): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15385. Data_GUI.m (line 4371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15386. Data_GUI.m (line 4378): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15387. Data_GUI.m (line 4379): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15388. Data_GUI.m (line 4398): Function might be unused.\n  15389. Data_GUI.m (line 4456): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15390. Data_GUI.m (line 4457): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15391. Data_GUI.m (line 4467): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15392. Data_GUI.m (line 4468): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15393. Data_GUI.m (line 4487): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15394. Data_GUI.m (line 4488): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15395. Data_GUI.m (line 4541): Function might be unused.\n  15396. Data_GUI.m (line 4588): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15397. Data_GUI.m (line 4653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15398. Data_GUI.m (line 4654): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15399. Data_GUI.m (line 4702): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15400. Data_GUI.m (line 4711): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15401. Data_GUI.m (line 4716): This statement (and possibly following ones) cannot be reached.\n  15402. Data_GUI.m (line 4718): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15403. Data_GUI.m (line 4725): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15404. Data_GUI.m (line 4755): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15405. Data_GUI.m (line 4795): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15406. Data_GUI.m (line 4818): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15407. Data_GUI.m (line 4829): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15408. Data_GUI.m (line 4841): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15409. Data_GUI.m (line 4854): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15410. Data_GUI.m (line 4948): Function might be unused.\n  15411. Data_GUI.m (line 4954): Value assigned to variable might be unused.\n  15412. Data_GUI.m (line 4982): Value assigned to variable might be unused.\n  15413. Data_GUI.m (line 5007): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15414. Data_GUI.m (line 5029): Value assigned to variable might be unused.\n  15415. Data_GUI.m (line 5063): Value assigned to variable might be unused.\n  15416. Data_GUI.m (line 5092): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15417. Data_GUI.m (line 5125): Function might be unused.\n  15418. Data_GUI.m (line 5169): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15419. Data_GUI.m (line 5170): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15420. Data_GUI.m (line 5193): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15421. Data_GUI.m (line 5194): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15422. Data_GUI.m (line 5214): Function might be unused.\n  15423. Data_GUI.m (line 5291): Function might be unused.\n  15424. Data_GUI.m (line 5308): Value assigned to variable might be unused.\n  15425. Data_GUI.m (line 5366): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15426. Data_GUI.m (line 5367): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15427. Data_GUI.m (line 5371): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15428. Data_GUI.m (line 5372): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15429. Data_GUI.m (line 5390): Function might be unused.\n  15430. Data_GUI.m (line 5448): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15431. Data_GUI.m (line 5448): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15432. Data_GUI.m (line 5480): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15433. Data_GUI.m (line 5480): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15434. Data_GUI.m (line 5643): Function might be unused.\n  15435. Data_GUI.m (line 5673): Function might be unused.\n  15436. Data_GUI.m (line 5764): Function might be unused.\n  15437. Data_GUI.m (line 5802): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15438. Data_GUI.m (line 5833): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15439. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\Data_GUI.m: Missing arguments validation block\n  15440. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  15441. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\addModelWorkspaceData.m: Missing arguments validation block\n  15442. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\checkHighMemoryUsage.m: Missing function docstring\n  15443. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\checkHighMemoryUsage.m: Missing arguments validation block\n  15444. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\checkModelConfiguration.m: Missing arguments validation block\n  15445. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\checkStopRequest.m: Missing function docstring\n  15446. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\checkStopRequest.m: Missing arguments validation block\n  15447. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15448. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15449. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15450. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15451. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15452. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15453. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15454. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\check_model_configuration.m: Missing arguments validation block\n  15455. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15456. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15457. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15458. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\checkpoint_recovery.m: Missing arguments validation block\n  15459. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\combineDataSources.m: Missing arguments validation block\n  15460. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  15461. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15462. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15463. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15464. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15465. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15466. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15467. data_extraction_functions.m (line 146): Function might be unused.\n  15468. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15469. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15470. data_extraction_functions.m (line 202): Function might be unused.\n  15471. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15472. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15473. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15474. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15475. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\data_extraction_functions.m: Missing function docstring\n  15476. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\data_extraction_functions.m: Missing arguments validation block\n  15477. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15478. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\endPhase.m: Missing arguments validation block\n  15479. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  15480. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15481. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15482. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15483. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15484. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15485. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15486. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractAllSignalsFromBus.m: Missing arguments validation block\n  15487. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  15488. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractCoefficientsFromTable.m: Missing function docstring\n  15489. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractCoefficientsFromTable.m: Missing arguments validation block\n  15490. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15491. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15492. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15493. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15494. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15495. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15496. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15497. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15498. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15499. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15500. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15501. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15502. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractCombinedSignalBusData.m: Missing function docstring\n  15503. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractCombinedSignalBusData.m: Missing arguments validation block\n  15504. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15505. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15506. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15507. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15508. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15509. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractConstantMatrixData.m: Missing function docstring\n  15510. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractConstantMatrixData.m: Missing arguments validation block\n  15511. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractDataFromField.m: Missing arguments validation block\n  15512. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  15513. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  15514. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractDataWithOptions.m: Missing arguments validation block\n  15515. extractFromCombinedSignalBus.m (line 14): Value assigned to variable might be unused.\n  15516. extractFromCombinedSignalBus.m (line 24): Value assigned to variable might be unused.\n  15517. extractFromCombinedSignalBus.m (line 29): Value assigned to variable might be unused.\n  15518. extractFromCombinedSignalBus.m (line 34): Value assigned to variable might be unused.\n  15519. extractFromCombinedSignalBus.m (line 51): Value assigned to variable might be unused.\n  15520. extractFromCombinedSignalBus.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15521. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15522. extractFromCombinedSignalBus.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15523. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15524. extractFromCombinedSignalBus.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15525. extractFromCombinedSignalBus.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15526. extractFromCombinedSignalBus.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15527. extractFromCombinedSignalBus.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15528. extractFromCombinedSignalBus.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15529. extractFromCombinedSignalBus.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15530. extractFromCombinedSignalBus.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15531. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15532. extractFromCombinedSignalBus.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15533. extractFromCombinedSignalBus.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15534. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15535. extractFromCombinedSignalBus.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15536. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractFromCombinedSignalBus.m: Missing function docstring\n  15537. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  15538. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15539. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15540. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractFromNestedStruct.m: Missing arguments validation block\n  15541. extractLogsoutDataFixed.m (line 60): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15542. extractLogsoutDataFixed.m (line 61): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15543. extractLogsoutDataFixed.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15544. extractLogsoutDataFixed.m (line 72): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15545. extractLogsoutDataFixed.m (line 91): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15546. extractLogsoutDataFixed.m (line 92): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15547. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractLogsoutDataFixed.m: Missing function docstring\n  15548. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractLogsoutDataFixed.m: Missing arguments validation block\n  15549. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractSignalsFromSimOut.m: Missing arguments validation block\n  15550. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15551. extractSimscapeDataRecursive.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15552. extractSimscapeDataRecursive.m (line 105): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15553. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractSimscapeDataRecursive.m: Missing function docstring\n  15554. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  15555. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractTimeSeriesData.m: Missing function docstring\n  15556. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractTimeSeriesData.m: Missing arguments validation block\n  15557. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15558. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15559. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15560. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15561. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractWorkspaceOutputs.m: Missing function docstring\n  15562. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\extractWorkspaceOutputs.m: Missing arguments validation block\n  15563. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15564. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15565. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  15566. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15567. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15568. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15569. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\fallbackSimlogExtraction.m: Missing function docstring\n  15570. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\fallbackSimlogExtraction.m: Missing arguments validation block\n  15571. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\generateRandomCoefficients.m: Missing arguments validation block\n  15572. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\getMemoryInfo.m: Missing function docstring\n  15573. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\getMemoryInfo.m: Missing arguments validation block\n  15574. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\getMemoryUsage.m: Missing arguments validation block\n  15575. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15576. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15577. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15578. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15579. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15580. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15581. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15582. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  15583. getPolynomialParameterInfo.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15584. getPolynomialParameterInfo.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15585. getPolynomialParameterInfo.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15586. getPolynomialParameterInfo.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15587. getPolynomialParameterInfo.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15588. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\getPolynomialParameterInfo.m: Missing arguments validation block\n  15589. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\getShortenedJointName.m: Missing arguments validation block\n  15590. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15591. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15592. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  15593. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  15594. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\loadInputFile.m: Missing function docstring\n  15595. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\loadInputFile.m: Missing arguments validation block\n  15596. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15597. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\logMessage.m: Missing arguments validation block\n  15598. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\logical2str.m: Missing function docstring\n  15599. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\logical2str.m: Missing arguments validation block\n  15600. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  15601. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\memory_monitor.m: Missing arguments validation block\n  15602. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\mergeTables.m: Missing function docstring\n  15603. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\mergeTables.m: Missing arguments validation block\n  15604. performance_monitor.m (line 11): Persistent variable might be unused.\n  15605. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15606. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15607. performance_monitor.m (line 77): Function might be unused.\n  15608. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15609. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15610. performance_monitor.m (line 118): Function might be unused.\n  15611. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15612. performance_monitor.m (line 133): Function might be unused.\n  15613. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15614. performance_monitor.m (line 149): Function might be unused.\n  15615. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15616. performance_monitor.m (line 162): Function might be unused.\n  15617. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15618. performance_monitor.m (line 175): Function might be unused.\n  15619. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15620. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15621. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15622. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\performance_monitor.m: Missing arguments validation block\n  15623. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  15624. processSimulationOutput.m (line 14): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  15625. processSimulationOutput.m (line 62): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15626. processSimulationOutput.m (line 62): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15627. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\processSimulationOutput.m: Missing function docstring\n  15628. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\processSimulationOutput.m: Missing arguments validation block\n  15629. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15630. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\recordBatchTime.m: Missing arguments validation block\n  15631. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15632. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\recordPhase.m: Missing arguments validation block\n  15633. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\resampleDataToFrequency.m: Missing function docstring\n  15634. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\resampleDataToFrequency.m: Missing arguments validation block\n  15635. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\restoreWorkspace.m: Missing arguments validation block\n  15636. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\runSingleTrial.m: Missing arguments validation block\n  15637. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\setModelParameters.m: Missing arguments validation block\n  15638. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15639. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\setPolynomialCoefficients.m: Missing arguments validation block\n  15640. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\shouldShowDebug.m: Missing function docstring\n  15641. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\shouldShowDebug.m: Missing arguments validation block\n  15642. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\shouldShowNormal.m: Missing function docstring\n  15643. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\shouldShowNormal.m: Missing arguments validation block\n  15644. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\shouldShowVerbose.m: Missing function docstring\n  15645. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\shouldShowVerbose.m: Missing arguments validation block\n  15646. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  15647. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15648. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\traverseSimlogNode.m: Missing arguments validation block\n  15649. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15650. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15651. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15652. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15653. verbosity_control.m (line 203): Function might be unused.\n  15654. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15655. verbosity_control.m (line 225): Function might be unused.\n  15656. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15657. verbosity_control.m (line 248): Function might be unused.\n  15658. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15659. verbosity_control.m (line 274): Function might be unused.\n  15660. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15661. verbosity_control.m (line 293): Function might be unused.\n  15662. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15663. verbosity_control.m (line 320): Function might be unused.\n  15664. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15665. verbosity_control.m (line 335): Function might be unused.\n  15666. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15667. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\Backup_Scripts\\Script_Backup_20250802_110359\\verbosity_control.m: Missing arguments validation block\n  15668. PostProcessingModule.m (line 23): Function might be unused.\n  15669. PostProcessingModule.m (line 144): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15670. PostProcessingModule.m (line 201): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15671. PostProcessingModule.m (line 201): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15672. PostProcessingModule.m (line 234): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15673. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15674. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15675. PostProcessingModule.m (line 259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15676. PostProcessingModule.m (line 412): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15677. PostProcessingModule.m (line 446): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15678. PostProcessingModule.m (line 452): Value assigned to variable might be unused.\n  15679. PostProcessingModule.m (line 459): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  15680. PostProcessingModule.m (line 473): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15681. PostProcessingModule.m (line 488): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  15682. PostProcessingModule.m (line 687): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15683. PostProcessingModule.m (line 687): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15684. PostProcessingModule.m (line 808): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15685. PostProcessingModule.m (line 808): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15686. PostProcessingModule.m (line 812): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15687. PostProcessingModule.m (line 833): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  15688. PostProcessingModule.m (line 841): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  15689. PostProcessingModule.m (line 846): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15690. PostProcessingModule.m (line 869): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  15691. PostProcessingModule.m (line 877): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  15692. PostProcessingModule.m (line 882): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15693. PostProcessingModule.m (line 902): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  15694. PostProcessingModule.m (line 910): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  15695. PostProcessingModule.m (line 915): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15696. PostProcessingModule.m (line 937): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  15697. PostProcessingModule.m (line 945): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  15698. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\PostProcessingModule.m: Missing arguments validation block\n  15699. addModelWorkspaceData.m (line 29): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  15700. addModelWorkspaceData.m (line 86): To improve performance, use 'isscalar' instead of length comparison.\n  15701. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\addModelWorkspaceData.m: Missing arguments validation block\n  15702. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\calculateForceMoments.m: Missing arguments validation block\n  15703. calculateJointPowerWork.m (line 128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15704. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\calculateJointPowerWork.m: Missing arguments validation block\n  15705. calculateWorkPowerAndGranularAngularImpulse3D.m (line 93): Value assigned to variable might be unused.\n  15706. calculateWorkPowerAndGranularAngularImpulse3D.m (line 94): Value assigned to variable might be unused.\n  15707. calculateWorkPowerAndGranularAngularImpulse3D.m (line 234): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15708. calculateWorkPowerAndGranularAngularImpulse3D.m (line 424): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15709. calculateWorkPowerAndGranularAngularImpulse3D.m (line 436): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15710. calculateWorkPowerAndGranularAngularImpulse3D.m (line 446): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15711. calculateWorkPowerAndGranularAngularImpulse3D.m (line 564): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15712. calculateWorkPowerAndGranularAngularImpulse3D.m (line 642): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15713. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\calculateWorkPowerAndGranularAngularImpulse3D.m: Missing arguments validation block\n  15714. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\checkHighMemoryUsage.m: Missing function docstring\n  15715. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\checkHighMemoryUsage.m: Missing arguments validation block\n  15716. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\checkModelConfiguration.m: Missing arguments validation block\n  15717. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\checkStopRequest.m: Missing function docstring\n  15718. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\checkStopRequest.m: Missing arguments validation block\n  15719. check_model_configuration.m (line 12): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15720. check_model_configuration.m (line 13): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15721. check_model_configuration.m (line 14): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15722. check_model_configuration.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15723. check_model_configuration.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15724. check_model_configuration.m (line 85): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15725. check_model_configuration.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15726. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\check_model_configuration.m: Missing arguments validation block\n  15727. checkpoint_recovery.m (line 217): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15728. checkpoint_recovery.m (line 255): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15729. checkpoint_recovery.m (line 290): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15730. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\checkpoint_recovery.m: Missing arguments validation block\n  15731. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\combineDataSources.m: Missing arguments validation block\n  15732. compare_headers_detailed.m (line 50): Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.\n  15733. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\compressData.m: Missing arguments validation block\n  15734. data_extraction_functions.m (line 4): Function name 'extractLogsoutDataFixed' is known to MATLAB by its file name: 'data_extraction_functions'.\n  15735. data_extraction_functions.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15736. data_extraction_functions.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15737. data_extraction_functions.m (line 73): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15738. data_extraction_functions.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15739. data_extraction_functions.m (line 93): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15740. data_extraction_functions.m (line 94): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15741. data_extraction_functions.m (line 146): Function might be unused.\n  15742. data_extraction_functions.m (line 174): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15743. data_extraction_functions.m (line 175): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15744. data_extraction_functions.m (line 202): Function might be unused.\n  15745. data_extraction_functions.m (line 246): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15746. data_extraction_functions.m (line 247): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15747. data_extraction_functions.m (line 270): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15748. data_extraction_functions.m (line 271): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15749. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\data_extraction_functions.m: Missing function docstring\n  15750. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\data_extraction_functions.m: Missing arguments validation block\n  15751. diagnoseDataExtraction.m (line 110): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  15752. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\diagnoseDataExtraction.m: Missing arguments validation block\n  15753. endPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15754. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\endPhase.m: Missing arguments validation block\n  15755. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\ensureEnhancedConfig.m: Missing arguments validation block\n  15756. extractAllSignalsFromBus.m (line 357): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  15757. extractAllSignalsFromBus.m (line 500): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15758. extractAllSignalsFromBus.m (line 501): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15759. extractAllSignalsFromBus.m (line 522): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15760. extractAllSignalsFromBus.m (line 523): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15761. extractAllSignalsFromBus.m (line 562): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15762. extractAllSignalsFromBus.m (line 563): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15763. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractAllSignalsFromBus.m: Missing arguments validation block\n  15764. extractCoefficientsFromTable.m (line 30): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  15765. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractCoefficientsFromTable.m: Missing function docstring\n  15766. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractCoefficientsFromTable.m: Missing arguments validation block\n  15767. extractCombinedSignalBusData.m (line 86): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15768. extractCombinedSignalBusData.m (line 88): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15769. extractCombinedSignalBusData.m (line 89): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15770. extractCombinedSignalBusData.m (line 100): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15771. extractCombinedSignalBusData.m (line 102): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15772. extractCombinedSignalBusData.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15773. extractCombinedSignalBusData.m (line 127): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15774. extractCombinedSignalBusData.m (line 129): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15775. extractCombinedSignalBusData.m (line 130): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15776. extractCombinedSignalBusData.m (line 140): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15777. extractCombinedSignalBusData.m (line 142): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15778. extractCombinedSignalBusData.m (line 143): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15779. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractCombinedSignalBusData.m: Missing function docstring\n  15780. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractCombinedSignalBusData.m: Missing arguments validation block\n  15781. extractConstantMatrixData.m (line 16): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15782. extractConstantMatrixData.m (line 39): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15783. extractConstantMatrixData.m (line 50): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15784. extractConstantMatrixData.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15785. extractConstantMatrixData.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15786. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractConstantMatrixData.m: Missing function docstring\n  15787. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractConstantMatrixData.m: Missing arguments validation block\n  15788. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractDataFromField.m: Missing arguments validation block\n  15789. extractDataWithOptions.m (line 144): Value assigned to variable might be unused.\n  15790. extractDataWithOptions.m (line 156): Value assigned to variable might be unused.\n  15791. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractDataWithOptions.m: Missing arguments validation block\n  15792. extractFromCombinedSignalBus.m (line 15): Value assigned to variable might be unused.\n  15793. extractFromCombinedSignalBus.m (line 25): Value assigned to variable might be unused.\n  15794. extractFromCombinedSignalBus.m (line 30): Value assigned to variable might be unused.\n  15795. extractFromCombinedSignalBus.m (line 35): Value assigned to variable might be unused.\n  15796. extractFromCombinedSignalBus.m (line 52): Value assigned to variable might be unused.\n  15797. extractFromCombinedSignalBus.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15798. extractFromCombinedSignalBus.m (line 162): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15799. extractFromCombinedSignalBus.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15800. extractFromCombinedSignalBus.m (line 168): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15801. extractFromCombinedSignalBus.m (line 179): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15802. extractFromCombinedSignalBus.m (line 181): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15803. extractFromCombinedSignalBus.m (line 203): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15804. extractFromCombinedSignalBus.m (line 204): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15805. extractFromCombinedSignalBus.m (line 212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15806. extractFromCombinedSignalBus.m (line 213): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15807. extractFromCombinedSignalBus.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15808. extractFromCombinedSignalBus.m (line 223): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15809. extractFromCombinedSignalBus.m (line 236): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15810. extractFromCombinedSignalBus.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15811. extractFromCombinedSignalBus.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15812. extractFromCombinedSignalBus.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15813. extractFromCombinedSignalBus.m (line 267): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15814. extractFromCombinedSignalBus.m (line 268): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15815. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractFromCombinedSignalBus.m: Missing function docstring\n  15816. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractFromCombinedSignalBus.m: Missing arguments validation block\n  15817. extractFromCombinedSignalBus_BROKEN.m (line 2): Function name 'extractFromCombinedSignalBus' is known to MATLAB by its file name: 'extractFromCombinedSignalBus_BROKEN'.\n  15818. extractFromCombinedSignalBus_BROKEN.m (line 14): Value assigned to variable might be unused.\n  15819. extractFromCombinedSignalBus_BROKEN.m (line 24): Value assigned to variable might be unused.\n  15820. extractFromCombinedSignalBus_BROKEN.m (line 29): Value assigned to variable might be unused.\n  15821. extractFromCombinedSignalBus_BROKEN.m (line 34): Value assigned to variable might be unused.\n  15822. extractFromCombinedSignalBus_BROKEN.m (line 51): Value assigned to variable might be unused.\n  15823. extractFromCombinedSignalBus_BROKEN.m (line 160): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15824. extractFromCombinedSignalBus_BROKEN.m (line 161): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15825. extractFromCombinedSignalBus_BROKEN.m (line 166): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15826. extractFromCombinedSignalBus_BROKEN.m (line 167): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15827. extractFromCombinedSignalBus_BROKEN.m (line 176): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15828. extractFromCombinedSignalBus_BROKEN.m (line 177): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15829. extractFromCombinedSignalBus_BROKEN.m (line 187): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15830. extractFromCombinedSignalBus_BROKEN.m (line 189): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15831. extractFromCombinedSignalBus_BROKEN.m (line 209): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15832. extractFromCombinedSignalBus_BROKEN.m (line 210): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15833. extractFromCombinedSignalBus_BROKEN.m (line 221): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15834. extractFromCombinedSignalBus_BROKEN.m (line 222): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15835. extractFromCombinedSignalBus_BROKEN.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15836. extractFromCombinedSignalBus_BROKEN.m (line 238): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15837. extractFromCombinedSignalBus_BROKEN.m (line 252): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15838. extractFromCombinedSignalBus_BROKEN.m (line 253): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15839. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractFromCombinedSignalBus_BROKEN.m: Missing function docstring\n  15840. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractFromCombinedSignalBus_BROKEN.m: Missing arguments validation block\n  15841. extractFromNestedStruct.m (line 62): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15842. extractFromNestedStruct.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15843. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractFromNestedStruct.m: Missing arguments validation block\n  15844. extractLogsoutDataFixed.m (line 53): Value assigned to variable might be unused.\n  15845. extractLogsoutDataFixed.m (line 63): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15846. extractLogsoutDataFixed.m (line 64): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15847. extractLogsoutDataFixed.m (line 74): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15848. extractLogsoutDataFixed.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15849. extractLogsoutDataFixed.m (line 97): Value assigned to variable might be unused.\n  15850. extractLogsoutDataFixed.m (line 103): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15851. extractLogsoutDataFixed.m (line 104): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15852. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractLogsoutDataFixed.m: Missing function docstring\n  15853. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractLogsoutDataFixed.m: Missing arguments validation block\n  15854. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractSignalsFromSimOut.m: Missing arguments validation block\n  15855. extractSimscapeDataRecursive.m (line 49): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15856. extractSimscapeDataRecursive.m (line 105): Value assigned to variable might be unused.\n  15857. extractSimscapeDataRecursive.m (line 109): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15858. extractSimscapeDataRecursive.m (line 110): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15859. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractSimscapeDataRecursive.m: Missing function docstring\n  15860. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractSimscapeDataRecursive.m: Missing arguments validation block\n  15861. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractTimeSeriesData.m: Missing function docstring\n  15862. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractTimeSeriesData.m: Missing arguments validation block\n  15863. extractWorkspaceOutputs.m (line 46): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15864. extractWorkspaceOutputs.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15865. extractWorkspaceOutputs.m (line 70): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15866. extractWorkspaceOutputs.m (line 71): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15867. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractWorkspaceOutputs.m: Missing function docstring\n  15868. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\extractWorkspaceOutputs.m: Missing arguments validation block\n  15869. fallbackSimlogExtraction.m (line 22): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15870. fallbackSimlogExtraction.m (line 31): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15871. fallbackSimlogExtraction.m (line 36): This statement (and possibly following ones) cannot be reached.\n  15872. fallbackSimlogExtraction.m (line 38): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15873. fallbackSimlogExtraction.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15874. fallbackSimlogExtraction.m (line 75): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15875. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\fallbackSimlogExtraction.m: Missing function docstring\n  15876. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\fallbackSimlogExtraction.m: Missing arguments validation block\n  15877. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\generateRandomCoefficients.m: Missing arguments validation block\n  15878. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\getMemoryInfo.m: Missing function docstring\n  15879. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\getMemoryInfo.m: Missing arguments validation block\n  15880. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\getMemoryUsage.m: Missing arguments validation block\n  15881. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\getOrCreateParallelPool.m: Missing arguments validation block\n  15882. getPolynomialParameterInfo.m (line 15): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15883. getPolynomialParameterInfo.m (line 16): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15884. getPolynomialParameterInfo.m (line 17): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15885. getPolynomialParameterInfo.m (line 18): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15886. getPolynomialParameterInfo.m (line 19): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15887. getPolynomialParameterInfo.m (line 66): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15888. getPolynomialParameterInfo.m (line 67): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  15889. getPolynomialParameterInfo.m (line 77): For array or cell array, performance can be improved using logical indexing instead of 'find'.\n  15890. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\getPolynomialParameterInfo.m: Missing arguments validation block\n  15891. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\getShortenedJointName.m: Missing arguments validation block\n  15892. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\initializeLocalCluster.m: Missing arguments validation block\n  15893. inspect_simscape_hierarchy.m (line 15): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  15894. inspect_simscape_hierarchy.m (line 15): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15895. inspect_simscape_hierarchy.m (line 70): Value assigned to variable might be unused.\n  15896. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\inspect_simscape_hierarchy.m: Missing arguments validation block\n  15897. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\loadInputFile.m: Missing function docstring\n  15898. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\loadInputFile.m: Missing arguments validation block\n  15899. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\logBatchResult.m: Missing arguments validation block\n  15900. logMessage.m (line 11): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15901. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\logMessage.m: Missing arguments validation block\n  15902. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\logical2str.m: Missing function docstring\n  15903. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\logical2str.m: Missing arguments validation block\n  15904. memory_monitor.m (line 133): Using 'clear' with the 'functions' option usually decreases code performance and is often unnecessary.\n  15905. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\memory_monitor.m: Missing arguments validation block\n  15906. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\mergeTables.m: Missing function docstring\n  15907. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\mergeTables.m: Missing arguments validation block\n  15908. performance_analysis.m (line 121): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15909. performance_analysis.m (line 122): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15910. performance_analysis.m (line 123): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15911. performance_analysis.m (line 124): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15912. performance_analysis.m (line 130): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15913. performance_analysis.m (line 131): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15914. performance_analysis.m (line 132): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15915. performance_analysis.m (line 133): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15916. performance_analysis.m (line 134): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15917. performance_analysis.m (line 135): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15918. performance_analysis.m (line 140): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15919. performance_analysis.m (line 166): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  15920. performance_analysis.m (line 261): Function might be unused.\n  15921. performance_analysis.m (line 312): Parse error at results: usage might be invalid MATLAB syntax.\n  15922. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\performance_analysis.m: Missing arguments validation block\n  15923. performance_monitor.m (line 11): Persistent variable might be unused.\n  15924. performance_monitor.m (line 43): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15925. performance_monitor.m (line 64): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15926. performance_monitor.m (line 77): Function might be unused.\n  15927. performance_monitor.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15928. performance_monitor.m (line 101): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15929. performance_monitor.m (line 118): Function might be unused.\n  15930. performance_monitor.m (line 120): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15931. performance_monitor.m (line 133): Function might be unused.\n  15932. performance_monitor.m (line 135): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15933. performance_monitor.m (line 149): Function might be unused.\n  15934. performance_monitor.m (line 151): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15935. performance_monitor.m (line 162): Function might be unused.\n  15936. performance_monitor.m (line 164): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15937. performance_monitor.m (line 175): Function might be unused.\n  15938. performance_monitor.m (line 177): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15939. performance_monitor.m (line 198): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15940. performance_monitor.m (line 414): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  15941. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\performance_monitor.m: Missing arguments validation block\n  15942. performance_optimizer.m (line 28): Function might be unused.\n  15943. performance_optimizer.m (line 42): Value assigned to variable might be unused.\n  15944. performance_optimizer.m (line 102): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15945. performance_optimizer.m (line 107): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15946. performance_optimizer.m (line 108): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15947. performance_optimizer.m (line 109): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15948. performance_optimizer.m (line 110): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15949. performance_optimizer.m (line 111): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15950. performance_optimizer.m (line 112): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15951. performance_optimizer.m (line 113): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15952. performance_optimizer.m (line 114): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15953. performance_optimizer.m (line 115): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15954. performance_optimizer.m (line 116): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15955. performance_optimizer.m (line 117): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15956. performance_optimizer.m (line 118): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15957. performance_optimizer.m (line 123): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15958. performance_optimizer.m (line 127): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15959. performance_optimizer.m (line 128): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15960. performance_optimizer.m (line 129): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15961. performance_optimizer.m (line 130): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15962. performance_optimizer.m (line 131): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15963. performance_optimizer.m (line 132): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15964. performance_optimizer.m (line 133): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15965. performance_optimizer.m (line 134): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15966. performance_optimizer.m (line 135): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15967. performance_optimizer.m (line 140): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15968. performance_optimizer.m (line 144): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15969. performance_optimizer.m (line 145): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15970. performance_optimizer.m (line 146): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15971. performance_optimizer.m (line 147): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15972. performance_optimizer.m (line 148): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15973. performance_optimizer.m (line 149): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15974. performance_optimizer.m (line 150): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15975. performance_optimizer.m (line 151): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15976. performance_optimizer.m (line 152): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15977. performance_optimizer.m (line 153): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  15978. performance_optimizer.m (line 158): Function might be unused.\n  15979. performance_optimizer.m (line 195): Function might be unused.\n  15980. performance_optimizer.m (line 244): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15981. performance_optimizer.m (line 263): Function might be unused.\n  15982. performance_optimizer.m (line 263): Input argument might be unused. Consider replacing the argument with ~ instead.\n  15983. performance_optimizer.m (line 301): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  15984. performance_optimizer.m (line 348): Function might be unused.\n  15985. performance_optimizer.m (line 408): Function might be unused.\n  15986. performance_optimizer.m (line 446): Function might be unused.\n  15987. performance_optimizer.m (line 517): Function might be unused.\n  15988. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\performance_optimizer.m: Missing arguments validation block\n  15989. performance_optimizer_functions.m (line 1): Function name 'initializeLocalCluster' is known to MATLAB by its file name: 'performance_optimizer_functions'.\n  15990. performance_optimizer_functions.m (line 72): Function might be unused.\n  15991. performance_optimizer_functions.m (line 112): Function might be unused.\n  15992. performance_optimizer_functions.m (line 165): Function might be unused.\n  15993. performance_optimizer_functions.m (line 232): Function might be unused.\n  15994. performance_optimizer_functions.m (line 263): Function might be unused.\n  15995. performance_optimizer_functions.m (line 303): Function might be unused.\n  15996. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\performance_optimizer_functions.m: Missing arguments validation block\n  15997. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\prepareSimulationInputsForBatch.m: Missing arguments validation block\n  15998. processSimulationOutput.m (line 21): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  15999. processSimulationOutput.m (line 69): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16000. processSimulationOutput.m (line 69): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16001. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\processSimulationOutput.m: Missing function docstring\n  16002. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\processSimulationOutput.m: Missing arguments validation block\n  16003. recordBatchTime.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  16004. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\recordBatchTime.m: Missing arguments validation block\n  16005. recordPhase.m (line 10): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  16006. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\recordPhase.m: Missing arguments validation block\n  16007. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\resampleDataToFrequency.m: Missing function docstring\n  16008. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\resampleDataToFrequency.m: Missing arguments validation block\n  16009. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\restoreWorkspace.m: Missing arguments validation block\n  16010. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\runSingleTrial.m: Missing arguments validation block\n  16011. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\setModelParameters.m: Missing arguments validation block\n  16012. setPolynomialCoefficients.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16013. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\setPolynomialCoefficients.m: Missing arguments validation block\n  16014. setup_performance_preferences.m (line 88): Function might be unused.\n  16015. setup_performance_preferences.m (line 113): Function might be unused.\n  16016. setup_performance_preferences.m (line 138): Function might be unused.\n  16017. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\setup_performance_preferences.m: Missing arguments validation block\n  16018. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\shouldShowDebug.m: Missing function docstring\n  16019. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\shouldShowDebug.m: Missing arguments validation block\n  16020. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\shouldShowNormal.m: Missing function docstring\n  16021. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\shouldShowNormal.m: Missing arguments validation block\n  16022. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\shouldShowVerbose.m: Missing function docstring\n  16023. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\shouldShowVerbose.m: Missing arguments validation block\n  16024. timestampPrintf.m (line 38): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16025. timestampPrintf.m (line 38): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16026. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\timestampPrintf.m: Missing arguments validation block\n  16027. traverseSimlogNode.m (line 10): Value assigned to variable might be unused.\n  16028. traverseSimlogNode.m (line 126): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16029. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\traverseSimlogNode.m: Missing arguments validation block\n  16030. verbosity_control.m (line 13): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  16031. verbosity_control.m (line 53): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  16032. verbosity_control.m (line 79): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  16033. verbosity_control.m (line 125): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  16034. verbosity_control.m (line 203): Function might be unused.\n  16035. verbosity_control.m (line 205): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  16036. verbosity_control.m (line 225): Function might be unused.\n  16037. verbosity_control.m (line 227): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  16038. verbosity_control.m (line 248): Function might be unused.\n  16039. verbosity_control.m (line 250): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  16040. verbosity_control.m (line 274): Function might be unused.\n  16041. verbosity_control.m (line 276): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  16042. verbosity_control.m (line 293): Function might be unused.\n  16043. verbosity_control.m (line 295): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  16044. verbosity_control.m (line 320): Function might be unused.\n  16045. verbosity_control.m (line 322): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  16046. verbosity_control.m (line 335): Function might be unused.\n  16047. verbosity_control.m (line 337): Global variables are inefficient and make errors difficult to diagnose. Use a function with input variables instead.\n  16048. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\functions\\verbosity_control.m: Missing arguments validation block\n  16049. Data_GUI_run_20250822_215304.m (line 45): Function name 'Data_GUI_Enhanced' is known to MATLAB by its file name: 'Data_GUI_run_20250822_215304'.\n  16050. Data_GUI_run_20250822_215304.m (line 357): Function might be unused.\n  16051. Data_GUI_run_20250822_215304.m (line 448): Value assigned to variable might be unused.\n  16052. Data_GUI_run_20250822_215304.m (line 670): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16053. Data_GUI_run_20250822_215304.m (line 694): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16054. Data_GUI_run_20250822_215304.m (line 706): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16055. Data_GUI_run_20250822_215304.m (line 730): Value assigned to variable might be unused.\n  16056. Data_GUI_run_20250822_215304.m (line 982): Value assigned to variable might be unused.\n  16057. Data_GUI_run_20250822_215304.m (line 1003): Value assigned to variable might be unused.\n  16058. Data_GUI_run_20250822_215304.m (line 1177): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16059. Data_GUI_run_20250822_215304.m (line 1177): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16060. Data_GUI_run_20250822_215304.m (line 1210): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16061. Data_GUI_run_20250822_215304.m (line 1291): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16062. Data_GUI_run_20250822_215304.m (line 1531): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16063. Data_GUI_run_20250822_215304.m (line 1531): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16064. Data_GUI_run_20250822_215304.m (line 1537): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16065. Data_GUI_run_20250822_215304.m (line 1537): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16066. Data_GUI_run_20250822_215304.m (line 1548): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16067. Data_GUI_run_20250822_215304.m (line 1548): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16068. Data_GUI_run_20250822_215304.m (line 1564): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16069. Data_GUI_run_20250822_215304.m (line 1601): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16070. Data_GUI_run_20250822_215304.m (line 1601): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16071. Data_GUI_run_20250822_215304.m (line 1761): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16072. Data_GUI_run_20250822_215304.m (line 1761): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16073. Data_GUI_run_20250822_215304.m (line 1865): Value assigned to variable might be unused.\n  16074. Data_GUI_run_20250822_215304.m (line 1971): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16075. Data_GUI_run_20250822_215304.m (line 1971): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16076. Data_GUI_run_20250822_215304.m (line 2373): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16077. Data_GUI_run_20250822_215304.m (line 2374): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16078. Data_GUI_run_20250822_215304.m (line 2375): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16079. Data_GUI_run_20250822_215304.m (line 2376): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16080. Data_GUI_run_20250822_215304.m (line 2377): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16081. Data_GUI_run_20250822_215304.m (line 2638): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16082. Data_GUI_run_20250822_215304.m (line 2639): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16083. Data_GUI_run_20250822_215304.m (line 2640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16084. Data_GUI_run_20250822_215304.m (line 2641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16085. Data_GUI_run_20250822_215304.m (line 2642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16086. Data_GUI_run_20250822_215304.m (line 2674): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16087. Data_GUI_run_20250822_215304.m (line 2675): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16088. Data_GUI_run_20250822_215304.m (line 2676): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16089. Data_GUI_run_20250822_215304.m (line 2709): Value assigned to variable might be unused.\n  16090. Data_GUI_run_20250822_215304.m (line 2734): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16091. Data_GUI_run_20250822_215304.m (line 2882): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16092. Data_GUI_run_20250822_215304.m (line 2882): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16093. Data_GUI_run_20250822_215304.m (line 2895): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16094. Data_GUI_run_20250822_215304.m (line 2895): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16095. Data_GUI_run_20250822_215304.m (line 2908): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16096. Data_GUI_run_20250822_215304.m (line 2920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16097. Data_GUI_run_20250822_215304.m (line 2920): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16098. Data_GUI_run_20250822_215304.m (line 2976): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16099. Data_GUI_run_20250822_215304.m (line 2976): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16100. Data_GUI_run_20250822_215304.m (line 3027): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16101. Data_GUI_run_20250822_215304.m (line 3027): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16102. Data_GUI_run_20250822_215304.m (line 3074): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16103. Data_GUI_run_20250822_215304.m (line 3074): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16104. Data_GUI_run_20250822_215304.m (line 3104): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16105. Data_GUI_run_20250822_215304.m (line 3104): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16106. Data_GUI_run_20250822_215304.m (line 3126): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16107. Data_GUI_run_20250822_215304.m (line 3126): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16108. Data_GUI_run_20250822_215304.m (line 3147): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16109. Data_GUI_run_20250822_215304.m (line 3147): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16110. Data_GUI_run_20250822_215304.m (line 3172): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16111. Data_GUI_run_20250822_215304.m (line 3172): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16112. Data_GUI_run_20250822_215304.m (line 3197): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16113. Data_GUI_run_20250822_215304.m (line 3197): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16114. Data_GUI_run_20250822_215304.m (line 3212): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16115. Data_GUI_run_20250822_215304.m (line 3224): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16116. Data_GUI_run_20250822_215304.m (line 3224): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16117. Data_GUI_run_20250822_215304.m (line 3230): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16118. Data_GUI_run_20250822_215304.m (line 3230): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16119. Data_GUI_run_20250822_215304.m (line 3243): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16120. Data_GUI_run_20250822_215304.m (line 3244): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16121. Data_GUI_run_20250822_215304.m (line 3245): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16122. Data_GUI_run_20250822_215304.m (line 3256): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16123. Data_GUI_run_20250822_215304.m (line 3257): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16124. Data_GUI_run_20250822_215304.m (line 3262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16125. Data_GUI_run_20250822_215304.m (line 3263): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16126. Data_GUI_run_20250822_215304.m (line 3303): Value assigned to variable might be unused.\n  16127. Data_GUI_run_20250822_215304.m (line 3506): Value assigned to variable might be unused.\n  16128. Data_GUI_run_20250822_215304.m (line 3696): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  16129. Data_GUI_run_20250822_215304.m (line 3835): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16130. Data_GUI_run_20250822_215304.m (line 3835): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16131. Data_GUI_run_20250822_215304.m (line 3957): Function might be unused.\n  16132. Data_GUI_run_20250822_215304.m (line 4135): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16133. Data_GUI_run_20250822_215304.m (line 4135): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16134. Data_GUI_run_20250822_215304.m (line 4170): Function might be unused.\n  16135. Data_GUI_run_20250822_215304.m (line 4221): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16136. Data_GUI_run_20250822_215304.m (line 4303): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16137. Data_GUI_run_20250822_215304.m (line 4420): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16138. Data_GUI_run_20250822_215304.m (line 4468): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16139. Data_GUI_run_20250822_215304.m (line 4468): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16140. Data_GUI_run_20250822_215304.m (line 4821): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  16141. Data_GUI_run_20250822_215304.m (line 5112): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16142. Data_GUI_run_20250822_215304.m (line 5115): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16143. Data_GUI_run_20250822_215304.m (line 5115): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16144. Data_GUI_run_20250822_215304.m (line 5192): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16145. Data_GUI_run_20250822_215304.m (line 5226): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16146. Data_GUI_run_20250822_215304.m (line 5240): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16147. Data_GUI_run_20250822_215304.m (line 5248): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16148. Data_GUI_run_20250822_215304.m (line 5248): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16149. Data_GUI_run_20250822_215304.m (line 5355): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16150. Data_GUI_run_20250822_215304.m (line 5355): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16151. Data_GUI_run_20250822_215304.m (line 5387): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16152. Data_GUI_run_20250822_215304.m (line 5387): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16153. Data_GUI_run_20250822_215304.m (line 5554): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16154. Data_GUI_run_20250822_215304.m (line 5568): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16155. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250822_215304.m: Missing arguments validation block\n  16156. Data_GUI_run_20250823_091732.m (line 44): Function name 'Dataset_GUI' is known to MATLAB by its file name: 'Data_GUI_run_20250823_091732'.\n  16157. Data_GUI_run_20250823_091732.m (line 356): Function might be unused.\n  16158. Data_GUI_run_20250823_091732.m (line 447): Value assigned to variable might be unused.\n  16159. Data_GUI_run_20250823_091732.m (line 669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16160. Data_GUI_run_20250823_091732.m (line 693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16161. Data_GUI_run_20250823_091732.m (line 705): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16162. Data_GUI_run_20250823_091732.m (line 729): Value assigned to variable might be unused.\n  16163. Data_GUI_run_20250823_091732.m (line 981): Value assigned to variable might be unused.\n  16164. Data_GUI_run_20250823_091732.m (line 1002): Value assigned to variable might be unused.\n  16165. Data_GUI_run_20250823_091732.m (line 1176): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16166. Data_GUI_run_20250823_091732.m (line 1176): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16167. Data_GUI_run_20250823_091732.m (line 1209): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16168. Data_GUI_run_20250823_091732.m (line 1290): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16169. Data_GUI_run_20250823_091732.m (line 1530): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16170. Data_GUI_run_20250823_091732.m (line 1530): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16171. Data_GUI_run_20250823_091732.m (line 1536): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16172. Data_GUI_run_20250823_091732.m (line 1536): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16173. Data_GUI_run_20250823_091732.m (line 1547): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16174. Data_GUI_run_20250823_091732.m (line 1547): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16175. Data_GUI_run_20250823_091732.m (line 1563): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16176. Data_GUI_run_20250823_091732.m (line 1600): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16177. Data_GUI_run_20250823_091732.m (line 1600): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16178. Data_GUI_run_20250823_091732.m (line 1760): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16179. Data_GUI_run_20250823_091732.m (line 1760): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16180. Data_GUI_run_20250823_091732.m (line 1864): Value assigned to variable might be unused.\n  16181. Data_GUI_run_20250823_091732.m (line 1970): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16182. Data_GUI_run_20250823_091732.m (line 1970): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16183. Data_GUI_run_20250823_091732.m (line 2372): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16184. Data_GUI_run_20250823_091732.m (line 2373): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16185. Data_GUI_run_20250823_091732.m (line 2374): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16186. Data_GUI_run_20250823_091732.m (line 2375): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16187. Data_GUI_run_20250823_091732.m (line 2376): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16188. Data_GUI_run_20250823_091732.m (line 2637): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16189. Data_GUI_run_20250823_091732.m (line 2638): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16190. Data_GUI_run_20250823_091732.m (line 2639): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16191. Data_GUI_run_20250823_091732.m (line 2640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16192. Data_GUI_run_20250823_091732.m (line 2641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16193. Data_GUI_run_20250823_091732.m (line 2673): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16194. Data_GUI_run_20250823_091732.m (line 2674): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16195. Data_GUI_run_20250823_091732.m (line 2675): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16196. Data_GUI_run_20250823_091732.m (line 2708): Value assigned to variable might be unused.\n  16197. Data_GUI_run_20250823_091732.m (line 2733): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16198. Data_GUI_run_20250823_091732.m (line 2881): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16199. Data_GUI_run_20250823_091732.m (line 2881): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16200. Data_GUI_run_20250823_091732.m (line 2894): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16201. Data_GUI_run_20250823_091732.m (line 2894): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16202. Data_GUI_run_20250823_091732.m (line 2907): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16203. Data_GUI_run_20250823_091732.m (line 2919): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16204. Data_GUI_run_20250823_091732.m (line 2919): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16205. Data_GUI_run_20250823_091732.m (line 2975): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16206. Data_GUI_run_20250823_091732.m (line 2975): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16207. Data_GUI_run_20250823_091732.m (line 3026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16208. Data_GUI_run_20250823_091732.m (line 3026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16209. Data_GUI_run_20250823_091732.m (line 3073): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16210. Data_GUI_run_20250823_091732.m (line 3073): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16211. Data_GUI_run_20250823_091732.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16212. Data_GUI_run_20250823_091732.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16213. Data_GUI_run_20250823_091732.m (line 3125): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16214. Data_GUI_run_20250823_091732.m (line 3125): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16215. Data_GUI_run_20250823_091732.m (line 3146): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16216. Data_GUI_run_20250823_091732.m (line 3146): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16217. Data_GUI_run_20250823_091732.m (line 3171): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16218. Data_GUI_run_20250823_091732.m (line 3171): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16219. Data_GUI_run_20250823_091732.m (line 3196): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16220. Data_GUI_run_20250823_091732.m (line 3196): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16221. Data_GUI_run_20250823_091732.m (line 3211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16222. Data_GUI_run_20250823_091732.m (line 3223): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16223. Data_GUI_run_20250823_091732.m (line 3223): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16224. Data_GUI_run_20250823_091732.m (line 3229): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16225. Data_GUI_run_20250823_091732.m (line 3229): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16226. Data_GUI_run_20250823_091732.m (line 3242): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16227. Data_GUI_run_20250823_091732.m (line 3243): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16228. Data_GUI_run_20250823_091732.m (line 3244): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16229. Data_GUI_run_20250823_091732.m (line 3255): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16230. Data_GUI_run_20250823_091732.m (line 3256): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16231. Data_GUI_run_20250823_091732.m (line 3261): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16232. Data_GUI_run_20250823_091732.m (line 3262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16233. Data_GUI_run_20250823_091732.m (line 3302): Value assigned to variable might be unused.\n  16234. Data_GUI_run_20250823_091732.m (line 3538): Value assigned to variable might be unused.\n  16235. Data_GUI_run_20250823_091732.m (line 3725): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  16236. Data_GUI_run_20250823_091732.m (line 3855): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16237. Data_GUI_run_20250823_091732.m (line 3855): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16238. Data_GUI_run_20250823_091732.m (line 4088): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16239. Data_GUI_run_20250823_091732.m (line 4088): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16240. Data_GUI_run_20250823_091732.m (line 4123): Function might be unused.\n  16241. Data_GUI_run_20250823_091732.m (line 4174): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16242. Data_GUI_run_20250823_091732.m (line 4256): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16243. Data_GUI_run_20250823_091732.m (line 4373): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16244. Data_GUI_run_20250823_091732.m (line 4443): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16245. Data_GUI_run_20250823_091732.m (line 4443): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16246. Data_GUI_run_20250823_091732.m (line 4796): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  16247. Data_GUI_run_20250823_091732.m (line 5087): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16248. Data_GUI_run_20250823_091732.m (line 5090): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16249. Data_GUI_run_20250823_091732.m (line 5090): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16250. Data_GUI_run_20250823_091732.m (line 5185): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16251. Data_GUI_run_20250823_091732.m (line 5335): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16252. Data_GUI_run_20250823_091732.m (line 5335): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16253. Data_GUI_run_20250823_091732.m (line 5367): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16254. Data_GUI_run_20250823_091732.m (line 5367): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16255. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_091732.m: Missing arguments validation block\n  16256. Data_GUI_run_20250823_124310.m (line 44): Function name 'Dataset_GUI' is known to MATLAB by its file name: 'Data_GUI_run_20250823_124310'.\n  16257. Data_GUI_run_20250823_124310.m (line 364): Function might be unused.\n  16258. Data_GUI_run_20250823_124310.m (line 455): Value assigned to variable might be unused.\n  16259. Data_GUI_run_20250823_124310.m (line 677): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16260. Data_GUI_run_20250823_124310.m (line 701): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16261. Data_GUI_run_20250823_124310.m (line 713): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16262. Data_GUI_run_20250823_124310.m (line 737): Value assigned to variable might be unused.\n  16263. Data_GUI_run_20250823_124310.m (line 989): Value assigned to variable might be unused.\n  16264. Data_GUI_run_20250823_124310.m (line 1010): Value assigned to variable might be unused.\n  16265. Data_GUI_run_20250823_124310.m (line 1184): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16266. Data_GUI_run_20250823_124310.m (line 1184): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16267. Data_GUI_run_20250823_124310.m (line 1217): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16268. Data_GUI_run_20250823_124310.m (line 1298): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16269. Data_GUI_run_20250823_124310.m (line 1538): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16270. Data_GUI_run_20250823_124310.m (line 1538): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16271. Data_GUI_run_20250823_124310.m (line 1544): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16272. Data_GUI_run_20250823_124310.m (line 1544): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16273. Data_GUI_run_20250823_124310.m (line 1555): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16274. Data_GUI_run_20250823_124310.m (line 1555): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16275. Data_GUI_run_20250823_124310.m (line 1571): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16276. Data_GUI_run_20250823_124310.m (line 1608): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16277. Data_GUI_run_20250823_124310.m (line 1608): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16278. Data_GUI_run_20250823_124310.m (line 1790): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16279. Data_GUI_run_20250823_124310.m (line 1790): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16280. Data_GUI_run_20250823_124310.m (line 1894): Value assigned to variable might be unused.\n  16281. Data_GUI_run_20250823_124310.m (line 2000): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16282. Data_GUI_run_20250823_124310.m (line 2000): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16283. Data_GUI_run_20250823_124310.m (line 2402): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16284. Data_GUI_run_20250823_124310.m (line 2403): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16285. Data_GUI_run_20250823_124310.m (line 2404): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16286. Data_GUI_run_20250823_124310.m (line 2405): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16287. Data_GUI_run_20250823_124310.m (line 2406): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16288. Data_GUI_run_20250823_124310.m (line 2667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16289. Data_GUI_run_20250823_124310.m (line 2668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16290. Data_GUI_run_20250823_124310.m (line 2669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16291. Data_GUI_run_20250823_124310.m (line 2670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16292. Data_GUI_run_20250823_124310.m (line 2671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16293. Data_GUI_run_20250823_124310.m (line 2703): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16294. Data_GUI_run_20250823_124310.m (line 2704): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16295. Data_GUI_run_20250823_124310.m (line 2705): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16296. Data_GUI_run_20250823_124310.m (line 2738): Value assigned to variable might be unused.\n  16297. Data_GUI_run_20250823_124310.m (line 2763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16298. Data_GUI_run_20250823_124310.m (line 2911): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16299. Data_GUI_run_20250823_124310.m (line 2911): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16300. Data_GUI_run_20250823_124310.m (line 2924): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16301. Data_GUI_run_20250823_124310.m (line 2924): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16302. Data_GUI_run_20250823_124310.m (line 2937): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16303. Data_GUI_run_20250823_124310.m (line 2949): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16304. Data_GUI_run_20250823_124310.m (line 2949): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16305. Data_GUI_run_20250823_124310.m (line 3005): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16306. Data_GUI_run_20250823_124310.m (line 3005): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16307. Data_GUI_run_20250823_124310.m (line 3056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16308. Data_GUI_run_20250823_124310.m (line 3056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16309. Data_GUI_run_20250823_124310.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16310. Data_GUI_run_20250823_124310.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16311. Data_GUI_run_20250823_124310.m (line 3133): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16312. Data_GUI_run_20250823_124310.m (line 3133): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16313. Data_GUI_run_20250823_124310.m (line 3155): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16314. Data_GUI_run_20250823_124310.m (line 3155): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16315. Data_GUI_run_20250823_124310.m (line 3176): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16316. Data_GUI_run_20250823_124310.m (line 3176): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16317. Data_GUI_run_20250823_124310.m (line 3201): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16318. Data_GUI_run_20250823_124310.m (line 3201): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16319. Data_GUI_run_20250823_124310.m (line 3226): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16320. Data_GUI_run_20250823_124310.m (line 3226): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16321. Data_GUI_run_20250823_124310.m (line 3241): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16322. Data_GUI_run_20250823_124310.m (line 3253): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16323. Data_GUI_run_20250823_124310.m (line 3253): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16324. Data_GUI_run_20250823_124310.m (line 3259): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16325. Data_GUI_run_20250823_124310.m (line 3259): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16326. Data_GUI_run_20250823_124310.m (line 3272): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16327. Data_GUI_run_20250823_124310.m (line 3273): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16328. Data_GUI_run_20250823_124310.m (line 3274): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16329. Data_GUI_run_20250823_124310.m (line 3285): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16330. Data_GUI_run_20250823_124310.m (line 3286): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16331. Data_GUI_run_20250823_124310.m (line 3291): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16332. Data_GUI_run_20250823_124310.m (line 3292): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16333. Data_GUI_run_20250823_124310.m (line 3332): Value assigned to variable might be unused.\n  16334. Data_GUI_run_20250823_124310.m (line 3568): Value assigned to variable might be unused.\n  16335. Data_GUI_run_20250823_124310.m (line 3755): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  16336. Data_GUI_run_20250823_124310.m (line 3885): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16337. Data_GUI_run_20250823_124310.m (line 3885): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16338. Data_GUI_run_20250823_124310.m (line 4131): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16339. Data_GUI_run_20250823_124310.m (line 4131): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16340. Data_GUI_run_20250823_124310.m (line 4166): Function might be unused.\n  16341. Data_GUI_run_20250823_124310.m (line 4217): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16342. Data_GUI_run_20250823_124310.m (line 4299): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16343. Data_GUI_run_20250823_124310.m (line 4416): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16344. Data_GUI_run_20250823_124310.m (line 4486): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16345. Data_GUI_run_20250823_124310.m (line 4486): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16346. Data_GUI_run_20250823_124310.m (line 4839): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  16347. Data_GUI_run_20250823_124310.m (line 5130): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16348. Data_GUI_run_20250823_124310.m (line 5133): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16349. Data_GUI_run_20250823_124310.m (line 5133): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16350. Data_GUI_run_20250823_124310.m (line 5228): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16351. Data_GUI_run_20250823_124310.m (line 5378): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16352. Data_GUI_run_20250823_124310.m (line 5378): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16353. Data_GUI_run_20250823_124310.m (line 5410): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16354. Data_GUI_run_20250823_124310.m (line 5410): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16355. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_124310.m: Missing arguments validation block\n  16356. Data_GUI_run_20250823_125811.m (line 44): Function name 'Dataset_GUI' is known to MATLAB by its file name: 'Data_GUI_run_20250823_125811'.\n  16357. Data_GUI_run_20250823_125811.m (line 364): Function might be unused.\n  16358. Data_GUI_run_20250823_125811.m (line 455): Value assigned to variable might be unused.\n  16359. Data_GUI_run_20250823_125811.m (line 677): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16360. Data_GUI_run_20250823_125811.m (line 701): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16361. Data_GUI_run_20250823_125811.m (line 713): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16362. Data_GUI_run_20250823_125811.m (line 737): Value assigned to variable might be unused.\n  16363. Data_GUI_run_20250823_125811.m (line 989): Value assigned to variable might be unused.\n  16364. Data_GUI_run_20250823_125811.m (line 1010): Value assigned to variable might be unused.\n  16365. Data_GUI_run_20250823_125811.m (line 1184): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16366. Data_GUI_run_20250823_125811.m (line 1184): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16367. Data_GUI_run_20250823_125811.m (line 1217): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16368. Data_GUI_run_20250823_125811.m (line 1298): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16369. Data_GUI_run_20250823_125811.m (line 1538): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16370. Data_GUI_run_20250823_125811.m (line 1538): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16371. Data_GUI_run_20250823_125811.m (line 1544): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16372. Data_GUI_run_20250823_125811.m (line 1544): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16373. Data_GUI_run_20250823_125811.m (line 1555): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16374. Data_GUI_run_20250823_125811.m (line 1555): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16375. Data_GUI_run_20250823_125811.m (line 1571): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16376. Data_GUI_run_20250823_125811.m (line 1608): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16377. Data_GUI_run_20250823_125811.m (line 1608): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16378. Data_GUI_run_20250823_125811.m (line 1790): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16379. Data_GUI_run_20250823_125811.m (line 1790): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16380. Data_GUI_run_20250823_125811.m (line 1894): Value assigned to variable might be unused.\n  16381. Data_GUI_run_20250823_125811.m (line 2000): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16382. Data_GUI_run_20250823_125811.m (line 2000): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16383. Data_GUI_run_20250823_125811.m (line 2402): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16384. Data_GUI_run_20250823_125811.m (line 2403): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16385. Data_GUI_run_20250823_125811.m (line 2404): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16386. Data_GUI_run_20250823_125811.m (line 2405): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16387. Data_GUI_run_20250823_125811.m (line 2406): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16388. Data_GUI_run_20250823_125811.m (line 2667): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16389. Data_GUI_run_20250823_125811.m (line 2668): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16390. Data_GUI_run_20250823_125811.m (line 2669): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16391. Data_GUI_run_20250823_125811.m (line 2670): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16392. Data_GUI_run_20250823_125811.m (line 2671): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16393. Data_GUI_run_20250823_125811.m (line 2703): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16394. Data_GUI_run_20250823_125811.m (line 2704): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16395. Data_GUI_run_20250823_125811.m (line 2705): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16396. Data_GUI_run_20250823_125811.m (line 2738): Value assigned to variable might be unused.\n  16397. Data_GUI_run_20250823_125811.m (line 2763): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16398. Data_GUI_run_20250823_125811.m (line 2911): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16399. Data_GUI_run_20250823_125811.m (line 2911): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16400. Data_GUI_run_20250823_125811.m (line 2924): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16401. Data_GUI_run_20250823_125811.m (line 2924): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16402. Data_GUI_run_20250823_125811.m (line 2937): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16403. Data_GUI_run_20250823_125811.m (line 2949): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16404. Data_GUI_run_20250823_125811.m (line 2949): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16405. Data_GUI_run_20250823_125811.m (line 3005): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16406. Data_GUI_run_20250823_125811.m (line 3005): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16407. Data_GUI_run_20250823_125811.m (line 3056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16408. Data_GUI_run_20250823_125811.m (line 3056): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16409. Data_GUI_run_20250823_125811.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16410. Data_GUI_run_20250823_125811.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16411. Data_GUI_run_20250823_125811.m (line 3133): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16412. Data_GUI_run_20250823_125811.m (line 3133): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16413. Data_GUI_run_20250823_125811.m (line 3155): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16414. Data_GUI_run_20250823_125811.m (line 3155): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16415. Data_GUI_run_20250823_125811.m (line 3176): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16416. Data_GUI_run_20250823_125811.m (line 3176): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16417. Data_GUI_run_20250823_125811.m (line 3201): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16418. Data_GUI_run_20250823_125811.m (line 3201): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16419. Data_GUI_run_20250823_125811.m (line 3226): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16420. Data_GUI_run_20250823_125811.m (line 3226): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16421. Data_GUI_run_20250823_125811.m (line 3241): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16422. Data_GUI_run_20250823_125811.m (line 3253): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16423. Data_GUI_run_20250823_125811.m (line 3253): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16424. Data_GUI_run_20250823_125811.m (line 3259): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16425. Data_GUI_run_20250823_125811.m (line 3259): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16426. Data_GUI_run_20250823_125811.m (line 3272): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16427. Data_GUI_run_20250823_125811.m (line 3273): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16428. Data_GUI_run_20250823_125811.m (line 3274): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16429. Data_GUI_run_20250823_125811.m (line 3285): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16430. Data_GUI_run_20250823_125811.m (line 3286): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16431. Data_GUI_run_20250823_125811.m (line 3291): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16432. Data_GUI_run_20250823_125811.m (line 3292): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16433. Data_GUI_run_20250823_125811.m (line 3332): Value assigned to variable might be unused.\n  16434. Data_GUI_run_20250823_125811.m (line 3568): Value assigned to variable might be unused.\n  16435. Data_GUI_run_20250823_125811.m (line 3755): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  16436. Data_GUI_run_20250823_125811.m (line 3936): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16437. Data_GUI_run_20250823_125811.m (line 3936): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16438. Data_GUI_run_20250823_125811.m (line 4182): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16439. Data_GUI_run_20250823_125811.m (line 4182): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16440. Data_GUI_run_20250823_125811.m (line 4217): Function might be unused.\n  16441. Data_GUI_run_20250823_125811.m (line 4268): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16442. Data_GUI_run_20250823_125811.m (line 4350): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16443. Data_GUI_run_20250823_125811.m (line 4467): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16444. Data_GUI_run_20250823_125811.m (line 4537): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16445. Data_GUI_run_20250823_125811.m (line 4537): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16446. Data_GUI_run_20250823_125811.m (line 4890): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  16447. Data_GUI_run_20250823_125811.m (line 5181): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16448. Data_GUI_run_20250823_125811.m (line 5184): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16449. Data_GUI_run_20250823_125811.m (line 5184): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16450. Data_GUI_run_20250823_125811.m (line 5279): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16451. Data_GUI_run_20250823_125811.m (line 5429): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16452. Data_GUI_run_20250823_125811.m (line 5429): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16453. Data_GUI_run_20250823_125811.m (line 5461): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16454. Data_GUI_run_20250823_125811.m (line 5461): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16455. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_125811.m: Missing arguments validation block\n  16456. Data_GUI_run_20250823_200636.m (line 44): Function name 'Dataset_GUI' is known to MATLAB by its file name: 'Data_GUI_run_20250823_200636'.\n  16457. Data_GUI_run_20250823_200636.m (line 356): Function might be unused.\n  16458. Data_GUI_run_20250823_200636.m (line 447): Value assigned to variable might be unused.\n  16459. Data_GUI_run_20250823_200636.m (line 669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16460. Data_GUI_run_20250823_200636.m (line 693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16461. Data_GUI_run_20250823_200636.m (line 705): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16462. Data_GUI_run_20250823_200636.m (line 729): Value assigned to variable might be unused.\n  16463. Data_GUI_run_20250823_200636.m (line 981): Value assigned to variable might be unused.\n  16464. Data_GUI_run_20250823_200636.m (line 1002): Value assigned to variable might be unused.\n  16465. Data_GUI_run_20250823_200636.m (line 1176): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16466. Data_GUI_run_20250823_200636.m (line 1176): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16467. Data_GUI_run_20250823_200636.m (line 1209): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16468. Data_GUI_run_20250823_200636.m (line 1290): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16469. Data_GUI_run_20250823_200636.m (line 1530): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16470. Data_GUI_run_20250823_200636.m (line 1530): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16471. Data_GUI_run_20250823_200636.m (line 1536): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16472. Data_GUI_run_20250823_200636.m (line 1536): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16473. Data_GUI_run_20250823_200636.m (line 1547): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16474. Data_GUI_run_20250823_200636.m (line 1547): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16475. Data_GUI_run_20250823_200636.m (line 1563): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16476. Data_GUI_run_20250823_200636.m (line 1600): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16477. Data_GUI_run_20250823_200636.m (line 1600): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16478. Data_GUI_run_20250823_200636.m (line 1760): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16479. Data_GUI_run_20250823_200636.m (line 1760): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16480. Data_GUI_run_20250823_200636.m (line 1864): Value assigned to variable might be unused.\n  16481. Data_GUI_run_20250823_200636.m (line 1970): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16482. Data_GUI_run_20250823_200636.m (line 1970): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16483. Data_GUI_run_20250823_200636.m (line 2372): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16484. Data_GUI_run_20250823_200636.m (line 2373): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16485. Data_GUI_run_20250823_200636.m (line 2374): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16486. Data_GUI_run_20250823_200636.m (line 2375): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16487. Data_GUI_run_20250823_200636.m (line 2376): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16488. Data_GUI_run_20250823_200636.m (line 2637): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16489. Data_GUI_run_20250823_200636.m (line 2638): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16490. Data_GUI_run_20250823_200636.m (line 2639): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16491. Data_GUI_run_20250823_200636.m (line 2640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16492. Data_GUI_run_20250823_200636.m (line 2641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16493. Data_GUI_run_20250823_200636.m (line 2673): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16494. Data_GUI_run_20250823_200636.m (line 2674): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16495. Data_GUI_run_20250823_200636.m (line 2675): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16496. Data_GUI_run_20250823_200636.m (line 2708): Value assigned to variable might be unused.\n  16497. Data_GUI_run_20250823_200636.m (line 2733): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16498. Data_GUI_run_20250823_200636.m (line 2881): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16499. Data_GUI_run_20250823_200636.m (line 2881): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16500. Data_GUI_run_20250823_200636.m (line 2894): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16501. Data_GUI_run_20250823_200636.m (line 2894): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16502. Data_GUI_run_20250823_200636.m (line 2907): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16503. Data_GUI_run_20250823_200636.m (line 2919): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16504. Data_GUI_run_20250823_200636.m (line 2919): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16505. Data_GUI_run_20250823_200636.m (line 2975): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16506. Data_GUI_run_20250823_200636.m (line 2975): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16507. Data_GUI_run_20250823_200636.m (line 3026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16508. Data_GUI_run_20250823_200636.m (line 3026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16509. Data_GUI_run_20250823_200636.m (line 3073): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16510. Data_GUI_run_20250823_200636.m (line 3073): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16511. Data_GUI_run_20250823_200636.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16512. Data_GUI_run_20250823_200636.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16513. Data_GUI_run_20250823_200636.m (line 3125): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16514. Data_GUI_run_20250823_200636.m (line 3125): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16515. Data_GUI_run_20250823_200636.m (line 3146): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16516. Data_GUI_run_20250823_200636.m (line 3146): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16517. Data_GUI_run_20250823_200636.m (line 3171): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16518. Data_GUI_run_20250823_200636.m (line 3171): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16519. Data_GUI_run_20250823_200636.m (line 3196): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16520. Data_GUI_run_20250823_200636.m (line 3196): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16521. Data_GUI_run_20250823_200636.m (line 3211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16522. Data_GUI_run_20250823_200636.m (line 3223): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16523. Data_GUI_run_20250823_200636.m (line 3223): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16524. Data_GUI_run_20250823_200636.m (line 3229): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16525. Data_GUI_run_20250823_200636.m (line 3229): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16526. Data_GUI_run_20250823_200636.m (line 3242): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16527. Data_GUI_run_20250823_200636.m (line 3243): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16528. Data_GUI_run_20250823_200636.m (line 3244): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16529. Data_GUI_run_20250823_200636.m (line 3255): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16530. Data_GUI_run_20250823_200636.m (line 3256): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16531. Data_GUI_run_20250823_200636.m (line 3261): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16532. Data_GUI_run_20250823_200636.m (line 3262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16533. Data_GUI_run_20250823_200636.m (line 3302): Value assigned to variable might be unused.\n  16534. Data_GUI_run_20250823_200636.m (line 3538): Value assigned to variable might be unused.\n  16535. Data_GUI_run_20250823_200636.m (line 3725): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  16536. Data_GUI_run_20250823_200636.m (line 3855): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16537. Data_GUI_run_20250823_200636.m (line 3855): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16538. Data_GUI_run_20250823_200636.m (line 4088): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16539. Data_GUI_run_20250823_200636.m (line 4088): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16540. Data_GUI_run_20250823_200636.m (line 4123): Function might be unused.\n  16541. Data_GUI_run_20250823_200636.m (line 4174): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16542. Data_GUI_run_20250823_200636.m (line 4256): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16543. Data_GUI_run_20250823_200636.m (line 4373): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16544. Data_GUI_run_20250823_200636.m (line 4443): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16545. Data_GUI_run_20250823_200636.m (line 4443): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16546. Data_GUI_run_20250823_200636.m (line 4833): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16547. Data_GUI_run_20250823_200636.m (line 4836): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16548. Data_GUI_run_20250823_200636.m (line 4836): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16549. Data_GUI_run_20250823_200636.m (line 4931): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16550. Data_GUI_run_20250823_200636.m (line 5081): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16551. Data_GUI_run_20250823_200636.m (line 5081): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16552. Data_GUI_run_20250823_200636.m (line 5113): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16553. Data_GUI_run_20250823_200636.m (line 5113): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16554. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_200636.m: Missing arguments validation block\n  16555. Data_GUI_run_20250823_200821.m (line 44): Function name 'Dataset_GUI' is known to MATLAB by its file name: 'Data_GUI_run_20250823_200821'.\n  16556. Data_GUI_run_20250823_200821.m (line 356): Function might be unused.\n  16557. Data_GUI_run_20250823_200821.m (line 447): Value assigned to variable might be unused.\n  16558. Data_GUI_run_20250823_200821.m (line 669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16559. Data_GUI_run_20250823_200821.m (line 693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16560. Data_GUI_run_20250823_200821.m (line 705): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16561. Data_GUI_run_20250823_200821.m (line 729): Value assigned to variable might be unused.\n  16562. Data_GUI_run_20250823_200821.m (line 981): Value assigned to variable might be unused.\n  16563. Data_GUI_run_20250823_200821.m (line 1002): Value assigned to variable might be unused.\n  16564. Data_GUI_run_20250823_200821.m (line 1176): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16565. Data_GUI_run_20250823_200821.m (line 1176): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16566. Data_GUI_run_20250823_200821.m (line 1209): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16567. Data_GUI_run_20250823_200821.m (line 1290): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16568. Data_GUI_run_20250823_200821.m (line 1530): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16569. Data_GUI_run_20250823_200821.m (line 1530): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16570. Data_GUI_run_20250823_200821.m (line 1536): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16571. Data_GUI_run_20250823_200821.m (line 1536): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16572. Data_GUI_run_20250823_200821.m (line 1547): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16573. Data_GUI_run_20250823_200821.m (line 1547): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16574. Data_GUI_run_20250823_200821.m (line 1563): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16575. Data_GUI_run_20250823_200821.m (line 1600): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16576. Data_GUI_run_20250823_200821.m (line 1600): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16577. Data_GUI_run_20250823_200821.m (line 1760): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16578. Data_GUI_run_20250823_200821.m (line 1760): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16579. Data_GUI_run_20250823_200821.m (line 1864): Value assigned to variable might be unused.\n  16580. Data_GUI_run_20250823_200821.m (line 1970): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16581. Data_GUI_run_20250823_200821.m (line 1970): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16582. Data_GUI_run_20250823_200821.m (line 2372): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16583. Data_GUI_run_20250823_200821.m (line 2373): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16584. Data_GUI_run_20250823_200821.m (line 2374): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16585. Data_GUI_run_20250823_200821.m (line 2375): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16586. Data_GUI_run_20250823_200821.m (line 2376): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16587. Data_GUI_run_20250823_200821.m (line 2637): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16588. Data_GUI_run_20250823_200821.m (line 2638): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16589. Data_GUI_run_20250823_200821.m (line 2639): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16590. Data_GUI_run_20250823_200821.m (line 2640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16591. Data_GUI_run_20250823_200821.m (line 2641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16592. Data_GUI_run_20250823_200821.m (line 2673): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16593. Data_GUI_run_20250823_200821.m (line 2674): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16594. Data_GUI_run_20250823_200821.m (line 2675): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16595. Data_GUI_run_20250823_200821.m (line 2708): Value assigned to variable might be unused.\n  16596. Data_GUI_run_20250823_200821.m (line 2733): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16597. Data_GUI_run_20250823_200821.m (line 2881): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16598. Data_GUI_run_20250823_200821.m (line 2881): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16599. Data_GUI_run_20250823_200821.m (line 2894): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16600. Data_GUI_run_20250823_200821.m (line 2894): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16601. Data_GUI_run_20250823_200821.m (line 2907): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16602. Data_GUI_run_20250823_200821.m (line 2919): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16603. Data_GUI_run_20250823_200821.m (line 2919): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16604. Data_GUI_run_20250823_200821.m (line 2975): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16605. Data_GUI_run_20250823_200821.m (line 2975): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16606. Data_GUI_run_20250823_200821.m (line 3026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16607. Data_GUI_run_20250823_200821.m (line 3026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16608. Data_GUI_run_20250823_200821.m (line 3073): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16609. Data_GUI_run_20250823_200821.m (line 3073): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16610. Data_GUI_run_20250823_200821.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16611. Data_GUI_run_20250823_200821.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16612. Data_GUI_run_20250823_200821.m (line 3125): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16613. Data_GUI_run_20250823_200821.m (line 3125): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16614. Data_GUI_run_20250823_200821.m (line 3146): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16615. Data_GUI_run_20250823_200821.m (line 3146): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16616. Data_GUI_run_20250823_200821.m (line 3171): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16617. Data_GUI_run_20250823_200821.m (line 3171): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16618. Data_GUI_run_20250823_200821.m (line 3196): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16619. Data_GUI_run_20250823_200821.m (line 3196): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16620. Data_GUI_run_20250823_200821.m (line 3211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16621. Data_GUI_run_20250823_200821.m (line 3223): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16622. Data_GUI_run_20250823_200821.m (line 3223): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16623. Data_GUI_run_20250823_200821.m (line 3229): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16624. Data_GUI_run_20250823_200821.m (line 3229): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16625. Data_GUI_run_20250823_200821.m (line 3242): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16626. Data_GUI_run_20250823_200821.m (line 3243): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16627. Data_GUI_run_20250823_200821.m (line 3244): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16628. Data_GUI_run_20250823_200821.m (line 3255): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16629. Data_GUI_run_20250823_200821.m (line 3256): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16630. Data_GUI_run_20250823_200821.m (line 3261): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16631. Data_GUI_run_20250823_200821.m (line 3262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16632. Data_GUI_run_20250823_200821.m (line 3302): Value assigned to variable might be unused.\n  16633. Data_GUI_run_20250823_200821.m (line 3538): Value assigned to variable might be unused.\n  16634. Data_GUI_run_20250823_200821.m (line 3725): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  16635. Data_GUI_run_20250823_200821.m (line 3855): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16636. Data_GUI_run_20250823_200821.m (line 3855): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16637. Data_GUI_run_20250823_200821.m (line 4088): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16638. Data_GUI_run_20250823_200821.m (line 4088): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16639. Data_GUI_run_20250823_200821.m (line 4123): Function might be unused.\n  16640. Data_GUI_run_20250823_200821.m (line 4174): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16641. Data_GUI_run_20250823_200821.m (line 4256): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16642. Data_GUI_run_20250823_200821.m (line 4373): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16643. Data_GUI_run_20250823_200821.m (line 4443): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16644. Data_GUI_run_20250823_200821.m (line 4443): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16645. Data_GUI_run_20250823_200821.m (line 4833): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16646. Data_GUI_run_20250823_200821.m (line 4836): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16647. Data_GUI_run_20250823_200821.m (line 4836): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16648. Data_GUI_run_20250823_200821.m (line 4931): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16649. Data_GUI_run_20250823_200821.m (line 5081): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16650. Data_GUI_run_20250823_200821.m (line 5081): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16651. Data_GUI_run_20250823_200821.m (line 5113): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16652. Data_GUI_run_20250823_200821.m (line 5113): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16653. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_200821.m: Missing arguments validation block\n  16654. Data_GUI_run_20250823_201739.m (line 44): Function name 'Dataset_GUI' is known to MATLAB by its file name: 'Data_GUI_run_20250823_201739'.\n  16655. Data_GUI_run_20250823_201739.m (line 356): Function might be unused.\n  16656. Data_GUI_run_20250823_201739.m (line 447): Value assigned to variable might be unused.\n  16657. Data_GUI_run_20250823_201739.m (line 669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16658. Data_GUI_run_20250823_201739.m (line 693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16659. Data_GUI_run_20250823_201739.m (line 705): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16660. Data_GUI_run_20250823_201739.m (line 729): Value assigned to variable might be unused.\n  16661. Data_GUI_run_20250823_201739.m (line 981): Value assigned to variable might be unused.\n  16662. Data_GUI_run_20250823_201739.m (line 1002): Value assigned to variable might be unused.\n  16663. Data_GUI_run_20250823_201739.m (line 1176): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16664. Data_GUI_run_20250823_201739.m (line 1176): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16665. Data_GUI_run_20250823_201739.m (line 1209): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16666. Data_GUI_run_20250823_201739.m (line 1290): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16667. Data_GUI_run_20250823_201739.m (line 1530): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16668. Data_GUI_run_20250823_201739.m (line 1530): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16669. Data_GUI_run_20250823_201739.m (line 1536): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16670. Data_GUI_run_20250823_201739.m (line 1536): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16671. Data_GUI_run_20250823_201739.m (line 1547): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16672. Data_GUI_run_20250823_201739.m (line 1547): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16673. Data_GUI_run_20250823_201739.m (line 1563): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16674. Data_GUI_run_20250823_201739.m (line 1600): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16675. Data_GUI_run_20250823_201739.m (line 1600): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16676. Data_GUI_run_20250823_201739.m (line 1760): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16677. Data_GUI_run_20250823_201739.m (line 1760): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16678. Data_GUI_run_20250823_201739.m (line 1864): Value assigned to variable might be unused.\n  16679. Data_GUI_run_20250823_201739.m (line 1970): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16680. Data_GUI_run_20250823_201739.m (line 1970): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16681. Data_GUI_run_20250823_201739.m (line 2372): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16682. Data_GUI_run_20250823_201739.m (line 2373): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16683. Data_GUI_run_20250823_201739.m (line 2374): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16684. Data_GUI_run_20250823_201739.m (line 2375): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16685. Data_GUI_run_20250823_201739.m (line 2376): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16686. Data_GUI_run_20250823_201739.m (line 2637): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16687. Data_GUI_run_20250823_201739.m (line 2638): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16688. Data_GUI_run_20250823_201739.m (line 2639): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16689. Data_GUI_run_20250823_201739.m (line 2640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16690. Data_GUI_run_20250823_201739.m (line 2641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16691. Data_GUI_run_20250823_201739.m (line 2673): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16692. Data_GUI_run_20250823_201739.m (line 2674): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16693. Data_GUI_run_20250823_201739.m (line 2675): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16694. Data_GUI_run_20250823_201739.m (line 2708): Value assigned to variable might be unused.\n  16695. Data_GUI_run_20250823_201739.m (line 2733): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16696. Data_GUI_run_20250823_201739.m (line 2881): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16697. Data_GUI_run_20250823_201739.m (line 2881): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16698. Data_GUI_run_20250823_201739.m (line 2894): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16699. Data_GUI_run_20250823_201739.m (line 2894): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16700. Data_GUI_run_20250823_201739.m (line 2907): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16701. Data_GUI_run_20250823_201739.m (line 2919): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16702. Data_GUI_run_20250823_201739.m (line 2919): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16703. Data_GUI_run_20250823_201739.m (line 2975): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16704. Data_GUI_run_20250823_201739.m (line 2975): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16705. Data_GUI_run_20250823_201739.m (line 3026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16706. Data_GUI_run_20250823_201739.m (line 3026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16707. Data_GUI_run_20250823_201739.m (line 3073): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16708. Data_GUI_run_20250823_201739.m (line 3073): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16709. Data_GUI_run_20250823_201739.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16710. Data_GUI_run_20250823_201739.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16711. Data_GUI_run_20250823_201739.m (line 3125): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16712. Data_GUI_run_20250823_201739.m (line 3125): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16713. Data_GUI_run_20250823_201739.m (line 3146): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16714. Data_GUI_run_20250823_201739.m (line 3146): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16715. Data_GUI_run_20250823_201739.m (line 3171): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16716. Data_GUI_run_20250823_201739.m (line 3171): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16717. Data_GUI_run_20250823_201739.m (line 3196): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16718. Data_GUI_run_20250823_201739.m (line 3196): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16719. Data_GUI_run_20250823_201739.m (line 3211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16720. Data_GUI_run_20250823_201739.m (line 3223): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16721. Data_GUI_run_20250823_201739.m (line 3223): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16722. Data_GUI_run_20250823_201739.m (line 3229): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16723. Data_GUI_run_20250823_201739.m (line 3229): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16724. Data_GUI_run_20250823_201739.m (line 3242): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16725. Data_GUI_run_20250823_201739.m (line 3243): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16726. Data_GUI_run_20250823_201739.m (line 3244): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16727. Data_GUI_run_20250823_201739.m (line 3255): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16728. Data_GUI_run_20250823_201739.m (line 3256): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16729. Data_GUI_run_20250823_201739.m (line 3261): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16730. Data_GUI_run_20250823_201739.m (line 3262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16731. Data_GUI_run_20250823_201739.m (line 3302): Value assigned to variable might be unused.\n  16732. Data_GUI_run_20250823_201739.m (line 3538): Value assigned to variable might be unused.\n  16733. Data_GUI_run_20250823_201739.m (line 3723): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  16734. Data_GUI_run_20250823_201739.m (line 3853): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16735. Data_GUI_run_20250823_201739.m (line 3853): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16736. Data_GUI_run_20250823_201739.m (line 4086): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16737. Data_GUI_run_20250823_201739.m (line 4086): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16738. Data_GUI_run_20250823_201739.m (line 4121): Function might be unused.\n  16739. Data_GUI_run_20250823_201739.m (line 4172): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16740. Data_GUI_run_20250823_201739.m (line 4254): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16741. Data_GUI_run_20250823_201739.m (line 4371): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16742. Data_GUI_run_20250823_201739.m (line 4441): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16743. Data_GUI_run_20250823_201739.m (line 4441): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16744. Data_GUI_run_20250823_201739.m (line 4831): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16745. Data_GUI_run_20250823_201739.m (line 4834): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16746. Data_GUI_run_20250823_201739.m (line 4834): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16747. Data_GUI_run_20250823_201739.m (line 4929): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16748. Data_GUI_run_20250823_201739.m (line 5079): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16749. Data_GUI_run_20250823_201739.m (line 5079): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16750. Data_GUI_run_20250823_201739.m (line 5111): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16751. Data_GUI_run_20250823_201739.m (line 5111): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16752. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_201739.m: Missing arguments validation block\n  16753. Data_GUI_run_20250823_202648.m (line 44): Function name 'Dataset_GUI' is known to MATLAB by its file name: 'Data_GUI_run_20250823_202648'.\n  16754. Data_GUI_run_20250823_202648.m (line 356): Function might be unused.\n  16755. Data_GUI_run_20250823_202648.m (line 447): Value assigned to variable might be unused.\n  16756. Data_GUI_run_20250823_202648.m (line 669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16757. Data_GUI_run_20250823_202648.m (line 693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16758. Data_GUI_run_20250823_202648.m (line 705): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16759. Data_GUI_run_20250823_202648.m (line 729): Value assigned to variable might be unused.\n  16760. Data_GUI_run_20250823_202648.m (line 981): Value assigned to variable might be unused.\n  16761. Data_GUI_run_20250823_202648.m (line 1002): Value assigned to variable might be unused.\n  16762. Data_GUI_run_20250823_202648.m (line 1176): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16763. Data_GUI_run_20250823_202648.m (line 1176): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16764. Data_GUI_run_20250823_202648.m (line 1209): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16765. Data_GUI_run_20250823_202648.m (line 1290): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16766. Data_GUI_run_20250823_202648.m (line 1530): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16767. Data_GUI_run_20250823_202648.m (line 1530): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16768. Data_GUI_run_20250823_202648.m (line 1536): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16769. Data_GUI_run_20250823_202648.m (line 1536): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16770. Data_GUI_run_20250823_202648.m (line 1547): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16771. Data_GUI_run_20250823_202648.m (line 1547): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16772. Data_GUI_run_20250823_202648.m (line 1563): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16773. Data_GUI_run_20250823_202648.m (line 1600): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16774. Data_GUI_run_20250823_202648.m (line 1600): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16775. Data_GUI_run_20250823_202648.m (line 1760): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16776. Data_GUI_run_20250823_202648.m (line 1760): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16777. Data_GUI_run_20250823_202648.m (line 1864): Value assigned to variable might be unused.\n  16778. Data_GUI_run_20250823_202648.m (line 1970): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16779. Data_GUI_run_20250823_202648.m (line 1970): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16780. Data_GUI_run_20250823_202648.m (line 2372): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16781. Data_GUI_run_20250823_202648.m (line 2373): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16782. Data_GUI_run_20250823_202648.m (line 2374): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16783. Data_GUI_run_20250823_202648.m (line 2375): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16784. Data_GUI_run_20250823_202648.m (line 2376): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16785. Data_GUI_run_20250823_202648.m (line 2637): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16786. Data_GUI_run_20250823_202648.m (line 2638): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16787. Data_GUI_run_20250823_202648.m (line 2639): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16788. Data_GUI_run_20250823_202648.m (line 2640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16789. Data_GUI_run_20250823_202648.m (line 2641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16790. Data_GUI_run_20250823_202648.m (line 2673): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16791. Data_GUI_run_20250823_202648.m (line 2674): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16792. Data_GUI_run_20250823_202648.m (line 2675): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16793. Data_GUI_run_20250823_202648.m (line 2708): Value assigned to variable might be unused.\n  16794. Data_GUI_run_20250823_202648.m (line 2733): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16795. Data_GUI_run_20250823_202648.m (line 2881): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16796. Data_GUI_run_20250823_202648.m (line 2881): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16797. Data_GUI_run_20250823_202648.m (line 2894): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16798. Data_GUI_run_20250823_202648.m (line 2894): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16799. Data_GUI_run_20250823_202648.m (line 2907): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16800. Data_GUI_run_20250823_202648.m (line 2919): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16801. Data_GUI_run_20250823_202648.m (line 2919): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16802. Data_GUI_run_20250823_202648.m (line 2975): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16803. Data_GUI_run_20250823_202648.m (line 2975): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16804. Data_GUI_run_20250823_202648.m (line 3026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16805. Data_GUI_run_20250823_202648.m (line 3026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16806. Data_GUI_run_20250823_202648.m (line 3073): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16807. Data_GUI_run_20250823_202648.m (line 3073): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16808. Data_GUI_run_20250823_202648.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16809. Data_GUI_run_20250823_202648.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16810. Data_GUI_run_20250823_202648.m (line 3125): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16811. Data_GUI_run_20250823_202648.m (line 3125): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16812. Data_GUI_run_20250823_202648.m (line 3146): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16813. Data_GUI_run_20250823_202648.m (line 3146): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16814. Data_GUI_run_20250823_202648.m (line 3171): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16815. Data_GUI_run_20250823_202648.m (line 3171): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16816. Data_GUI_run_20250823_202648.m (line 3196): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16817. Data_GUI_run_20250823_202648.m (line 3196): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16818. Data_GUI_run_20250823_202648.m (line 3211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16819. Data_GUI_run_20250823_202648.m (line 3223): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16820. Data_GUI_run_20250823_202648.m (line 3223): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16821. Data_GUI_run_20250823_202648.m (line 3229): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16822. Data_GUI_run_20250823_202648.m (line 3229): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16823. Data_GUI_run_20250823_202648.m (line 3242): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16824. Data_GUI_run_20250823_202648.m (line 3243): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16825. Data_GUI_run_20250823_202648.m (line 3244): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16826. Data_GUI_run_20250823_202648.m (line 3255): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16827. Data_GUI_run_20250823_202648.m (line 3256): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16828. Data_GUI_run_20250823_202648.m (line 3261): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16829. Data_GUI_run_20250823_202648.m (line 3262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16830. Data_GUI_run_20250823_202648.m (line 3302): Value assigned to variable might be unused.\n  16831. Data_GUI_run_20250823_202648.m (line 3538): Value assigned to variable might be unused.\n  16832. Data_GUI_run_20250823_202648.m (line 3724): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  16833. Data_GUI_run_20250823_202648.m (line 3854): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16834. Data_GUI_run_20250823_202648.m (line 3854): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16835. Data_GUI_run_20250823_202648.m (line 4087): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16836. Data_GUI_run_20250823_202648.m (line 4087): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16837. Data_GUI_run_20250823_202648.m (line 4122): Function might be unused.\n  16838. Data_GUI_run_20250823_202648.m (line 4173): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16839. Data_GUI_run_20250823_202648.m (line 4255): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16840. Data_GUI_run_20250823_202648.m (line 4372): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16841. Data_GUI_run_20250823_202648.m (line 4442): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16842. Data_GUI_run_20250823_202648.m (line 4442): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16843. Data_GUI_run_20250823_202648.m (line 4832): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16844. Data_GUI_run_20250823_202648.m (line 4835): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16845. Data_GUI_run_20250823_202648.m (line 4835): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16846. Data_GUI_run_20250823_202648.m (line 4930): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16847. Data_GUI_run_20250823_202648.m (line 5080): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16848. Data_GUI_run_20250823_202648.m (line 5080): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16849. Data_GUI_run_20250823_202648.m (line 5112): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16850. Data_GUI_run_20250823_202648.m (line 5112): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16851. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_202648.m: Missing arguments validation block\n  16852. Data_GUI_run_20250823_204502.m (line 44): Function name 'Dataset_GUI' is known to MATLAB by its file name: 'Data_GUI_run_20250823_204502'.\n  16853. Data_GUI_run_20250823_204502.m (line 359): Function might be unused.\n  16854. Data_GUI_run_20250823_204502.m (line 450): Value assigned to variable might be unused.\n  16855. Data_GUI_run_20250823_204502.m (line 672): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16856. Data_GUI_run_20250823_204502.m (line 696): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16857. Data_GUI_run_20250823_204502.m (line 708): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16858. Data_GUI_run_20250823_204502.m (line 732): Value assigned to variable might be unused.\n  16859. Data_GUI_run_20250823_204502.m (line 984): Value assigned to variable might be unused.\n  16860. Data_GUI_run_20250823_204502.m (line 1005): Value assigned to variable might be unused.\n  16861. Data_GUI_run_20250823_204502.m (line 1179): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16862. Data_GUI_run_20250823_204502.m (line 1179): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16863. Data_GUI_run_20250823_204502.m (line 1212): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16864. Data_GUI_run_20250823_204502.m (line 1293): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16865. Data_GUI_run_20250823_204502.m (line 1533): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16866. Data_GUI_run_20250823_204502.m (line 1533): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16867. Data_GUI_run_20250823_204502.m (line 1539): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16868. Data_GUI_run_20250823_204502.m (line 1539): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16869. Data_GUI_run_20250823_204502.m (line 1550): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16870. Data_GUI_run_20250823_204502.m (line 1550): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16871. Data_GUI_run_20250823_204502.m (line 1566): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16872. Data_GUI_run_20250823_204502.m (line 1603): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16873. Data_GUI_run_20250823_204502.m (line 1603): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16874. Data_GUI_run_20250823_204502.m (line 1763): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16875. Data_GUI_run_20250823_204502.m (line 1763): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16876. Data_GUI_run_20250823_204502.m (line 1867): Value assigned to variable might be unused.\n  16877. Data_GUI_run_20250823_204502.m (line 1973): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16878. Data_GUI_run_20250823_204502.m (line 1973): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16879. Data_GUI_run_20250823_204502.m (line 2375): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16880. Data_GUI_run_20250823_204502.m (line 2376): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16881. Data_GUI_run_20250823_204502.m (line 2377): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16882. Data_GUI_run_20250823_204502.m (line 2378): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16883. Data_GUI_run_20250823_204502.m (line 2379): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16884. Data_GUI_run_20250823_204502.m (line 2640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16885. Data_GUI_run_20250823_204502.m (line 2641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16886. Data_GUI_run_20250823_204502.m (line 2642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16887. Data_GUI_run_20250823_204502.m (line 2643): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16888. Data_GUI_run_20250823_204502.m (line 2644): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16889. Data_GUI_run_20250823_204502.m (line 2676): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16890. Data_GUI_run_20250823_204502.m (line 2677): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16891. Data_GUI_run_20250823_204502.m (line 2678): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16892. Data_GUI_run_20250823_204502.m (line 2711): Value assigned to variable might be unused.\n  16893. Data_GUI_run_20250823_204502.m (line 2736): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16894. Data_GUI_run_20250823_204502.m (line 2884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16895. Data_GUI_run_20250823_204502.m (line 2884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16896. Data_GUI_run_20250823_204502.m (line 2897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16897. Data_GUI_run_20250823_204502.m (line 2897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16898. Data_GUI_run_20250823_204502.m (line 2910): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16899. Data_GUI_run_20250823_204502.m (line 2922): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16900. Data_GUI_run_20250823_204502.m (line 2922): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16901. Data_GUI_run_20250823_204502.m (line 2978): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16902. Data_GUI_run_20250823_204502.m (line 2978): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16903. Data_GUI_run_20250823_204502.m (line 3029): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16904. Data_GUI_run_20250823_204502.m (line 3029): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16905. Data_GUI_run_20250823_204502.m (line 3076): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16906. Data_GUI_run_20250823_204502.m (line 3076): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16907. Data_GUI_run_20250823_204502.m (line 3106): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16908. Data_GUI_run_20250823_204502.m (line 3106): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16909. Data_GUI_run_20250823_204502.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16910. Data_GUI_run_20250823_204502.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16911. Data_GUI_run_20250823_204502.m (line 3149): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16912. Data_GUI_run_20250823_204502.m (line 3149): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16913. Data_GUI_run_20250823_204502.m (line 3174): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16914. Data_GUI_run_20250823_204502.m (line 3174): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16915. Data_GUI_run_20250823_204502.m (line 3199): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16916. Data_GUI_run_20250823_204502.m (line 3199): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16917. Data_GUI_run_20250823_204502.m (line 3214): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16918. Data_GUI_run_20250823_204502.m (line 3226): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16919. Data_GUI_run_20250823_204502.m (line 3226): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16920. Data_GUI_run_20250823_204502.m (line 3232): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16921. Data_GUI_run_20250823_204502.m (line 3232): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16922. Data_GUI_run_20250823_204502.m (line 3245): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16923. Data_GUI_run_20250823_204502.m (line 3246): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16924. Data_GUI_run_20250823_204502.m (line 3247): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16925. Data_GUI_run_20250823_204502.m (line 3258): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16926. Data_GUI_run_20250823_204502.m (line 3259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16927. Data_GUI_run_20250823_204502.m (line 3264): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16928. Data_GUI_run_20250823_204502.m (line 3265): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16929. Data_GUI_run_20250823_204502.m (line 3305): Value assigned to variable might be unused.\n  16930. Data_GUI_run_20250823_204502.m (line 3541): Value assigned to variable might be unused.\n  16931. Data_GUI_run_20250823_204502.m (line 3727): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  16932. Data_GUI_run_20250823_204502.m (line 3857): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16933. Data_GUI_run_20250823_204502.m (line 3857): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16934. Data_GUI_run_20250823_204502.m (line 4090): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16935. Data_GUI_run_20250823_204502.m (line 4090): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16936. Data_GUI_run_20250823_204502.m (line 4125): Function might be unused.\n  16937. Data_GUI_run_20250823_204502.m (line 4176): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16938. Data_GUI_run_20250823_204502.m (line 4258): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16939. Data_GUI_run_20250823_204502.m (line 4375): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16940. Data_GUI_run_20250823_204502.m (line 4445): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16941. Data_GUI_run_20250823_204502.m (line 4445): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16942. Data_GUI_run_20250823_204502.m (line 4835): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16943. Data_GUI_run_20250823_204502.m (line 4838): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16944. Data_GUI_run_20250823_204502.m (line 4838): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16945. Data_GUI_run_20250823_204502.m (line 4933): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16946. Data_GUI_run_20250823_204502.m (line 5083): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16947. Data_GUI_run_20250823_204502.m (line 5083): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16948. Data_GUI_run_20250823_204502.m (line 5115): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16949. Data_GUI_run_20250823_204502.m (line 5115): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16950. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250823_204502.m: Missing arguments validation block\n  16951. Data_GUI_run_20250828_201315.m (line 44): Function name 'Dataset_GUI' is known to MATLAB by its file name: 'Data_GUI_run_20250828_201315'.\n  16952. Data_GUI_run_20250828_201315.m (line 356): Function might be unused.\n  16953. Data_GUI_run_20250828_201315.m (line 447): Value assigned to variable might be unused.\n  16954. Data_GUI_run_20250828_201315.m (line 669): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16955. Data_GUI_run_20250828_201315.m (line 693): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16956. Data_GUI_run_20250828_201315.m (line 705): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16957. Data_GUI_run_20250828_201315.m (line 729): Value assigned to variable might be unused.\n  16958. Data_GUI_run_20250828_201315.m (line 981): Value assigned to variable might be unused.\n  16959. Data_GUI_run_20250828_201315.m (line 1002): Value assigned to variable might be unused.\n  16960. Data_GUI_run_20250828_201315.m (line 1176): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16961. Data_GUI_run_20250828_201315.m (line 1176): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16962. Data_GUI_run_20250828_201315.m (line 1209): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16963. Data_GUI_run_20250828_201315.m (line 1290): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  16964. Data_GUI_run_20250828_201315.m (line 1530): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16965. Data_GUI_run_20250828_201315.m (line 1530): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16966. Data_GUI_run_20250828_201315.m (line 1536): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16967. Data_GUI_run_20250828_201315.m (line 1536): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16968. Data_GUI_run_20250828_201315.m (line 1547): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16969. Data_GUI_run_20250828_201315.m (line 1547): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16970. Data_GUI_run_20250828_201315.m (line 1563): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16971. Data_GUI_run_20250828_201315.m (line 1600): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16972. Data_GUI_run_20250828_201315.m (line 1600): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16973. Data_GUI_run_20250828_201315.m (line 1760): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16974. Data_GUI_run_20250828_201315.m (line 1760): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16975. Data_GUI_run_20250828_201315.m (line 1864): Value assigned to variable might be unused.\n  16976. Data_GUI_run_20250828_201315.m (line 1970): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  16977. Data_GUI_run_20250828_201315.m (line 1970): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  16978. Data_GUI_run_20250828_201315.m (line 2372): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16979. Data_GUI_run_20250828_201315.m (line 2373): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16980. Data_GUI_run_20250828_201315.m (line 2374): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16981. Data_GUI_run_20250828_201315.m (line 2375): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16982. Data_GUI_run_20250828_201315.m (line 2376): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16983. Data_GUI_run_20250828_201315.m (line 2637): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16984. Data_GUI_run_20250828_201315.m (line 2638): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16985. Data_GUI_run_20250828_201315.m (line 2639): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16986. Data_GUI_run_20250828_201315.m (line 2640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16987. Data_GUI_run_20250828_201315.m (line 2641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  16988. Data_GUI_run_20250828_201315.m (line 2673): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16989. Data_GUI_run_20250828_201315.m (line 2674): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16990. Data_GUI_run_20250828_201315.m (line 2675): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  16991. Data_GUI_run_20250828_201315.m (line 2708): Value assigned to variable might be unused.\n  16992. Data_GUI_run_20250828_201315.m (line 2733): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16993. Data_GUI_run_20250828_201315.m (line 2881): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16994. Data_GUI_run_20250828_201315.m (line 2881): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16995. Data_GUI_run_20250828_201315.m (line 2894): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16996. Data_GUI_run_20250828_201315.m (line 2894): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16997. Data_GUI_run_20250828_201315.m (line 2907): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16998. Data_GUI_run_20250828_201315.m (line 2919): Input argument might be unused. Consider replacing the argument with ~ instead.\n  16999. Data_GUI_run_20250828_201315.m (line 2919): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17000. Data_GUI_run_20250828_201315.m (line 2975): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17001. Data_GUI_run_20250828_201315.m (line 2975): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17002. Data_GUI_run_20250828_201315.m (line 3026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17003. Data_GUI_run_20250828_201315.m (line 3026): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17004. Data_GUI_run_20250828_201315.m (line 3073): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17005. Data_GUI_run_20250828_201315.m (line 3073): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17006. Data_GUI_run_20250828_201315.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17007. Data_GUI_run_20250828_201315.m (line 3103): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17008. Data_GUI_run_20250828_201315.m (line 3125): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17009. Data_GUI_run_20250828_201315.m (line 3125): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17010. Data_GUI_run_20250828_201315.m (line 3146): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17011. Data_GUI_run_20250828_201315.m (line 3146): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17012. Data_GUI_run_20250828_201315.m (line 3171): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17013. Data_GUI_run_20250828_201315.m (line 3171): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17014. Data_GUI_run_20250828_201315.m (line 3196): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17015. Data_GUI_run_20250828_201315.m (line 3196): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17016. Data_GUI_run_20250828_201315.m (line 3211): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17017. Data_GUI_run_20250828_201315.m (line 3223): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17018. Data_GUI_run_20250828_201315.m (line 3223): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17019. Data_GUI_run_20250828_201315.m (line 3229): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17020. Data_GUI_run_20250828_201315.m (line 3229): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17021. Data_GUI_run_20250828_201315.m (line 3242): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17022. Data_GUI_run_20250828_201315.m (line 3243): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17023. Data_GUI_run_20250828_201315.m (line 3244): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17024. Data_GUI_run_20250828_201315.m (line 3255): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17025. Data_GUI_run_20250828_201315.m (line 3256): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17026. Data_GUI_run_20250828_201315.m (line 3261): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17027. Data_GUI_run_20250828_201315.m (line 3262): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17028. Data_GUI_run_20250828_201315.m (line 3302): Value assigned to variable might be unused.\n  17029. Data_GUI_run_20250828_201315.m (line 3538): Value assigned to variable might be unused.\n  17030. Data_GUI_run_20250828_201315.m (line 3725): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  17031. Data_GUI_run_20250828_201315.m (line 3855): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17032. Data_GUI_run_20250828_201315.m (line 3855): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17033. Data_GUI_run_20250828_201315.m (line 4088): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17034. Data_GUI_run_20250828_201315.m (line 4088): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17035. Data_GUI_run_20250828_201315.m (line 4123): Function might be unused.\n  17036. Data_GUI_run_20250828_201315.m (line 4174): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17037. Data_GUI_run_20250828_201315.m (line 4256): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17038. Data_GUI_run_20250828_201315.m (line 4373): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17039. Data_GUI_run_20250828_201315.m (line 4443): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17040. Data_GUI_run_20250828_201315.m (line 4443): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17041. Data_GUI_run_20250828_201315.m (line 4796): Using ISEMPTY is usually faster than comparing LENGTH to 0.\n  17042. Data_GUI_run_20250828_201315.m (line 5087): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17043. Data_GUI_run_20250828_201315.m (line 5090): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17044. Data_GUI_run_20250828_201315.m (line 5090): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17045. Data_GUI_run_20250828_201315.m (line 5185): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17046. Data_GUI_run_20250828_201315.m (line 5335): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17047. Data_GUI_run_20250828_201315.m (line 5335): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17048. Data_GUI_run_20250828_201315.m (line 5367): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17049. Data_GUI_run_20250828_201315.m (line 5367): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17050. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250822\\Data_GUI_run_20250828_201315.m: Missing arguments validation block\n  17051. Data_GUI_run_20250827_073709.m (line 44): Function name 'Dataset_GUI' is known to MATLAB by its file name: 'Data_GUI_run_20250827_073709'.\n  17052. Data_GUI_run_20250827_073709.m (line 359): Function might be unused.\n  17053. Data_GUI_run_20250827_073709.m (line 450): Value assigned to variable might be unused.\n  17054. Data_GUI_run_20250827_073709.m (line 672): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17055. Data_GUI_run_20250827_073709.m (line 696): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17056. Data_GUI_run_20250827_073709.m (line 708): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17057. Data_GUI_run_20250827_073709.m (line 732): Value assigned to variable might be unused.\n  17058. Data_GUI_run_20250827_073709.m (line 984): Value assigned to variable might be unused.\n  17059. Data_GUI_run_20250827_073709.m (line 1005): Value assigned to variable might be unused.\n  17060. Data_GUI_run_20250827_073709.m (line 1179): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17061. Data_GUI_run_20250827_073709.m (line 1179): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17062. Data_GUI_run_20250827_073709.m (line 1212): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17063. Data_GUI_run_20250827_073709.m (line 1293): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17064. Data_GUI_run_20250827_073709.m (line 1533): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17065. Data_GUI_run_20250827_073709.m (line 1533): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17066. Data_GUI_run_20250827_073709.m (line 1539): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17067. Data_GUI_run_20250827_073709.m (line 1539): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17068. Data_GUI_run_20250827_073709.m (line 1550): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17069. Data_GUI_run_20250827_073709.m (line 1550): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17070. Data_GUI_run_20250827_073709.m (line 1566): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17071. Data_GUI_run_20250827_073709.m (line 1603): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17072. Data_GUI_run_20250827_073709.m (line 1603): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17073. Data_GUI_run_20250827_073709.m (line 1763): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17074. Data_GUI_run_20250827_073709.m (line 1763): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17075. Data_GUI_run_20250827_073709.m (line 1867): Value assigned to variable might be unused.\n  17076. Data_GUI_run_20250827_073709.m (line 1973): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17077. Data_GUI_run_20250827_073709.m (line 1973): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17078. Data_GUI_run_20250827_073709.m (line 2375): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17079. Data_GUI_run_20250827_073709.m (line 2376): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17080. Data_GUI_run_20250827_073709.m (line 2377): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17081. Data_GUI_run_20250827_073709.m (line 2378): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17082. Data_GUI_run_20250827_073709.m (line 2379): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17083. Data_GUI_run_20250827_073709.m (line 2640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17084. Data_GUI_run_20250827_073709.m (line 2641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17085. Data_GUI_run_20250827_073709.m (line 2642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17086. Data_GUI_run_20250827_073709.m (line 2643): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17087. Data_GUI_run_20250827_073709.m (line 2644): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17088. Data_GUI_run_20250827_073709.m (line 2676): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17089. Data_GUI_run_20250827_073709.m (line 2677): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17090. Data_GUI_run_20250827_073709.m (line 2678): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17091. Data_GUI_run_20250827_073709.m (line 2711): Value assigned to variable might be unused.\n  17092. Data_GUI_run_20250827_073709.m (line 2736): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17093. Data_GUI_run_20250827_073709.m (line 2884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17094. Data_GUI_run_20250827_073709.m (line 2884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17095. Data_GUI_run_20250827_073709.m (line 2897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17096. Data_GUI_run_20250827_073709.m (line 2897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17097. Data_GUI_run_20250827_073709.m (line 2910): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17098. Data_GUI_run_20250827_073709.m (line 2922): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17099. Data_GUI_run_20250827_073709.m (line 2922): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17100. Data_GUI_run_20250827_073709.m (line 2978): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17101. Data_GUI_run_20250827_073709.m (line 2978): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17102. Data_GUI_run_20250827_073709.m (line 3029): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17103. Data_GUI_run_20250827_073709.m (line 3029): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17104. Data_GUI_run_20250827_073709.m (line 3076): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17105. Data_GUI_run_20250827_073709.m (line 3076): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17106. Data_GUI_run_20250827_073709.m (line 3106): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17107. Data_GUI_run_20250827_073709.m (line 3106): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17108. Data_GUI_run_20250827_073709.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17109. Data_GUI_run_20250827_073709.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17110. Data_GUI_run_20250827_073709.m (line 3149): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17111. Data_GUI_run_20250827_073709.m (line 3149): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17112. Data_GUI_run_20250827_073709.m (line 3174): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17113. Data_GUI_run_20250827_073709.m (line 3174): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17114. Data_GUI_run_20250827_073709.m (line 3199): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17115. Data_GUI_run_20250827_073709.m (line 3199): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17116. Data_GUI_run_20250827_073709.m (line 3214): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17117. Data_GUI_run_20250827_073709.m (line 3226): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17118. Data_GUI_run_20250827_073709.m (line 3226): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17119. Data_GUI_run_20250827_073709.m (line 3232): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17120. Data_GUI_run_20250827_073709.m (line 3232): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17121. Data_GUI_run_20250827_073709.m (line 3245): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17122. Data_GUI_run_20250827_073709.m (line 3246): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17123. Data_GUI_run_20250827_073709.m (line 3247): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17124. Data_GUI_run_20250827_073709.m (line 3258): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17125. Data_GUI_run_20250827_073709.m (line 3259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17126. Data_GUI_run_20250827_073709.m (line 3264): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17127. Data_GUI_run_20250827_073709.m (line 3265): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17128. Data_GUI_run_20250827_073709.m (line 3305): Value assigned to variable might be unused.\n  17129. Data_GUI_run_20250827_073709.m (line 3541): Value assigned to variable might be unused.\n  17130. Data_GUI_run_20250827_073709.m (line 3727): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  17131. Data_GUI_run_20250827_073709.m (line 3857): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17132. Data_GUI_run_20250827_073709.m (line 3857): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17133. Data_GUI_run_20250827_073709.m (line 4090): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17134. Data_GUI_run_20250827_073709.m (line 4090): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17135. Data_GUI_run_20250827_073709.m (line 4125): Function might be unused.\n  17136. Data_GUI_run_20250827_073709.m (line 4176): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17137. Data_GUI_run_20250827_073709.m (line 4258): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17138. Data_GUI_run_20250827_073709.m (line 4375): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17139. Data_GUI_run_20250827_073709.m (line 4445): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17140. Data_GUI_run_20250827_073709.m (line 4445): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17141. Data_GUI_run_20250827_073709.m (line 4835): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17142. Data_GUI_run_20250827_073709.m (line 4838): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17143. Data_GUI_run_20250827_073709.m (line 4838): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17144. Data_GUI_run_20250827_073709.m (line 4933): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17145. Data_GUI_run_20250827_073709.m (line 5083): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17146. Data_GUI_run_20250827_073709.m (line 5083): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17147. Data_GUI_run_20250827_073709.m (line 5115): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17148. Data_GUI_run_20250827_073709.m (line 5115): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17149. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250827\\Data_GUI_run_20250827_073709.m: Missing arguments validation block\n  17150. Data_GUI_run_20250827_093626.m (line 44): Function name 'Dataset_GUI' is known to MATLAB by its file name: 'Data_GUI_run_20250827_093626'.\n  17151. Data_GUI_run_20250827_093626.m (line 359): Function might be unused.\n  17152. Data_GUI_run_20250827_093626.m (line 450): Value assigned to variable might be unused.\n  17153. Data_GUI_run_20250827_093626.m (line 672): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17154. Data_GUI_run_20250827_093626.m (line 696): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17155. Data_GUI_run_20250827_093626.m (line 708): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17156. Data_GUI_run_20250827_093626.m (line 732): Value assigned to variable might be unused.\n  17157. Data_GUI_run_20250827_093626.m (line 984): Value assigned to variable might be unused.\n  17158. Data_GUI_run_20250827_093626.m (line 1005): Value assigned to variable might be unused.\n  17159. Data_GUI_run_20250827_093626.m (line 1179): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17160. Data_GUI_run_20250827_093626.m (line 1179): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17161. Data_GUI_run_20250827_093626.m (line 1212): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17162. Data_GUI_run_20250827_093626.m (line 1293): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17163. Data_GUI_run_20250827_093626.m (line 1533): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17164. Data_GUI_run_20250827_093626.m (line 1533): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17165. Data_GUI_run_20250827_093626.m (line 1539): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17166. Data_GUI_run_20250827_093626.m (line 1539): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17167. Data_GUI_run_20250827_093626.m (line 1550): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17168. Data_GUI_run_20250827_093626.m (line 1550): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17169. Data_GUI_run_20250827_093626.m (line 1566): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17170. Data_GUI_run_20250827_093626.m (line 1603): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17171. Data_GUI_run_20250827_093626.m (line 1603): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17172. Data_GUI_run_20250827_093626.m (line 1763): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17173. Data_GUI_run_20250827_093626.m (line 1763): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17174. Data_GUI_run_20250827_093626.m (line 1867): Value assigned to variable might be unused.\n  17175. Data_GUI_run_20250827_093626.m (line 1973): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17176. Data_GUI_run_20250827_093626.m (line 1973): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17177. Data_GUI_run_20250827_093626.m (line 2375): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17178. Data_GUI_run_20250827_093626.m (line 2376): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17179. Data_GUI_run_20250827_093626.m (line 2377): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17180. Data_GUI_run_20250827_093626.m (line 2378): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17181. Data_GUI_run_20250827_093626.m (line 2379): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17182. Data_GUI_run_20250827_093626.m (line 2640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17183. Data_GUI_run_20250827_093626.m (line 2641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17184. Data_GUI_run_20250827_093626.m (line 2642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17185. Data_GUI_run_20250827_093626.m (line 2643): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17186. Data_GUI_run_20250827_093626.m (line 2644): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17187. Data_GUI_run_20250827_093626.m (line 2676): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17188. Data_GUI_run_20250827_093626.m (line 2677): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17189. Data_GUI_run_20250827_093626.m (line 2678): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17190. Data_GUI_run_20250827_093626.m (line 2711): Value assigned to variable might be unused.\n  17191. Data_GUI_run_20250827_093626.m (line 2736): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17192. Data_GUI_run_20250827_093626.m (line 2884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17193. Data_GUI_run_20250827_093626.m (line 2884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17194. Data_GUI_run_20250827_093626.m (line 2897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17195. Data_GUI_run_20250827_093626.m (line 2897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17196. Data_GUI_run_20250827_093626.m (line 2910): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17197. Data_GUI_run_20250827_093626.m (line 2922): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17198. Data_GUI_run_20250827_093626.m (line 2922): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17199. Data_GUI_run_20250827_093626.m (line 2978): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17200. Data_GUI_run_20250827_093626.m (line 2978): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17201. Data_GUI_run_20250827_093626.m (line 3029): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17202. Data_GUI_run_20250827_093626.m (line 3029): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17203. Data_GUI_run_20250827_093626.m (line 3076): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17204. Data_GUI_run_20250827_093626.m (line 3076): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17205. Data_GUI_run_20250827_093626.m (line 3106): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17206. Data_GUI_run_20250827_093626.m (line 3106): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17207. Data_GUI_run_20250827_093626.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17208. Data_GUI_run_20250827_093626.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17209. Data_GUI_run_20250827_093626.m (line 3149): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17210. Data_GUI_run_20250827_093626.m (line 3149): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17211. Data_GUI_run_20250827_093626.m (line 3174): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17212. Data_GUI_run_20250827_093626.m (line 3174): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17213. Data_GUI_run_20250827_093626.m (line 3199): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17214. Data_GUI_run_20250827_093626.m (line 3199): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17215. Data_GUI_run_20250827_093626.m (line 3214): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17216. Data_GUI_run_20250827_093626.m (line 3226): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17217. Data_GUI_run_20250827_093626.m (line 3226): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17218. Data_GUI_run_20250827_093626.m (line 3232): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17219. Data_GUI_run_20250827_093626.m (line 3232): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17220. Data_GUI_run_20250827_093626.m (line 3245): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17221. Data_GUI_run_20250827_093626.m (line 3246): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17222. Data_GUI_run_20250827_093626.m (line 3247): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17223. Data_GUI_run_20250827_093626.m (line 3258): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17224. Data_GUI_run_20250827_093626.m (line 3259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17225. Data_GUI_run_20250827_093626.m (line 3264): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17226. Data_GUI_run_20250827_093626.m (line 3265): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17227. Data_GUI_run_20250827_093626.m (line 3305): Value assigned to variable might be unused.\n  17228. Data_GUI_run_20250827_093626.m (line 3541): Value assigned to variable might be unused.\n  17229. Data_GUI_run_20250827_093626.m (line 3727): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  17230. Data_GUI_run_20250827_093626.m (line 3857): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17231. Data_GUI_run_20250827_093626.m (line 3857): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17232. Data_GUI_run_20250827_093626.m (line 4090): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17233. Data_GUI_run_20250827_093626.m (line 4090): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17234. Data_GUI_run_20250827_093626.m (line 4125): Function might be unused.\n  17235. Data_GUI_run_20250827_093626.m (line 4176): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17236. Data_GUI_run_20250827_093626.m (line 4258): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17237. Data_GUI_run_20250827_093626.m (line 4375): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17238. Data_GUI_run_20250827_093626.m (line 4445): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17239. Data_GUI_run_20250827_093626.m (line 4445): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17240. Data_GUI_run_20250827_093626.m (line 4835): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17241. Data_GUI_run_20250827_093626.m (line 4838): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17242. Data_GUI_run_20250827_093626.m (line 4838): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17243. Data_GUI_run_20250827_093626.m (line 4933): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17244. Data_GUI_run_20250827_093626.m (line 5083): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17245. Data_GUI_run_20250827_093626.m (line 5083): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17246. Data_GUI_run_20250827_093626.m (line 5115): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17247. Data_GUI_run_20250827_093626.m (line 5115): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17248. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250827\\Data_GUI_run_20250827_093626.m: Missing arguments validation block\n  17249. Data_GUI_run_20250828_194512.m (line 44): Function name 'Dataset_GUI' is known to MATLAB by its file name: 'Data_GUI_run_20250828_194512'.\n  17250. Data_GUI_run_20250828_194512.m (line 359): Function might be unused.\n  17251. Data_GUI_run_20250828_194512.m (line 450): Value assigned to variable might be unused.\n  17252. Data_GUI_run_20250828_194512.m (line 672): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17253. Data_GUI_run_20250828_194512.m (line 696): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17254. Data_GUI_run_20250828_194512.m (line 708): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17255. Data_GUI_run_20250828_194512.m (line 732): Value assigned to variable might be unused.\n  17256. Data_GUI_run_20250828_194512.m (line 984): Value assigned to variable might be unused.\n  17257. Data_GUI_run_20250828_194512.m (line 1005): Value assigned to variable might be unused.\n  17258. Data_GUI_run_20250828_194512.m (line 1179): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17259. Data_GUI_run_20250828_194512.m (line 1179): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17260. Data_GUI_run_20250828_194512.m (line 1212): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17261. Data_GUI_run_20250828_194512.m (line 1293): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17262. Data_GUI_run_20250828_194512.m (line 1533): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17263. Data_GUI_run_20250828_194512.m (line 1533): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17264. Data_GUI_run_20250828_194512.m (line 1539): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17265. Data_GUI_run_20250828_194512.m (line 1539): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17266. Data_GUI_run_20250828_194512.m (line 1550): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17267. Data_GUI_run_20250828_194512.m (line 1550): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17268. Data_GUI_run_20250828_194512.m (line 1566): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17269. Data_GUI_run_20250828_194512.m (line 1603): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17270. Data_GUI_run_20250828_194512.m (line 1603): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17271. Data_GUI_run_20250828_194512.m (line 1763): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17272. Data_GUI_run_20250828_194512.m (line 1763): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17273. Data_GUI_run_20250828_194512.m (line 1867): Value assigned to variable might be unused.\n  17274. Data_GUI_run_20250828_194512.m (line 1973): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17275. Data_GUI_run_20250828_194512.m (line 1973): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17276. Data_GUI_run_20250828_194512.m (line 2375): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17277. Data_GUI_run_20250828_194512.m (line 2376): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17278. Data_GUI_run_20250828_194512.m (line 2377): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17279. Data_GUI_run_20250828_194512.m (line 2378): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17280. Data_GUI_run_20250828_194512.m (line 2379): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17281. Data_GUI_run_20250828_194512.m (line 2640): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17282. Data_GUI_run_20250828_194512.m (line 2641): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17283. Data_GUI_run_20250828_194512.m (line 2642): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17284. Data_GUI_run_20250828_194512.m (line 2643): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17285. Data_GUI_run_20250828_194512.m (line 2644): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17286. Data_GUI_run_20250828_194512.m (line 2676): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17287. Data_GUI_run_20250828_194512.m (line 2677): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17288. Data_GUI_run_20250828_194512.m (line 2678): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17289. Data_GUI_run_20250828_194512.m (line 2711): Value assigned to variable might be unused.\n  17290. Data_GUI_run_20250828_194512.m (line 2736): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17291. Data_GUI_run_20250828_194512.m (line 2884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17292. Data_GUI_run_20250828_194512.m (line 2884): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17293. Data_GUI_run_20250828_194512.m (line 2897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17294. Data_GUI_run_20250828_194512.m (line 2897): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17295. Data_GUI_run_20250828_194512.m (line 2910): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17296. Data_GUI_run_20250828_194512.m (line 2922): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17297. Data_GUI_run_20250828_194512.m (line 2922): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17298. Data_GUI_run_20250828_194512.m (line 2978): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17299. Data_GUI_run_20250828_194512.m (line 2978): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17300. Data_GUI_run_20250828_194512.m (line 3029): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17301. Data_GUI_run_20250828_194512.m (line 3029): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17302. Data_GUI_run_20250828_194512.m (line 3076): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17303. Data_GUI_run_20250828_194512.m (line 3076): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17304. Data_GUI_run_20250828_194512.m (line 3106): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17305. Data_GUI_run_20250828_194512.m (line 3106): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17306. Data_GUI_run_20250828_194512.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17307. Data_GUI_run_20250828_194512.m (line 3128): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17308. Data_GUI_run_20250828_194512.m (line 3149): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17309. Data_GUI_run_20250828_194512.m (line 3149): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17310. Data_GUI_run_20250828_194512.m (line 3174): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17311. Data_GUI_run_20250828_194512.m (line 3174): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17312. Data_GUI_run_20250828_194512.m (line 3199): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17313. Data_GUI_run_20250828_194512.m (line 3199): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17314. Data_GUI_run_20250828_194512.m (line 3214): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17315. Data_GUI_run_20250828_194512.m (line 3226): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17316. Data_GUI_run_20250828_194512.m (line 3226): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17317. Data_GUI_run_20250828_194512.m (line 3232): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17318. Data_GUI_run_20250828_194512.m (line 3232): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17319. Data_GUI_run_20250828_194512.m (line 3245): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17320. Data_GUI_run_20250828_194512.m (line 3246): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17321. Data_GUI_run_20250828_194512.m (line 3247): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17322. Data_GUI_run_20250828_194512.m (line 3258): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17323. Data_GUI_run_20250828_194512.m (line 3259): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17324. Data_GUI_run_20250828_194512.m (line 3264): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17325. Data_GUI_run_20250828_194512.m (line 3265): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17326. Data_GUI_run_20250828_194512.m (line 3305): Value assigned to variable might be unused.\n  17327. Data_GUI_run_20250828_194512.m (line 3541): Value assigned to variable might be unused.\n  17328. Data_GUI_run_20250828_194512.m (line 3727): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  17329. Data_GUI_run_20250828_194512.m (line 3857): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17330. Data_GUI_run_20250828_194512.m (line 3857): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17331. Data_GUI_run_20250828_194512.m (line 4090): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17332. Data_GUI_run_20250828_194512.m (line 4090): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17333. Data_GUI_run_20250828_194512.m (line 4125): Function might be unused.\n  17334. Data_GUI_run_20250828_194512.m (line 4176): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17335. Data_GUI_run_20250828_194512.m (line 4258): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17336. Data_GUI_run_20250828_194512.m (line 4375): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17337. Data_GUI_run_20250828_194512.m (line 4445): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17338. Data_GUI_run_20250828_194512.m (line 4445): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17339. Data_GUI_run_20250828_194512.m (line 4835): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17340. Data_GUI_run_20250828_194512.m (line 4838): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17341. Data_GUI_run_20250828_194512.m (line 4838): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17342. Data_GUI_run_20250828_194512.m (line 4933): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17343. Data_GUI_run_20250828_194512.m (line 5083): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17344. Data_GUI_run_20250828_194512.m (line 5083): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17345. Data_GUI_run_20250828_194512.m (line 5115): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17346. Data_GUI_run_20250828_194512.m (line 5115): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17347. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\golf_swing_dataset_20250828\\Data_GUI_run_20250828_194512.m: Missing arguments validation block\n  17348. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_1956_columns.m: Missing arguments validation block\n  17349. test_granular_calculations_with_checkboxes.m (line 72): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17350. test_granular_calculations_with_checkboxes.m (line 73): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17351. test_granular_calculations_with_checkboxes.m (line 74): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17352. test_granular_calculations_with_checkboxes.m (line 75): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17353. test_granular_calculations_with_checkboxes.m (line 76): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17354. test_granular_calculations_with_checkboxes.m (line 77): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17355. test_granular_calculations_with_checkboxes.m (line 84): Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.\n  17356. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_parallel_pool_fix.m: Missing arguments validation block\n  17357. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_performance_descriptions.m: Missing function docstring\n  17358. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_performance_descriptions.m: Missing arguments validation block\n  17359. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_performance_interface.m: Missing arguments validation block\n  17360. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_performance_preferences.m: Missing arguments validation block\n  17361. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\tests\\test_preallocation_performance.m: Missing arguments validation block\n  17362. Dataset_GUI.m (line 316): Function might be unused.\n  17363. Dataset_GUI.m (line 407): Value assigned to variable might be unused.\n  17364. Dataset_GUI.m (line 629): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17365. Dataset_GUI.m (line 653): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17366. Dataset_GUI.m (line 665): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17367. Dataset_GUI.m (line 689): Value assigned to variable might be unused.\n  17368. Dataset_GUI.m (line 941): Value assigned to variable might be unused.\n  17369. Dataset_GUI.m (line 962): Value assigned to variable might be unused.\n  17370. Dataset_GUI.m (line 1136): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17371. Dataset_GUI.m (line 1136): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17372. Dataset_GUI.m (line 1169): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17373. Dataset_GUI.m (line 1250): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17374. Dataset_GUI.m (line 1490): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17375. Dataset_GUI.m (line 1490): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17376. Dataset_GUI.m (line 1496): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17377. Dataset_GUI.m (line 1496): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17378. Dataset_GUI.m (line 1507): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17379. Dataset_GUI.m (line 1507): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17380. Dataset_GUI.m (line 1523): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17381. Dataset_GUI.m (line 1560): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17382. Dataset_GUI.m (line 1560): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17383. Dataset_GUI.m (line 1720): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17384. Dataset_GUI.m (line 1720): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17385. Dataset_GUI.m (line 1901): Value assigned to variable might be unused.\n  17386. Dataset_GUI.m (line 2007): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17387. Dataset_GUI.m (line 2007): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17388. Dataset_GUI.m (line 2409): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17389. Dataset_GUI.m (line 2410): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17390. Dataset_GUI.m (line 2411): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17391. Dataset_GUI.m (line 2412): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17392. Dataset_GUI.m (line 2413): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17393. Dataset_GUI.m (line 2674): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17394. Dataset_GUI.m (line 2675): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17395. Dataset_GUI.m (line 2676): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17396. Dataset_GUI.m (line 2677): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17397. Dataset_GUI.m (line 2678): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17398. Dataset_GUI.m (line 2710): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17399. Dataset_GUI.m (line 2711): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17400. Dataset_GUI.m (line 2712): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17401. Dataset_GUI.m (line 2745): Value assigned to variable might be unused.\n  17402. Dataset_GUI.m (line 2770): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17403. Dataset_GUI.m (line 2918): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17404. Dataset_GUI.m (line 2918): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17405. Dataset_GUI.m (line 2931): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17406. Dataset_GUI.m (line 2931): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17407. Dataset_GUI.m (line 2944): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17408. Dataset_GUI.m (line 2956): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17409. Dataset_GUI.m (line 2956): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17410. Dataset_GUI.m (line 3012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17411. Dataset_GUI.m (line 3012): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17412. Dataset_GUI.m (line 3063): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17413. Dataset_GUI.m (line 3063): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17414. Dataset_GUI.m (line 3110): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17415. Dataset_GUI.m (line 3110): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17416. Dataset_GUI.m (line 3140): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17417. Dataset_GUI.m (line 3140): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17418. Dataset_GUI.m (line 3162): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17419. Dataset_GUI.m (line 3162): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17420. Dataset_GUI.m (line 3183): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17421. Dataset_GUI.m (line 3183): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17422. Dataset_GUI.m (line 3208): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17423. Dataset_GUI.m (line 3208): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17424. Dataset_GUI.m (line 3233): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17425. Dataset_GUI.m (line 3233): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17426. Dataset_GUI.m (line 3248): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17427. Dataset_GUI.m (line 3260): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17428. Dataset_GUI.m (line 3260): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17429. Dataset_GUI.m (line 3266): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17430. Dataset_GUI.m (line 3266): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17431. Dataset_GUI.m (line 3279): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17432. Dataset_GUI.m (line 3280): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17433. Dataset_GUI.m (line 3281): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17434. Dataset_GUI.m (line 3292): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17435. Dataset_GUI.m (line 3293): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17436. Dataset_GUI.m (line 3298): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17437. Dataset_GUI.m (line 3299): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17438. Dataset_GUI.m (line 3339): Value assigned to variable might be unused.\n  17439. Dataset_GUI.m (line 3546): Value assigned to variable might be unused.\n  17440. Dataset_GUI.m (line 3733): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  17441. Dataset_GUI.m (line 3863): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17442. Dataset_GUI.m (line 3863): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17443. Dataset_GUI.m (line 3926): Function might be unused.\n  17444. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\work\\Backup_Scripts\\Run_Backup_20250823_142355\\Dataset_GUI.m: Missing arguments validation block\n  17445. Dataset_GUI.m (line 319): Function might be unused.\n  17446. Dataset_GUI.m (line 410): Value assigned to variable might be unused.\n  17447. Dataset_GUI.m (line 632): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17448. Dataset_GUI.m (line 656): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17449. Dataset_GUI.m (line 668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17450. Dataset_GUI.m (line 692): Value assigned to variable might be unused.\n  17451. Dataset_GUI.m (line 944): Value assigned to variable might be unused.\n  17452. Dataset_GUI.m (line 965): Value assigned to variable might be unused.\n  17453. Dataset_GUI.m (line 1139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17454. Dataset_GUI.m (line 1139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17455. Dataset_GUI.m (line 1172): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17456. Dataset_GUI.m (line 1253): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17457. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17458. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17459. Dataset_GUI.m (line 1499): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17460. Dataset_GUI.m (line 1499): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17461. Dataset_GUI.m (line 1510): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17462. Dataset_GUI.m (line 1510): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17463. Dataset_GUI.m (line 1526): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17464. Dataset_GUI.m (line 1563): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17465. Dataset_GUI.m (line 1563): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17466. Dataset_GUI.m (line 1723): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17467. Dataset_GUI.m (line 1723): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17468. Dataset_GUI.m (line 1922): Value assigned to variable might be unused.\n  17469. Dataset_GUI.m (line 2028): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17470. Dataset_GUI.m (line 2028): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17471. Dataset_GUI.m (line 2430): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17472. Dataset_GUI.m (line 2431): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17473. Dataset_GUI.m (line 2432): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17474. Dataset_GUI.m (line 2433): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17475. Dataset_GUI.m (line 2434): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17476. Dataset_GUI.m (line 2695): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17477. Dataset_GUI.m (line 2696): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17478. Dataset_GUI.m (line 2697): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17479. Dataset_GUI.m (line 2698): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17480. Dataset_GUI.m (line 2699): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17481. Dataset_GUI.m (line 2731): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17482. Dataset_GUI.m (line 2732): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17483. Dataset_GUI.m (line 2733): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17484. Dataset_GUI.m (line 2766): Value assigned to variable might be unused.\n  17485. Dataset_GUI.m (line 2791): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17486. Dataset_GUI.m (line 2939): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17487. Dataset_GUI.m (line 2939): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17488. Dataset_GUI.m (line 2952): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17489. Dataset_GUI.m (line 2952): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17490. Dataset_GUI.m (line 2965): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17491. Dataset_GUI.m (line 2977): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17492. Dataset_GUI.m (line 2977): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17493. Dataset_GUI.m (line 3033): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17494. Dataset_GUI.m (line 3033): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17495. Dataset_GUI.m (line 3084): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17496. Dataset_GUI.m (line 3084): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17497. Dataset_GUI.m (line 3131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17498. Dataset_GUI.m (line 3131): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17499. Dataset_GUI.m (line 3161): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17500. Dataset_GUI.m (line 3161): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17501. Dataset_GUI.m (line 3183): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17502. Dataset_GUI.m (line 3183): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17503. Dataset_GUI.m (line 3204): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17504. Dataset_GUI.m (line 3204): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17505. Dataset_GUI.m (line 3229): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17506. Dataset_GUI.m (line 3229): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17507. Dataset_GUI.m (line 3254): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17508. Dataset_GUI.m (line 3254): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17509. Dataset_GUI.m (line 3269): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17510. Dataset_GUI.m (line 3281): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17511. Dataset_GUI.m (line 3281): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17512. Dataset_GUI.m (line 3287): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17513. Dataset_GUI.m (line 3287): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17514. Dataset_GUI.m (line 3300): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17515. Dataset_GUI.m (line 3301): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17516. Dataset_GUI.m (line 3302): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17517. Dataset_GUI.m (line 3313): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17518. Dataset_GUI.m (line 3314): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17519. Dataset_GUI.m (line 3319): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17520. Dataset_GUI.m (line 3320): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17521. Dataset_GUI.m (line 3360): Value assigned to variable might be unused.\n  17522. Dataset_GUI.m (line 3567): Value assigned to variable might be unused.\n  17523. Dataset_GUI.m (line 3754): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  17524. Dataset_GUI.m (line 3884): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17525. Dataset_GUI.m (line 3884): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17526. Dataset_GUI.m (line 3947): Function might be unused.\n  17527. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\work\\Backup_Scripts\\Run_Backup_20250823_142701\\Dataset_GUI.m: Missing arguments validation block\n  17528. Dataset_GUI.m (line 319): Function might be unused.\n  17529. Dataset_GUI.m (line 410): Value assigned to variable might be unused.\n  17530. Dataset_GUI.m (line 632): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17531. Dataset_GUI.m (line 656): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17532. Dataset_GUI.m (line 668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17533. Dataset_GUI.m (line 692): Value assigned to variable might be unused.\n  17534. Dataset_GUI.m (line 944): Value assigned to variable might be unused.\n  17535. Dataset_GUI.m (line 965): Value assigned to variable might be unused.\n  17536. Dataset_GUI.m (line 1139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17537. Dataset_GUI.m (line 1139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17538. Dataset_GUI.m (line 1172): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17539. Dataset_GUI.m (line 1253): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17540. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17541. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17542. Dataset_GUI.m (line 1499): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17543. Dataset_GUI.m (line 1499): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17544. Dataset_GUI.m (line 1510): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17545. Dataset_GUI.m (line 1510): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17546. Dataset_GUI.m (line 1526): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17547. Dataset_GUI.m (line 1563): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17548. Dataset_GUI.m (line 1563): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17549. Dataset_GUI.m (line 1723): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17550. Dataset_GUI.m (line 1723): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17551. Dataset_GUI.m (line 1930): Value assigned to variable might be unused.\n  17552. Dataset_GUI.m (line 2036): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17553. Dataset_GUI.m (line 2036): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17554. Dataset_GUI.m (line 2438): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17555. Dataset_GUI.m (line 2439): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17556. Dataset_GUI.m (line 2440): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17557. Dataset_GUI.m (line 2441): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17558. Dataset_GUI.m (line 2442): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17559. Dataset_GUI.m (line 2703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17560. Dataset_GUI.m (line 2704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17561. Dataset_GUI.m (line 2705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17562. Dataset_GUI.m (line 2706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17563. Dataset_GUI.m (line 2707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17564. Dataset_GUI.m (line 2739): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17565. Dataset_GUI.m (line 2740): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17566. Dataset_GUI.m (line 2741): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17567. Dataset_GUI.m (line 2774): Value assigned to variable might be unused.\n  17568. Dataset_GUI.m (line 2799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17569. Dataset_GUI.m (line 2947): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17570. Dataset_GUI.m (line 2947): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17571. Dataset_GUI.m (line 2960): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17572. Dataset_GUI.m (line 2960): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17573. Dataset_GUI.m (line 2973): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17574. Dataset_GUI.m (line 2985): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17575. Dataset_GUI.m (line 2985): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17576. Dataset_GUI.m (line 3041): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17577. Dataset_GUI.m (line 3041): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17578. Dataset_GUI.m (line 3092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17579. Dataset_GUI.m (line 3092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17580. Dataset_GUI.m (line 3139): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17581. Dataset_GUI.m (line 3139): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17582. Dataset_GUI.m (line 3169): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17583. Dataset_GUI.m (line 3169): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17584. Dataset_GUI.m (line 3191): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17585. Dataset_GUI.m (line 3191): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17586. Dataset_GUI.m (line 3212): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17587. Dataset_GUI.m (line 3212): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17588. Dataset_GUI.m (line 3237): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17589. Dataset_GUI.m (line 3237): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17590. Dataset_GUI.m (line 3262): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17591. Dataset_GUI.m (line 3262): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17592. Dataset_GUI.m (line 3277): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17593. Dataset_GUI.m (line 3289): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17594. Dataset_GUI.m (line 3289): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17595. Dataset_GUI.m (line 3295): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17596. Dataset_GUI.m (line 3295): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17597. Dataset_GUI.m (line 3308): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17598. Dataset_GUI.m (line 3309): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17599. Dataset_GUI.m (line 3310): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17600. Dataset_GUI.m (line 3321): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17601. Dataset_GUI.m (line 3322): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17602. Dataset_GUI.m (line 3327): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17603. Dataset_GUI.m (line 3328): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17604. Dataset_GUI.m (line 3368): Value assigned to variable might be unused.\n  17605. Dataset_GUI.m (line 3575): Value assigned to variable might be unused.\n  17606. Dataset_GUI.m (line 3762): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  17607. Dataset_GUI.m (line 3892): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17608. Dataset_GUI.m (line 3892): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17609. Dataset_GUI.m (line 3955): Function might be unused.\n  17610. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\work\\Backup_Scripts\\Run_Backup_20250823_143731\\Dataset_GUI.m: Missing arguments validation block\n  17611. Dataset_GUI.m (line 319): Function might be unused.\n  17612. Dataset_GUI.m (line 410): Value assigned to variable might be unused.\n  17613. Dataset_GUI.m (line 632): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17614. Dataset_GUI.m (line 656): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17615. Dataset_GUI.m (line 668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17616. Dataset_GUI.m (line 692): Value assigned to variable might be unused.\n  17617. Dataset_GUI.m (line 944): Value assigned to variable might be unused.\n  17618. Dataset_GUI.m (line 965): Value assigned to variable might be unused.\n  17619. Dataset_GUI.m (line 1139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17620. Dataset_GUI.m (line 1139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17621. Dataset_GUI.m (line 1172): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17622. Dataset_GUI.m (line 1253): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17623. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17624. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17625. Dataset_GUI.m (line 1499): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17626. Dataset_GUI.m (line 1499): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17627. Dataset_GUI.m (line 1510): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17628. Dataset_GUI.m (line 1510): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17629. Dataset_GUI.m (line 1526): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17630. Dataset_GUI.m (line 1563): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17631. Dataset_GUI.m (line 1563): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17632. Dataset_GUI.m (line 1723): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17633. Dataset_GUI.m (line 1723): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17634. Dataset_GUI.m (line 1930): Value assigned to variable might be unused.\n  17635. Dataset_GUI.m (line 2036): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17636. Dataset_GUI.m (line 2036): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17637. Dataset_GUI.m (line 2438): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17638. Dataset_GUI.m (line 2439): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17639. Dataset_GUI.m (line 2440): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17640. Dataset_GUI.m (line 2441): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17641. Dataset_GUI.m (line 2442): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17642. Dataset_GUI.m (line 2703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17643. Dataset_GUI.m (line 2704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17644. Dataset_GUI.m (line 2705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17645. Dataset_GUI.m (line 2706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17646. Dataset_GUI.m (line 2707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17647. Dataset_GUI.m (line 2739): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17648. Dataset_GUI.m (line 2740): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17649. Dataset_GUI.m (line 2741): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17650. Dataset_GUI.m (line 2774): Value assigned to variable might be unused.\n  17651. Dataset_GUI.m (line 2799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17652. Dataset_GUI.m (line 2947): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17653. Dataset_GUI.m (line 2947): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17654. Dataset_GUI.m (line 2960): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17655. Dataset_GUI.m (line 2960): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17656. Dataset_GUI.m (line 2973): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17657. Dataset_GUI.m (line 2985): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17658. Dataset_GUI.m (line 2985): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17659. Dataset_GUI.m (line 3041): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17660. Dataset_GUI.m (line 3041): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17661. Dataset_GUI.m (line 3092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17662. Dataset_GUI.m (line 3092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17663. Dataset_GUI.m (line 3139): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17664. Dataset_GUI.m (line 3139): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17665. Dataset_GUI.m (line 3169): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17666. Dataset_GUI.m (line 3169): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17667. Dataset_GUI.m (line 3191): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17668. Dataset_GUI.m (line 3191): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17669. Dataset_GUI.m (line 3212): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17670. Dataset_GUI.m (line 3212): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17671. Dataset_GUI.m (line 3237): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17672. Dataset_GUI.m (line 3237): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17673. Dataset_GUI.m (line 3262): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17674. Dataset_GUI.m (line 3262): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17675. Dataset_GUI.m (line 3277): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17676. Dataset_GUI.m (line 3289): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17677. Dataset_GUI.m (line 3289): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17678. Dataset_GUI.m (line 3295): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17679. Dataset_GUI.m (line 3295): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17680. Dataset_GUI.m (line 3308): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17681. Dataset_GUI.m (line 3309): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17682. Dataset_GUI.m (line 3310): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17683. Dataset_GUI.m (line 3321): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17684. Dataset_GUI.m (line 3322): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17685. Dataset_GUI.m (line 3327): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17686. Dataset_GUI.m (line 3328): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17687. Dataset_GUI.m (line 3368): Value assigned to variable might be unused.\n  17688. Dataset_GUI.m (line 3575): Value assigned to variable might be unused.\n  17689. Dataset_GUI.m (line 3762): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  17690. Dataset_GUI.m (line 3892): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17691. Dataset_GUI.m (line 3892): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17692. Dataset_GUI.m (line 3955): Function might be unused.\n  17693. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\work\\Backup_Scripts\\Run_Backup_20250823_144451\\Dataset_GUI.m: Missing arguments validation block\n  17694. Dataset_GUI.m (line 319): Function might be unused.\n  17695. Dataset_GUI.m (line 410): Value assigned to variable might be unused.\n  17696. Dataset_GUI.m (line 632): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17697. Dataset_GUI.m (line 656): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17698. Dataset_GUI.m (line 668): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17699. Dataset_GUI.m (line 692): Value assigned to variable might be unused.\n  17700. Dataset_GUI.m (line 944): Value assigned to variable might be unused.\n  17701. Dataset_GUI.m (line 965): Value assigned to variable might be unused.\n  17702. Dataset_GUI.m (line 1139): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17703. Dataset_GUI.m (line 1139): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17704. Dataset_GUI.m (line 1172): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17705. Dataset_GUI.m (line 1253): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17706. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17707. Dataset_GUI.m (line 1493): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17708. Dataset_GUI.m (line 1499): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17709. Dataset_GUI.m (line 1499): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17710. Dataset_GUI.m (line 1510): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17711. Dataset_GUI.m (line 1510): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17712. Dataset_GUI.m (line 1526): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17713. Dataset_GUI.m (line 1563): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17714. Dataset_GUI.m (line 1563): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17715. Dataset_GUI.m (line 1723): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17716. Dataset_GUI.m (line 1723): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17717. Dataset_GUI.m (line 1930): Value assigned to variable might be unused.\n  17718. Dataset_GUI.m (line 2036): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17719. Dataset_GUI.m (line 2036): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17720. Dataset_GUI.m (line 2438): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17721. Dataset_GUI.m (line 2439): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17722. Dataset_GUI.m (line 2440): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17723. Dataset_GUI.m (line 2441): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17724. Dataset_GUI.m (line 2442): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17725. Dataset_GUI.m (line 2703): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17726. Dataset_GUI.m (line 2704): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17727. Dataset_GUI.m (line 2705): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17728. Dataset_GUI.m (line 2706): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17729. Dataset_GUI.m (line 2707): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17730. Dataset_GUI.m (line 2739): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17731. Dataset_GUI.m (line 2740): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17732. Dataset_GUI.m (line 2741): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17733. Dataset_GUI.m (line 2774): Value assigned to variable might be unused.\n  17734. Dataset_GUI.m (line 2799): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17735. Dataset_GUI.m (line 2947): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17736. Dataset_GUI.m (line 2947): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17737. Dataset_GUI.m (line 2960): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17738. Dataset_GUI.m (line 2960): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17739. Dataset_GUI.m (line 2973): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17740. Dataset_GUI.m (line 2985): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17741. Dataset_GUI.m (line 2985): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17742. Dataset_GUI.m (line 3041): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17743. Dataset_GUI.m (line 3041): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17744. Dataset_GUI.m (line 3092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17745. Dataset_GUI.m (line 3092): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17746. Dataset_GUI.m (line 3139): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17747. Dataset_GUI.m (line 3139): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17748. Dataset_GUI.m (line 3169): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17749. Dataset_GUI.m (line 3169): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17750. Dataset_GUI.m (line 3191): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17751. Dataset_GUI.m (line 3191): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17752. Dataset_GUI.m (line 3212): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17753. Dataset_GUI.m (line 3212): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17754. Dataset_GUI.m (line 3237): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17755. Dataset_GUI.m (line 3237): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17756. Dataset_GUI.m (line 3262): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17757. Dataset_GUI.m (line 3262): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17758. Dataset_GUI.m (line 3277): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17759. Dataset_GUI.m (line 3289): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17760. Dataset_GUI.m (line 3289): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17761. Dataset_GUI.m (line 3295): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17762. Dataset_GUI.m (line 3295): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17763. Dataset_GUI.m (line 3308): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17764. Dataset_GUI.m (line 3309): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17765. Dataset_GUI.m (line 3310): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17766. Dataset_GUI.m (line 3321): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17767. Dataset_GUI.m (line 3322): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17768. Dataset_GUI.m (line 3327): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17769. Dataset_GUI.m (line 3328): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17770. Dataset_GUI.m (line 3368): Value assigned to variable might be unused.\n  17771. Dataset_GUI.m (line 3575): Value assigned to variable might be unused.\n  17772. Dataset_GUI.m (line 3712): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17773. Dataset_GUI.m (line 3716): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17774. Dataset_GUI.m (line 3719): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17775. Dataset_GUI.m (line 3765): The 'TransferBaseWorkspaceVariables' option is not recommended for 'parsim'. With appropriate code changes, consider using project startup scripts or the 'SetupFcn' option instead.\n  17776. Dataset_GUI.m (line 3895): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17777. Dataset_GUI.m (line 3895): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17778. Dataset_GUI.m (line 3939): Function might be unused.\n  17779. Dataset_GUI.m (line 3958): Function might be unused.\n  17780. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Dataset Generator\\work\\Backup_Scripts\\Run_Backup_20250823_145626\\Dataset_GUI.m: Missing arguments validation block\n  17781. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\HexPolyInputFunction.m: Missing arguments validation block\n  17782. HexRegression.m (line 12): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17783. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\HexRegression.m: Missing arguments validation block\n  17784. IdentifyLoggedSignals.m (line 19): The format might not agree with the argument count.\n  17785. Maximum_CHSx.m (line 1): Function name 'Maximize_CHSx' is known to MATLAB by its file name: 'Maximum_CHSx'.\n  17786. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Maximum_CHSx.m: Missing function docstring\n  17787. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Maximum_CHSx.m: Missing arguments validation block\n  17788. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Maximum_CHSy.m: Missing function docstring\n  17789. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Maximum_CHSy.m: Missing arguments validation block\n  17790. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Maximum_CHSz.m: Missing function docstring\n  17791. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Maximum_CHSz.m: Missing arguments validation block\n  17792. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Minimum_CHSy.m: Missing function docstring\n  17793. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Minimum_CHSy.m: Missing arguments validation block\n  17794. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Minimum_CHSz.m: Missing function docstring\n  17795. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\Minimum_CHSz.m: Missing arguments validation block\n  17796. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\calculatePathVectors3D.m: Missing arguments validation block\n  17797. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\calculateTotalWorkAndPower3D.m: Missing arguments validation block\n  17798. calculateWorkAndImpulse3D.m (line 34): Value assigned to variable might be unused.\n  17799. calculateWorkAndImpulse3D.m (line 94): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  17800. calculateWorkAndImpulse3D.m (line 213): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  17801. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\calculateWorkAndImpulse3D.m: Missing arguments validation block\n  17802. calculateWorkPowerAndAngularImpulse3D.m (line 40): Value assigned to variable might be unused.\n  17803. calculateWorkPowerAndAngularImpulse3D.m (line 55): Value assigned to variable might be unused.\n  17804. calculateWorkPowerAndAngularImpulse3D.m (line 66): Value assigned to variable might be unused.\n  17805. calculateWorkPowerAndAngularImpulse3D.m (line 189): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  17806. calculateWorkPowerAndAngularImpulse3D.m (line 211): Value assigned to variable might be unused.\n  17807. calculateWorkPowerAndAngularImpulse3D.m (line 222): Value assigned to variable might be unused.\n  17808. calculateWorkPowerAndAngularImpulse3D.m (line 342): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  17809. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\calculateWorkPowerAndAngularImpulse3D.m: Missing arguments validation block\n  17810. combine_plot_scripts.m (line 27): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17811. combine_plot_scripts.m (line 27): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17812. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\combine_plot_scripts.m: Missing arguments validation block\n  17813. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\generateDataTable3D.m: Missing arguments validation block\n  17814. generateResultsFolder3D.m (line 10): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17815. generateResultsFolder3D.m (line 10): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17816. generateResultsFolder3D.m (line 52): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17817. generateResultsFolder3D.m (line 53): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17818. generateResultsFolder3D.m (line 54): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17819. generateResultsFolder3D.m (line 55): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17820. generateResultsFolder3D.m (line 56): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17821. generateResultsFolder3D.m (line 57): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17822. generateResultsFolder3D.m (line 58): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17823. generateResultsFolder3D.m (line 59): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17824. generateResultsFolder3D.m (line 60): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17825. generateResultsFolder3D.m (line 75): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17826. generateResultsFolder3D.m (line 76): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17827. generateResultsFolder3D.m (line 77): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17828. generateResultsFolder3D.m (line 100): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17829. generateResultsFolder3D.m (line 101): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17830. generateResultsFolder3D.m (line 102): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17831. generateResultsFolder3D.m (line 103): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17832. generateResultsFolder3D.m (line 104): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17833. generateResultsFolder3D.m (line 105): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17834. generateResultsFolder3D.m (line 106): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17835. generateResultsFolder3D.m (line 107): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17836. generateResultsFolder3D.m (line 108): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17837. generateResultsFolder3D.m (line 122): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17838. generateResultsFolder3D.m (line 122): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17839. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\generateResultsFolder3D.m: Missing arguments validation block\n  17840. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\generateSummaryTableAndQuiverData3D.m: Missing arguments validation block\n  17841. overlayQuiverForces.m (line 47): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17842. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\overlayQuiverForces.m: Missing arguments validation block\n  17843. runZvcfSingleTime.m (line 62): Value assigned to variable might be unused.\n  17844. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\runZvcfSingleTime.m: Missing arguments validation block\n  17845. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\setModelingModeParameter.m: Missing arguments validation block\n  17846. shelledQuivers3.m (line 1): Parse error at '<': usage might be invalid MATLAB syntax.\n  17847. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17848. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17849. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17850. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17851. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17852. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17853. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17854. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17855. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17856. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17857. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17858. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17859. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 29): Add a semicolon after the statement to hide the output (in a script).\n  17860. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 30): Add a semicolon after the statement to hide the output (in a script).\n  17861. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 31): Add a semicolon after the statement to hide the output (in a script).\n  17862. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17863. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17864. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17865. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17866. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17867. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17868. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17869. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17870. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17871. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17872. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17873. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17874. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 30): Add a semicolon after the statement to hide the output (in a script).\n  17875. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 31): Add a semicolon after the statement to hide the output (in a script).\n  17876. SCRIPT_345PolynomialKinematicInputFunctionsCalculate.m (line 32): Add a semicolon after the statement to hide the output (in a script).\n  17877. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17878. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17879. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17880. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17881. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17882. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17883. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17884. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17885. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17886. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17887. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17888. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 13): Value assigned to variable might be unused.\n  17889. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 31): Add a semicolon after the statement to hide the output (in a script).\n  17890. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 32): Add a semicolon after the statement to hide the output (in a script).\n  17891. SCRIPT_456PolynomialKinematicInputFunctionsCalculate.m (line 33): Add a semicolon after the statement to hide the output (in a script).\n  17892. SCRIPT_IterativeLearningLoop.m (line 21): Value assigned to variable might be unused.\n  17893. SCRIPT_StatesTable.m (line 12): Extra semicolon is unnecessary.\n  17894. SCRIPT_VariableDeletion.m (line 7): Value assigned to variable might be unused.\n  17895. SCRIPT_VariableDeletion.m (line 8): Value assigned to variable might be unused.\n  17896. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\Archive\\Maximize_CHS.m: Missing function docstring\n  17897. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\Archive\\Maximize_CHS.m: Missing arguments validation block\n  17898. Maximize_CHS_3D.m (line 1): Function name 'Maximize_CHSx' is known to MATLAB by its file name: 'Maximize_CHS_3D'.\n  17899. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\Archive\\Maximize_CHS_3D.m: Missing function docstring\n  17900. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\Archive\\Maximize_CHS_3D.m: Missing arguments validation block\n  17901. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\Archive\\Minimize_LF_AvgRotVelocity.m: Missing function docstring\n  17902. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Functions\\_Calculations and Functions\\Archive\\Minimize_LF_AvgRotVelocity.m: Missing arguments validation block\n  17903. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17904. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17905. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 4): Value assigned to variable might be unused.\n  17906. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 12): Use of brackets [] is unnecessary.\n  17907. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 12): Use of brackets [] is unnecessary.\n  17908. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 22): Add a semicolon after the statement to hide the output (in a script).\n  17909. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 25): Add a semicolon after the statement to hide the output (in a script).\n  17910. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 26): Add a semicolon after the statement to hide the output (in a script).\n  17911. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 31): Add a semicolon after the statement to hide the output (in a script).\n  17912. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 32): Add a semicolon after the statement to hide the output (in a script).\n  17913. SCRIPT_234PolynomialKinematicInputFunctionsCalculate.m (line 33): Add a semicolon after the statement to hide the output (in a script).\n  17914. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\launch_gui.m: Missing arguments validation block\n  17915. test_phase1_improvements.m (line 29): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17916. test_phase1_improvements.m (line 30): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17917. test_phase1_improvements.m (line 31): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17918. test_phase1_improvements.m (line 32): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17919. test_phase1_improvements.m (line 33): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17920. test_phase1_improvements.m (line 34): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17921. test_phase1_improvements.m (line 35): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17922. test_phase1_improvements.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17923. test_phase1_improvements.m (line 72): Value assigned to variable might be unused.\n  17924. test_phase1_improvements.m (line 153): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17925. test_phase1_improvements.m (line 153): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17926. test_phase1_improvements.m (line 153): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  17927. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\Archive\\test_phase1_improvements.m: Missing arguments validation block\n  17928. test_phase2_improvements.m (line 38): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17929. test_phase2_improvements.m (line 39): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17930. test_phase2_improvements.m (line 40): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17931. test_phase2_improvements.m (line 41): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17932. test_phase2_improvements.m (line 42): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17933. test_phase2_improvements.m (line 43): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17934. test_phase2_improvements.m (line 44): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17935. test_phase2_improvements.m (line 45): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17936. test_phase2_improvements.m (line 52): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17937. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\Archive\\test_phase2_improvements.m: Missing arguments validation block\n  17938. test_real_gui_functionality.m (line 27): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17939. test_real_gui_functionality.m (line 28): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17940. test_real_gui_functionality.m (line 29): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17941. test_real_gui_functionality.m (line 30): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17942. test_real_gui_functionality.m (line 31): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17943. test_real_gui_functionality.m (line 32): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17944. test_real_gui_functionality.m (line 33): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17945. test_real_gui_functionality.m (line 43): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17946. test_real_gui_functionality.m (line 70): Value assigned to variable might be unused.\n  17947. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\Archive\\test_real_gui_functionality.m: Missing arguments validation block\n  17948. test_skeleton_plotter_enhancements.m (line 32): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17949. test_skeleton_plotter_enhancements.m (line 33): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17950. test_skeleton_plotter_enhancements.m (line 34): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17951. test_skeleton_plotter_enhancements.m (line 35): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  17952. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\config\\model_config.m: Missing arguments validation block\n  17953. generate_base_data.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17954. generate_base_data.m (line 21): Value assigned to variable might be unused.\n  17955. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\data_processing\\generate_base_data.m: Missing arguments validation block\n  17956. generate_ztcf_data.m (line 40): Value assigned to variable might be unused.\n  17957. generate_ztcf_data.m (line 64): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17958. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\data_processing\\generate_ztcf_data.m: Missing arguments validation block\n  17959. process_data_tables.m (line 45): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17960. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\data_processing\\process_data_tables.m: Missing arguments validation block\n  17961. run_additional_processing.m (line 1): Function return value might be unset.\n  17962. run_additional_processing.m (line 1): Function return value might be unset.\n  17963. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\data_processing\\run_additional_processing.m: Missing arguments validation block\n  17964. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\data_processing\\save_data_tables.m: Missing arguments validation block\n  17965. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\functions\\initialize_model.m: Missing arguments validation block\n  17966. performance_tracker.m (line 19): A property default value that is a handle will cause all instances to share the same object data. To avoid sharing, create the property value in the constructor. For intentional sharing, consider using a Constant property.\n  17967. performance_tracker.m (line 20): A property default value that is a handle will cause all instances to share the same object data. To avoid sharing, create the property value in the constructor. For intentional sharing, consider using a Constant property.\n  17968. performance_tracker.m (line 21): A property default value that is a handle will cause all instances to share the same object data. To avoid sharing, create the property value in the constructor. For intentional sharing, consider using a Constant property.\n  17969. performance_tracker.m (line 23): A property default value that is a handle will cause all instances to share the same object data. To avoid sharing, create the property value in the constructor. For intentional sharing, consider using a Constant property.\n  17970. performance_tracker.m (line 24): A property default value that is a handle will cause all instances to share the same object data. To avoid sharing, create the property value in the constructor. For intentional sharing, consider using a Constant property.\n  17971. performance_tracker.m (line 25): A property default value that is a handle will cause all instances to share the same object data. To avoid sharing, create the property value in the constructor. For intentional sharing, consider using a Constant property.\n  17972. performance_tracker.m (line 26): A property default value that is a handle will cause all instances to share the same object data. To avoid sharing, create the property value in the constructor. For intentional sharing, consider using a Constant property.\n  17973. performance_tracker.m (line 27): A property default value that is a handle will cause all instances to share the same object data. To avoid sharing, create the property value in the constructor. For intentional sharing, consider using a Constant property.\n  17974. performance_tracker.m (line 37): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  17975. performance_tracker.m (line 37): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17976. performance_tracker.m (line 103): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17977. performance_tracker.m (line 113): Value assigned to variable might be unused.\n  17978. performance_tracker.m (line 119): Value assigned to variable might be unused.\n  17979. performance_tracker.m (line 145): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  17980. performance_tracker.m (line 272): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17981. performance_tracker.m (line 307): Input argument might be unused. Consider replacing the argument with ~, or make this method Static instead.\n  17982. performance_tracker.m (line 317): Input argument might be unused. Consider replacing the argument with ~, or make this method Static instead.\n  17983. performance_tracker.m (line 328): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17984. performance_tracker.m (line 369): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17985. performance_tracker.m (line 384): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17986. performance_tracker.m (line 394): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17987. performance_tracker.m (line 400): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17988. performance_tracker.m (line 416): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17989. performance_tracker.m (line 421): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  17990. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\functions\\performance_tracker.m: Missing arguments validation block\n  17991. golf_swing_analysis_gui.m (line 213): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17992. golf_swing_analysis_gui.m (line 594): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17993. golf_swing_analysis_gui.m (line 732): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17994. golf_swing_analysis_gui.m (line 813): Value assigned to variable might be unused.\n  17995. golf_swing_analysis_gui.m (line 839): Value assigned to variable might be unused.\n  17996. golf_swing_analysis_gui.m (line 858): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17997. golf_swing_analysis_gui.m (line 862): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17998. golf_swing_analysis_gui.m (line 866): Input argument might be unused. Consider replacing the argument with ~ instead.\n  17999. golf_swing_analysis_gui.m (line 870): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18000. golf_swing_analysis_gui.m (line 874): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18001. golf_swing_analysis_gui.m (line 878): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18002. golf_swing_analysis_gui.m (line 882): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18003. golf_swing_analysis_gui.m (line 996): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18004. golf_swing_analysis_gui.m (line 1017): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18005. golf_swing_analysis_gui.m (line 1018): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18006. golf_swing_analysis_gui.m (line 1019): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18007. golf_swing_analysis_gui.m (line 1020): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18008. golf_swing_analysis_gui.m (line 1021): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18009. golf_swing_analysis_gui.m (line 1076): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18010. golf_swing_analysis_gui.m (line 1111): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18011. golf_swing_analysis_gui.m (line 1124): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18012. golf_swing_analysis_gui.m (line 1182): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18013. golf_swing_analysis_gui.m (line 1240): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18014. golf_swing_analysis_gui.m (line 1283): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18015. golf_swing_analysis_gui.m (line 1368): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18016. golf_swing_analysis_gui.m (line 1389): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18017. golf_swing_analysis_gui.m (line 1390): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18018. golf_swing_analysis_gui.m (line 1391): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18019. golf_swing_analysis_gui.m (line 1392): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18020. golf_swing_analysis_gui.m (line 1393): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18021. golf_swing_analysis_gui.m (line 1449): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18022. golf_swing_analysis_gui.m (line 1497): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18023. golf_swing_analysis_gui.m (line 1553): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18024. golf_swing_analysis_gui.m (line 1609): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18025. golf_swing_analysis_gui.m (line 1686): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18026. golf_swing_analysis_gui.m (line 1687): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18027. golf_swing_analysis_gui.m (line 1688): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18028. golf_swing_analysis_gui.m (line 1689): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18029. golf_swing_analysis_gui.m (line 1813): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18030. golf_swing_analysis_gui.m (line 1835): Variable might be used before it is defined.\n  18031. golf_swing_analysis_gui.m (line 1913): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18032. golf_swing_analysis_gui.m (line 1998): Variable might be used before it is defined.\n  18033. golf_swing_analysis_gui.m (line 2030): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18034. golf_swing_analysis_gui.m (line 2121): Variable might be used before it is defined.\n  18035. golf_swing_analysis_gui.m (line 2156): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18036. golf_swing_analysis_gui.m (line 2221): Variable might be used before it is defined.\n  18037. golf_swing_analysis_gui.m (line 2253): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18038. golf_swing_analysis_gui.m (line 2275): Variable might be used before it is defined.\n  18039. golf_swing_analysis_gui.m (line 2275): Variable might be used before it is defined.\n  18040. golf_swing_analysis_gui.m (line 2357): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18041. golf_swing_analysis_gui.m (line 2782): Value assigned to variable might be unused.\n  18042. golf_swing_analysis_gui.m (line 2784): Value assigned to variable might be unused.\n  18043. golf_swing_analysis_gui.m (line 2786): Value assigned to variable might be unused.\n  18044. golf_swing_analysis_gui.m (line 2788): Value assigned to variable might be unused.\n  18045. golf_swing_analysis_gui.m (line 3030): Value assigned to variable might be unused.\n  18046. golf_swing_analysis_gui.m (line 3211): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18047. golf_swing_analysis_gui.m (line 3211): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18048. golf_swing_analysis_gui.m (line 3211): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18049. golf_swing_analysis_gui.m (line 3211): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18050. golf_swing_analysis_gui.m (line 3211): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18051. golf_swing_analysis_gui.m (line 3271): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18052. golf_swing_analysis_gui.m (line 3272): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18053. golf_swing_analysis_gui.m (line 3273): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18054. golf_swing_analysis_gui.m (line 3274): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18055. golf_swing_analysis_gui.m (line 3275): Newline following comma acts as a row separator. Replace the comma with a semicolon to make the row separation clearer. Alternatively, use an ellipsis (...) to continue the current row on the next line.\n  18056. golf_swing_analysis_gui.m (line 3344): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18057. golf_swing_analysis_gui.m (line 3422): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  18058. golf_swing_analysis_gui.m (line 3426): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18059. golf_swing_analysis_gui.m (line 3459): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  18060. golf_swing_analysis_gui.m (line 3463): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18061. golf_swing_analysis_gui.m (line 3574): Value assigned to variable might be unused.\n  18062. golf_swing_analysis_gui.m (line 3599): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  18063. golf_swing_analysis_gui.m (line 3603): Function might be unused.\n  18064. golf_swing_analysis_gui.m (line 3605): Value assigned to variable might be unused.\n  18065. golf_swing_analysis_gui.m (line 3674): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18066. golf_swing_analysis_gui.m (line 3731): Value assigned to variable might be unused.\n  18067. golf_swing_analysis_gui.m (line 3751): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18068. golf_swing_analysis_gui.m (line 3826): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  18069. golf_swing_analysis_gui.m (line 3826): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  18070. golf_swing_analysis_gui.m (line 3845): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  18071. golf_swing_analysis_gui.m (line 3845): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  18072. golf_swing_analysis_gui.m (line 3864): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  18073. golf_swing_analysis_gui.m (line 3864): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  18074. golf_swing_analysis_gui.m (line 3887): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  18075. golf_swing_analysis_gui.m (line 3891): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18076. golf_swing_analysis_gui.m (line 3991): To pass MException properties to the warning function, use a format specifier.  For example, warning(E.identifier, '%s', E.message).\n  18077. golf_swing_analysis_gui.m (line 3995): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18078. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\main_scripts\\golf_swing_analysis_gui.m: Missing arguments validation block\n  18079. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\main_scripts\\run_ztcf_zvcf_analysis.m: Missing arguments validation block\n  18080. performance_analysis_script.m (line 57): Value assigned to variable might be unused.\n  18081. performance_analysis_script.m (line 99): Value assigned to variable might be unused.\n  18082. performance_analysis_script.m (line 128): Value assigned to variable might be unused.\n  18083. performance_analysis_script.m (line 139): Value assigned to variable might be unused.\n  18084. performance_analysis_script.m (line 150): Value assigned to variable might be unused.\n  18085. performance_analysis_script.m (line 228): Value assigned to variable might be unused.\n  18086. performance_analysis_script.m (line 251): Value assigned to variable might be unused.\n  18087. performance_analysis_script.m (line 274): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  18088. performance_analysis_script.m (line 274): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  18089. performance_analysis_script.m (line 423): Value assigned to variable might be unused.\n  18090. performance_analysis_script.m (line 424): Value assigned to variable might be unused.\n  18091. performance_analysis_script.m (line 425): Value assigned to variable might be unused.\n  18092. performance_analysis_script.m (line 426): Value assigned to variable might be unused.\n  18093. performance_analysis_script.m (line 427): Value assigned to variable might be unused.\n  18094. performance_analysis_script.m (line 455): 'datestr' is not recommended. With appropriate code changes, use 'datetime' instead.\n  18095. performance_analysis_script.m (line 455): 'now' is not recommended. With appropriate code changes, use 'datetime(\"now\")' instead.\n  18096. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\scripts\\performance_analysis_script.m: Missing arguments validation block\n  18097. run_performance_demo.m (line 14): Value assigned to variable might be unused.\n  18098. run_performance_demo.m (line 57): Function might be unused.\n  18099. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\scripts\\run_performance_demo.m: Missing arguments validation block\n  18100. GolfSwingVisualizer.m (line 589): Value assigned to variable might be unused.\n  18101. GolfSwingVisualizer.m (line 714): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18102. GolfSwingVisualizer.m (line 773): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18103. GolfSwingVisualizer.m (line 843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18104. GolfSwingVisualizer.m (line 1168): Extra semicolon is unnecessary.\n  18105. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\visualization\\GolfSwingVisualizer.m: Missing arguments validation block\n  18106. SkeletonPlotter.m (line 6): Value assigned to variable might be unused.\n  18107. SkeletonPlotter.m (line 14): Value assigned to variable might be unused.\n  18108. SkeletonPlotter.m (line 105): Outer loop index 'k' is set inside a nested function.\n  18109. SkeletonPlotter.m (line 215): Outer loop index 'k' is set inside a nested function.\n  18110. SkeletonPlotter.m (line 287): Outer loop index 'k' is set inside a nested function.\n  18111. SkeletonPlotter.m (line 412): Outer loop index 'k' is set inside a nested function.\n  18112. SkeletonPlotter.m (line 517): Function might be unused.\n  18113. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\visualization\\SkeletonPlotter.m: Missing arguments validation block\n  18114. create_advanced_plot_viewer.m (line 64): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18115. create_advanced_plot_viewer.m (line 160): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18116. create_advanced_plot_viewer.m (line 253): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18117. create_advanced_plot_viewer.m (line 338): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18118. create_advanced_plot_viewer.m (line 430): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18119. create_advanced_plot_viewer.m (line 432): Value assigned to variable might be unused.\n  18120. create_advanced_plot_viewer.m (line 515): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18121. create_advanced_plot_viewer.m (line 520): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18122. create_advanced_plot_viewer.m (line 525): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18123. create_advanced_plot_viewer.m (line 530): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18124. create_advanced_plot_viewer.m (line 535): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18125. create_advanced_plot_viewer.m (line 540): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18126. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\visualization\\create_advanced_plot_viewer.m: Missing arguments validation block\n  18127. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\visualization\\create_animation_window.m: Missing arguments validation block\n  18128. create_data_explorer.m (line 224): Value assigned to variable might be unused.\n  18129. create_data_explorer.m (line 237): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  18130. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\visualization\\create_data_explorer.m: Missing arguments validation block\n  18131. create_performance_monitor.m (line 98): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18132. create_performance_monitor.m (line 116): Value assigned to variable might be unused.\n  18133. create_performance_monitor.m (line 148): Value assigned to variable might be unused.\n  18134. create_performance_monitor.m (line 162): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18135. create_performance_monitor.m (line 210): Value assigned to variable might be unused.\n  18136. create_performance_monitor.m (line 218): Value assigned to variable might be unused.\n  18137. create_performance_monitor.m (line 226): Value assigned to variable might be unused.\n  18138. create_performance_monitor.m (line 273): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18139. create_performance_monitor.m (line 315): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18140. create_performance_monitor.m (line 323): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18141. create_performance_monitor.m (line 334): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18142. create_performance_monitor.m (line 349): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18143. create_performance_monitor.m (line 464): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  18144. create_performance_monitor.m (line 465): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  18145. create_performance_monitor.m (line 466): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  18146. create_performance_monitor.m (line 467): Variable appears to change size on every loop iteration. Consider preallocating for speed.\n  18147. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\visualization\\create_performance_monitor.m: Missing arguments validation block\n  18148. skeleton_plotter_wrapper.m (line 72): Value assigned to variable might be unused.\n  18149. skeleton_plotter_wrapper.m (line 80): Value assigned to variable might be unused.\n  18150. skeleton_plotter_wrapper.m (line 87): Value assigned to variable might be unused.\n  18151. skeleton_plotter_wrapper.m (line 88): Value assigned to variable might be unused.\n  18152. skeleton_plotter_wrapper.m (line 375): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18153. skeleton_plotter_wrapper.m (line 439): Value assigned to variable might be unused.\n  18154. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\2D GUI\\visualization\\skeleton_plotter_wrapper.m: Missing arguments validation block\n  18155. GolfClubInverseDynamicsGUI.m (line 119): Value assigned to variable might be unused.\n  18156. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Motion Capture Plotter\\Archive\\Matlab Inverse Dynamics\\GolfClubInverseDynamicsGUI.m: Missing function docstring\n  18157. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Motion Capture Plotter\\Archive\\Matlab Inverse Dynamics\\GolfClubInverseDynamicsGUI.m: Missing arguments validation block\n  18158. InvDynamicsMATLABGPT.m (line 19): An END might be missing, possibly matching FUNCTION.\n  18159. InvDynamicsMATLABGPT.m (line 42): Value assigned to variable might be unused.\n  18160. InvDynamicsMATLABGPT.m (line 142): Outer loop index 'i' is set inside a nested function.\n  18161. InvDynamicsMATLABGPT.m (line 256): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  18162. InvDynamicsMATLABGPT.m (line 256): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  18163. InvDynamicsMATLABGPT.m (line 331): Function might be unused.\n  18164. InvDynamicsMATLABGPT.m (line 384): The current use of 'updateFrame' is inconsistent with its previous use or definition (line 244).\n  18165. InvDynamicsMATLABGPT.m (line 394): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  18166. InvDynamicsMATLABGPT.m (line 394): Value assigned to variable might be unused. Consider replacing the variable with ~ instead.\n  18167. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Motion Capture Plotter\\Archive\\Matlab Inverse Dynamics\\InvDynamicsMATLABGPT.m: Missing arguments validation block\n  18168. GolfClubInverseDynamicsGUI.m (line 1): An END might be missing, possibly matching FUNCTION.\n  18169. GolfClubInverseDynamicsGUI.m (line 24): Value assigned to variable might be unused.\n  18170. GolfClubInverseDynamicsGUI.m (line 160): Function might be unused.\n  18171. GolfClubInverseDynamicsGUI.m (line 199): Function might be unused.\n  18172. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Motion Capture Plotter\\Archive\\Matlab Inverse Dynamics\\Mulligan\\GolfClubInverseDynamicsGUI.m: Missing arguments validation block\n  18173. Part12.m (line 1): Function name 'GolfClubInverseDynamicsGUI' is known to MATLAB by its file name: 'Part12'.\n  18174. Part12.m (line 6): Value assigned to variable might be unused.\n  18175. Part12.m (line 24): Value assigned to variable might be unused.\n  18176. Part12.m (line 51): This variable, apparently a structure, is changed but the value might be unused.\n  18177. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Motion Capture Plotter\\Archive\\Matlab Inverse Dynamics\\Mulligan\\Part12.m: Missing arguments validation block\n  18178. Part4.m (line 2): Function name 'updateOffset' is known to MATLAB by its file name: 'Part4'.\n  18179. Part4.m (line 13): Function might be unused.\n  18180. Part4.m (line 26): Function might be unused.\n  18181. Part4.m (line 65): Function might be unused.\n  18182. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Motion Capture Plotter\\Archive\\Matlab Inverse Dynamics\\Mulligan\\Part4.m: Missing function docstring\n  18183. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Motion Capture Plotter\\Archive\\Matlab Inverse Dynamics\\Mulligan\\Part4.m: Missing arguments validation block\n  18184. GolfSwingVisualizer.m (line 589): Value assigned to variable might be unused.\n  18185. GolfSwingVisualizer.m (line 714): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18186. GolfSwingVisualizer.m (line 773): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18187. GolfSwingVisualizer.m (line 843): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18188. GolfSwingVisualizer.m (line 1168): Extra semicolon is unnecessary.\n  18189. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Simscape Multibody Data Plotters\\Matlab Versions\\SkeletonPlotter\\GolfSwingVisualizer.m: Missing arguments validation block\n  18190. Safe_Copy_of_SkeletonPlotter.m (line 1): Function name 'SkeletonPlotter' is known to MATLAB by its file name: 'Safe_Copy_of_SkeletonPlotter'.\n  18191. Safe_Copy_of_SkeletonPlotter.m (line 6): Value assigned to variable might be unused.\n  18192. Safe_Copy_of_SkeletonPlotter.m (line 14): Value assigned to variable might be unused.\n  18193. Safe_Copy_of_SkeletonPlotter.m (line 89): Outer loop index 'k' is set inside a nested function.\n  18194. Safe_Copy_of_SkeletonPlotter.m (line 199): Outer loop index 'k' is set inside a nested function.\n  18195. Safe_Copy_of_SkeletonPlotter.m (line 271): Outer loop index 'k' is set inside a nested function.\n  18196. Safe_Copy_of_SkeletonPlotter.m (line 368): Outer loop index 'k' is set inside a nested function.\n  18197. Safe_Copy_of_SkeletonPlotter.m (line 473): Function might be unused.\n  18198. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Simscape Multibody Data Plotters\\Matlab Versions\\SkeletonPlotter\\Older Revs\\Safe_Copy_of_SkeletonPlotter.m: Missing arguments validation block\n  18199. SkeletonPlotter.m (line 6): Value assigned to variable might be unused.\n  18200. SkeletonPlotter.m (line 14): Value assigned to variable might be unused.\n  18201. SkeletonPlotter.m (line 89): Outer loop index 'k' is set inside a nested function.\n  18202. SkeletonPlotter.m (line 199): Outer loop index 'k' is set inside a nested function.\n  18203. SkeletonPlotter.m (line 271): Outer loop index 'k' is set inside a nested function.\n  18204. SkeletonPlotter.m (line 368): Outer loop index 'k' is set inside a nested function.\n  18205. SkeletonPlotter.m (line 473): Function might be unused.\n  18206. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Simscape Multibody Data Plotters\\Matlab Versions\\SkeletonPlotter\\Older Revs\\SkeletonPlotter.m: Missing arguments validation block\n  18207. TestSkeletonPlotter.m (line 6): Value assigned to variable might be unused.\n  18208. TestSkeletonPlotter.m (line 9): Value assigned to variable might be unused.\n  18209. TestSkeletonPlotter.m (line 10): Value assigned to variable might be unused.\n  18210. TestSkeletonPlotter.m (line 14): Value assigned to variable might be unused.\n  18211. TestSkeletonPlotter.m (line 15): Value assigned to variable might be unused.\n  18212. TestSkeletonPlotter.m (line 16): Value assigned to variable might be unused.\n  18213. TestSkeletonPlotter.m (line 21): Value assigned to variable might be unused.\n  18214. TestSkeletonPlotter.m (line 22): Value assigned to variable might be unused.\n  18215. TestSkeletonPlotter.m (line 23): Value assigned to variable might be unused.\n  18216. TestSkeletonPlotter.m (line 24): Value assigned to variable might be unused.\n  18217. TestSkeletonPlotter.m (line 25): Value assigned to variable might be unused.\n  18218. TestSkeletonPlotter.m (line 28): Value assigned to variable might be unused.\n  18219. TestSkeletonPlotter.m (line 36): Value assigned to variable might be unused.\n  18220. TestSkeletonPlotter.m (line 37): Value assigned to variable might be unused.\n  18221. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Golf_GUI\\Simscape Multibody Data Plotters\\Matlab Versions\\SkeletonPlotter\\Older Revs\\TestSkeletonPlotter.m: Missing arguments validation block\n  18222. fix_data_export_format.m (line 18): Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.\n  18223. search_all_signals.m (line 87): Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.\n  18224. search_all_signals.m (line 88): Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.\n  18225. search_all_signals.m (line 164): Variable appears to change size on every loop iteration (within a script). Consider preallocating for speed.\n  18226. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\MASTER_SCRIPT_AllCharts_3D.m: Missing arguments validation block\n  18227. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_AllQuiverCharts.m: Missing arguments validation block\n  18228. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_BASEQuiver.m: Missing arguments validation block\n  18229. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_BASE_Plots.m: Missing arguments validation block\n  18230. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_ComparisonQuiver.m: Missing arguments validation block\n  18231. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_Comparison_Plots.m: Missing arguments validation block\n  18232. PLOT_DELTAQuiver.m (line 1): Input argument might be unused. Consider replacing the argument with ~ instead.\n  18233. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_DELTAQuiver.m: Missing arguments validation block\n  18234. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_DELTA_Plots.m: Missing arguments validation block\n  18235. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_ModelDataQuiver.m: Missing arguments validation block\n  18236. PLOT_ModelData_Plots.m (line 1): Function name 'PLOT__Plots' is known to MATLAB by its file name: 'PLOT_ModelData_Plots'.\n  18237. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_ModelData_Plots.m: Missing arguments validation block\n  18238. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_ZTCFQuiver.m: Missing arguments validation block\n  18239. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_ZTCF_Plots.m: Missing arguments validation block\n  18240. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\Scripts\\Plotting Scripts\\PLOT_ZVCFQuiver.m: Missing arguments validation block\n  18241. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\tests\\test_example.m: Missing function docstring\n  18242. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\tests\\test_example.m: Missing arguments validation block\n  18243. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\tests\\test_quality_checks.m: Missing function docstring\n  18244. C:\\Users\\diete\\Repositories\\Golf_Model\\matlab\\tests\\test_quality_checks.m: Missing arguments validation block\n  18245. Directory mlint failed: Unable to open file \".\". File is not found or is not a supported MATLAB code file.\n\n\u007f MATLAB quality configuration complete\n",
      "method": "matlab_script"
    }
  }
}
