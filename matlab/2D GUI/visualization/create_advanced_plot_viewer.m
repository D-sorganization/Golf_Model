function [fig, plot_handles] = create_advanced_plot_viewer(config)
% CREATE_ADVANCED_PLOT_VIEWER - Create advanced interactive plot viewer
%
% Inputs:
%   config - Configuration structure from model_config()
%
% Returns:
%   fig - Figure handle
%   plot_handles - Structure containing plot viewer handles
%
% This function creates a comprehensive plot viewer with:
% - Multiple plot types (time series, phase plots, quiver plots)
% - Interactive data exploration
% - Comparison tools
% - Export capabilities

    % Create figure
    fig = figure('Name', [config.gui_title ' - Advanced Plot Viewer'], ...
                 'NumberTitle', 'off', ...
                 'Position', [200, 100, 1400, 900], ...
                 'Color', config.colors.background, ...
                 'MenuBar', 'none', ...
                 'ToolBar', 'none', ...
                 'Resize', 'on');

    % Create main layout
    plot_handles = struct();

    % Create tab group for different plot types
    plot_handles.tab_group = uitabgroup('Parent', fig, ...
                                       'Position', [0.02, 0.02, 0.96, 0.96]);

    % Create tabs for different plot categories
    plot_handles.time_series_tab = uitab('Parent', plot_handles.tab_group, ...
                                        'Title', 'Time Series');
    plot_handles.phase_plots_tab = uitab('Parent', plot_handles.tab_group, ...
                                        'Title', 'Phase Plots');
    plot_handles.quiver_plots_tab = uitab('Parent', plot_handles.tab_group, ...
                                         'Title', 'Quiver Plots');
    plot_handles.comparison_tab = uitab('Parent', plot_handles.tab_group, ...
                                       'Title', 'Comparisons');
    plot_handles.help_tab = uitab('Parent', plot_handles.tab_group, ...
                                 'Title', 'Help & Info');

    % Create time series plot panel
    create_time_series_panel(plot_handles.time_series_tab, config);

    % Create phase plots panel
    create_phase_plots_panel(plot_handles.phase_plots_tab, config);

    % Create quiver plots panel
    create_quiver_plots_panel(plot_handles.quiver_plots_tab, config);

    % Create comparison panel
    create_comparison_panel(plot_handles.comparison_tab, config);

    % Create help panel
    create_help_panel(plot_handles.help_tab, config);

    fprintf('âœ… Advanced plot viewer created successfully\n');

end

function create_time_series_panel(parent, config)
    % Create control panel
    control_panel = uipanel('Parent', parent, ...
                           'Title', 'Time Series Controls', ...
                           'FontSize', 11, ...
                           'Position', [0.02, 0.02, 0.25, 0.96]);

    % Data selection
    uicontrol('Parent', control_panel, ...
              'Style', 'text', ...
              'String', 'Data Source:', ...
              'FontSize', 10, ...
              'Position', [10, 350, 100, 20], ...
              'HorizontalAlignment', 'left');

    data_source_popup = uicontrol('Parent', control_panel, ...
                                 'Style', 'popupmenu', ...
                                 'String', {'BASE', 'ZTCF', 'DELTA', 'ZVCF'}, ...
                                 'FontSize', 10, ...
                                 'Position', [10, 320, 150, 25], ...
                                 'Callback', @update_time_series_plot);

    % Variable selection
    uicontrol('Parent', control_panel, ...
              'Style', 'text', ...
              'String', 'Variable:', ...
              'FontSize', 10, ...
              'Position', [10, 290, 100, 20], ...
              'HorizontalAlignment', 'left');

    variable_popup = uicontrol('Parent', control_panel, ...
                              'Style', 'popupmenu', ...
                              'String', {'Select variable...'}, ...
                              'FontSize', 10, ...
                              'Position', [10, 260, 150, 25], ...
                              'Callback', @update_time_series_plot);

    % Plot options
    uicontrol('Parent', control_panel, ...
              'Style', 'text', ...
              'String', 'Plot Options:', ...
              'FontSize', 10, ...
              'Position', [10, 230, 100, 20], ...
              'HorizontalAlignment', 'left');

    % Multiple variables checkbox
    multi_var_checkbox = uicontrol('Parent', control_panel, ...
                                  'Style', 'checkbox', ...
                                  'String', 'Multiple Variables', ...
                                  'FontSize', 10, ...
                                  'Position', [10, 200, 120, 20], ...
                                  'Callback', @toggle_multi_variable);

    % Grid checkbox
    grid_checkbox = uicontrol('Parent', control_panel, ...
                             'Style', 'checkbox', ...
                             'String', 'Show Grid', ...
                             'FontSize', 10, ...
                             'Position', [10, 170, 100, 20], ...
                             'Value', 1, ...
                             'Callback', @update_time_series_plot);

    % Legend checkbox
    legend_checkbox = uicontrol('Parent', control_panel, ...
                               'Style', 'checkbox', ...
                               'String', 'Show Legend', ...
                               'FontSize', 10, ...
                               'Position', [10, 140, 100, 20], ...
                               'Value', 1, ...
                               'Callback', @update_time_series_plot);

    % Export button
    uicontrol('Parent', control_panel, ...
              'Style', 'pushbutton', ...
              'String', 'Export Plot', ...
              'FontSize', 10, ...
              'Position', [10, 100, 100, 30], ...
              'Callback', @export_plot);

    % Create plot axes
    plot_axes = axes('Parent', parent, ...
                     'Position', [0.3, 0.1, 0.65, 0.8], ...
                     'Box', 'on', ...
                     'GridLineStyle', ':', ...
                     'GridAlpha', 0.3);

    % Store handles
    setappdata(parent, 'data_source_popup', data_source_popup);
    setappdata(parent, 'variable_popup', variable_popup);
    setappdata(parent, 'multi_var_checkbox', multi_var_checkbox);
    setappdata(parent, 'grid_checkbox', grid_checkbox);
    setappdata(parent, 'legend_checkbox', legend_checkbox);
    setappdata(parent, 'plot_axes', plot_axes);

end

function create_phase_plots_panel(parent, config)
    % Create control panel
    control_panel = uipanel('Parent', parent, ...
                           'Title', 'Phase Plot Controls', ...
                           'FontSize', 11, ...
                           'Position', [0.02, 0.02, 0.25, 0.96]);

    % X-axis variable
    uicontrol('Parent', control_panel, ...
              'Style', 'text', ...
              'String', 'X-Axis Variable:', ...
              'FontSize', 10, ...
              'Position', [10, 350, 100, 20], ...
              'HorizontalAlignment', 'left');

    x_var_popup = uicontrol('Parent', control_panel, ...
                           'Style', 'popupmenu', ...
                           'String', {'Select variable...'}, ...
                           'FontSize', 10, ...
                           'Position', [10, 320, 150, 25], ...
                           'Callback', @update_phase_plot);

    % Y-axis variable
    uicontrol('Parent', control_panel, ...
              'Style', 'text', ...
              'String', 'Y-Axis Variable:', ...
              'FontSize', 10, ...
              'Position', [10, 290, 100, 20], ...
              'HorizontalAlignment', 'left');

    y_var_popup = uicontrol('Parent', control_panel, ...
                           'Style', 'popupmenu', ...
                           'String', {'Select variable...'}, ...
                           'FontSize', 10, ...
                           'Position', [10, 260, 150, 25], ...
                           'Callback', @update_phase_plot);

    % Data source
    uicontrol('Parent', control_panel, ...
              'Style', 'text', ...
              'String', 'Data Source:', ...
              'FontSize', 10, ...
              'Position', [10, 230, 100, 20], ...
              'HorizontalAlignment', 'left');

    data_source_popup = uicontrol('Parent', control_panel, ...
                                 'Style', 'popupmenu', ...
                                 'String', {'BASE', 'ZTCF', 'DELTA', 'ZVCF'}, ...
                                 'FontSize', 10, ...
                                 'Position', [10, 200, 150, 25], ...
                                 'Callback', @update_phase_plot);

    % Plot options
    uicontrol('Parent', control_panel, ...
              'Style', 'text', ...
              'String', 'Plot Options:', ...
              'FontSize', 10, ...
              'Position', [10, 170, 100, 20], ...
              'HorizontalAlignment', 'left');

    % Color by time checkbox
    color_time_checkbox = uicontrol('Parent', control_panel, ...
                                   'Style', 'checkbox', ...
                                   'String', 'Color by Time', ...
                                   'FontSize', 10, ...
                                   'Position', [10, 140, 100, 20], ...
                                   'Value', 1, ...
                                   'Callback', @update_phase_plot);

    % Export button
    uicontrol('Parent', control_panel, ...
              'Style', 'pushbutton', ...
              'String', 'Export Plot', ...
              'FontSize', 10, ...
              'Position', [10, 100, 100, 30], ...
              'Callback', @export_plot);

    % Create plot axes
    plot_axes = axes('Parent', parent, ...
                     'Position', [0.3, 0.1, 0.65, 0.8], ...
                     'Box', 'on', ...
                     'GridLineStyle', ':', ...
                     'GridAlpha', 0.3);

    % Store handles
    setappdata(parent, 'x_var_popup', x_var_popup);
    setappdata(parent, 'y_var_popup', y_var_popup);
    setappdata(parent, 'data_source_popup', data_source_popup);
    setappdata(parent, 'color_time_checkbox', color_time_checkbox);
    setappdata(parent, 'plot_axes', plot_axes);

end

function create_quiver_plots_panel(parent, config)
    % Create control panel
    control_panel = uipanel('Parent', parent, ...
                           'Title', 'Quiver Plot Controls', ...
                           'FontSize', 11, ...
                           'Position', [0.02, 0.02, 0.25, 0.96]);

    % Quiver plot type
    uicontrol('Parent', control_panel, ...
              'Style', 'text', ...
              'String', 'Quiver Type:', ...
              'FontSize', 10, ...
              'Position', [10, 350, 100, 20], ...
              'HorizontalAlignment', 'left');

    quiver_type_popup = uicontrol('Parent', control_panel, ...
                                 'Style', 'popupmenu', ...
                                 'String', {'Club Forces', 'Hand Forces', 'Joint Torques', 'Custom'}, ...
                                 'FontSize', 10, ...
                                 'Position', [10, 320, 150, 25], ...
                                 'Callback', @update_quiver_plot);

    % Time point slider
    uicontrol('Parent', control_panel, ...
              'Style', 'text', ...
              'String', 'Time Point:', ...
              'FontSize', 10, ...
              'Position', [10, 290, 100, 20], ...
              'HorizontalAlignment', 'left');

    time_slider = uicontrol('Parent', control_panel, ...
                           'Style', 'slider', ...
                           'Min', 0, ...
                           'Max', 1, ...
                           'Value', 0.5, ...
                           'Position', [10, 260, 150, 20], ...
                           'Callback', @update_quiver_plot);

    % Time display
    time_display = uicontrol('Parent', control_panel, ...
                            'Style', 'text', ...
                            'String', '0.140s', ...
                            'FontSize', 10, ...
                            'Position', [10, 240, 100, 20], ...
                            'HorizontalAlignment', 'center');

    % Scale factor
    uicontrol('Parent', control_panel, ...
              'Style', 'text', ...
              'String', 'Scale Factor:', ...
              'FontSize', 10, ...
              'Position', [10, 210, 100, 20], ...
              'HorizontalAlignment', 'left');

    scale_edit = uicontrol('Parent', control_panel, ...
                          'Style', 'edit', ...
                          'String', '1.0', ...
                          'FontSize', 10, ...
                          'Position', [10, 180, 80, 25], ...
                          'Callback', @update_quiver_plot);

    % Export button
    uicontrol('Parent', control_panel, ...
              'Style', 'pushbutton', ...
              'String', 'Export Plot', ...
              'FontSize', 10, ...
              'Position', [10, 100, 100, 30], ...
              'Callback', @export_plot);

    % Create plot axes
    plot_axes = axes('Parent', parent, ...
                     'Position', [0.3, 0.1, 0.65, 0.8], ...
                     'Box', 'on', ...
                     'GridLineStyle', ':', ...
                     'GridAlpha', 0.3);

    % Store handles
    setappdata(parent, 'quiver_type_popup', quiver_type_popup);
    setappdata(parent, 'time_slider', time_slider);
    setappdata(parent, 'time_display', time_display);
    setappdata(parent, 'scale_edit', scale_edit);
    setappdata(parent, 'plot_axes', plot_axes);

end

function create_comparison_panel(parent, config)
    % Create control panel
    control_panel = uipanel('Parent', parent, ...
                           'Title', 'Comparison Controls', ...
                           'FontSize', 11, ...
                           'Position', [0.02, 0.02, 0.25, 0.96]);

    % Dataset 1
    uicontrol('Parent', control_panel, ...
              'Style', 'text', ...
              'String', 'Dataset 1:', ...
              'FontSize', 10, ...
              'Position', [10, 350, 100, 20], ...
              'HorizontalAlignment', 'left');

    dataset1_popup = uicontrol('Parent', control_panel, ...
                              'Style', 'popupmenu', ...
                              'String', {'BASE', 'ZTCF', 'DELTA', 'ZVCF'}, ...
                              'FontSize', 10, ...
                              'Position', [10, 320, 150, 25], ...
                              'Callback', @update_comparison_plot);

    % Dataset 2
    uicontrol('Parent', control_panel, ...
              'Style', 'text', ...
              'String', 'Dataset 2:', ...
              'FontSize', 10, ...
              'Position', [10, 290, 100, 20], ...
              'HorizontalAlignment', 'left');

    dataset2_popup = uicontrol('Parent', control_panel, ...
                              'Style', 'popupmenu', ...
                              'String', {'BASE', 'ZTCF', 'DELTA', 'ZVCF'}, ...
                              'FontSize', 10, ...
                              'Position', [10, 260, 150, 25], ...
                              'Value', 2, ...
                              'Callback', @update_comparison_plot);

    % Variable selection
    uicontrol('Parent', control_panel, ...
              'Style', 'text', ...
              'String', 'Variable:', ...
              'FontSize', 10, ...
              'Position', [10, 230, 100, 20], ...
              'HorizontalAlignment', 'left');

    variable_popup = uicontrol('Parent', control_panel, ...
                              'Style', 'popupmenu', ...
                              'String', {'Select variable...'}, ...
                              'FontSize', 10, ...
                              'Position', [10, 200, 150, 25], ...
                              'Callback', @update_comparison_plot);

    % Comparison type
    uicontrol('Parent', control_panel, ...
              'Style', 'text', ...
              'String', 'Comparison Type:', ...
              'FontSize', 10, ...
              'Position', [10, 170, 100, 20], ...
              'HorizontalAlignment', 'left');

    comparison_type_popup = uicontrol('Parent', control_panel, ...
                                     'Style', 'popupmenu', ...
                                     'String', {'Overlay', 'Difference', 'Ratio', 'Correlation'}, ...
                                     'FontSize', 10, ...
                                     'Position', [10, 140, 150, 25], ...
                                     'Callback', @update_comparison_plot);

    % Export button
    uicontrol('Parent', control_panel, ...
              'Style', 'pushbutton', ...
              'String', 'Export Plot', ...
              'FontSize', 10, ...
              'Position', [10, 100, 100, 30], ...
              'Callback', @export_plot);

    % Create plot axes
    plot_axes = axes('Parent', parent, ...
                     'Position', [0.3, 0.1, 0.65, 0.8], ...
                     'Box', 'on', ...
                     'GridLineStyle', ':', ...
                     'GridAlpha', 0.3);

    % Store handles
    setappdata(parent, 'dataset1_popup', dataset1_popup);
    setappdata(parent, 'dataset2_popup', dataset2_popup);
    setappdata(parent, 'variable_popup', variable_popup);
    setappdata(parent, 'comparison_type_popup', comparison_type_popup);
    setappdata(parent, 'plot_axes', plot_axes);

end

function create_help_panel(parent, config)
    % Create help text area
    help_text = uicontrol('Parent', parent, ...
                         'Style', 'text', ...
                         'String', get_help_text(), ...
                         'FontSize', 10, ...
                         'Position', [20, 20, 1350, 850], ...
                         'HorizontalAlignment', 'left', ...
                         'BackgroundColor', [0.98, 0.98, 0.98]);

end

function help_text = get_help_text()
    help_text = {
        'GOLF SWING ANALYSIS GUI - HELP & INFORMATION';
        '=============================================';
        '';
        'OVERVIEW:';
        'This GUI provides comprehensive analysis and visualization tools for the 2D Golf Swing Model.';
        'It includes ZTCF (Zero Torque Counterfactual) and ZVCF (Zero Velocity Counterfactual) analysis.';
        '';
        'MAIN FEATURES:';
        '';
        '1. TIME SERIES PLOTS:';
        '   â€¢ View any variable over time from BASE, ZTCF, DELTA, or ZVCF datasets';
        '   â€¢ Multiple variable overlay capability';
        '   â€¢ Interactive zoom and pan';
        '   â€¢ Export plots as images or data';
        '';
        '2. PHASE PLOTS:';
        '   â€¢ Plot one variable against another (e.g., position vs velocity)';
        '   â€¢ Color coding by time to show trajectory';
        '   â€¢ Useful for identifying patterns and relationships';
        '';
        '3. QUIVER PLOTS:';
        '   â€¢ Visualize force vectors and torques at specific time points';
        '   â€¢ Interactive time slider to explore different moments';
        '   â€¢ Adjustable scale factors for better visualization';
        '';
        '4. COMPARISON TOOLS:';
        '   â€¢ Compare different datasets (BASE vs ZTCF, etc.)';
        '   â€¢ Multiple comparison types: overlay, difference, ratio, correlation';
        '   â€¢ Statistical analysis of differences';
        '';
        'DATA UNDERSTANDING:';
        '';
        'â€¢ BASE: Original simulation data with all torques active';
        'â€¢ ZTCF: Zero Torque Counterfactual - shows passive effects';
        'â€¢ DELTA: Difference between BASE and ZTCF (active effects)';
        'â€¢ ZVCF: Zero Velocity Counterfactual - shows inertial effects';
        '';
        'KEY VARIABLES:';
        '';
        'â€¢ Club Head Speed: Velocity of the club head';
        'â€¢ Hand Forces: Forces applied by the hands';
        'â€¢ Joint Torques: Torques at each joint';
        'â€¢ Angular Velocities: Rotational speeds of body segments';
        'â€¢ Positions: Spatial positions of body segments';
        '';
        'USAGE TIPS:';
        '';
        '1. Start with Time Series plots to understand the overall swing dynamics';
        '2. Use Phase Plots to identify relationships between variables';
        '3. Explore Quiver Plots to understand force patterns at key moments';
        '4. Use Comparison tools to analyze the effects of different conditions';
        '';
        'EXPORT FEATURES:';
        '';
        'â€¢ Save plots as high-resolution images (PNG, JPG, PDF)';
        'â€¢ Export data as CSV or MAT files for further analysis';
        'â€¢ Copy plots to clipboard for presentations';
        '';
        'TROUBLESHOOTING:';
        '';
        'â€¢ If plots appear empty, ensure data has been loaded or generated';
        'â€¢ Use the Help tab for detailed information about each feature';
        'â€¢ Check the console for error messages and warnings';
        '';
        'For technical support or questions, refer to the project documentation.';
    };

    help_text = strjoin(help_text, '\n');
end

% Callback functions (placeholders - would need to be implemented based on data structure)
function update_time_series_plot(src, ~)
    fprintf('ðŸ”„ Updating time series plot...\n');
    % Implementation would extract data and update plot
end

function update_phase_plot(src, ~)
    fprintf('ðŸ”„ Updating phase plot...\n');
    % Implementation would extract data and update plot
end

function update_quiver_plot(src, ~)
    fprintf('ðŸ”„ Updating quiver plot...\n');
    % Implementation would extract data and update plot
end

function update_comparison_plot(src, ~)
    fprintf('ðŸ”„ Updating comparison plot...\n');
    % Implementation would extract data and update plot
end

function toggle_multi_variable(src, ~)
    fprintf('ðŸ”„ Toggling multi-variable mode...\n');
    % Implementation would show/hide additional variable selection
end

function export_plot(src, ~)
    fprintf('ðŸ’¾ Exporting plot...\n');
    % Implementation would save plot in various formats
end
