function handles = gui_layout_manager(fig, handles)
    % GUI_LAYOUT_MANAGER - Create main GUI layout with professional design
    %
    % This function creates the main layout for the Enhanced Golf Swing Data Generator
    % with a tabbed interface, professional styling, and organized content areas.
    %
    % Inputs:
    %   fig - Figure handle for the main GUI
    %   handles - GUI handles structure to update
    %
    % Outputs:
    %   handles - Updated handles structure with all GUI elements
    
    colors = handles.colors;
    
    % Create main layout
    handles = createMainLayout(fig, handles);
    
    % Create tab content
    handles = createGenerationTabContent(handles.mainPanel, handles);
    handles = createPerformanceTabContent(handles.mainPanel, handles);
    handles = createPostProcessingTabContent(handles.mainPanel, handles);
    
    % Store handles in figure
    guidata(fig, handles);
end

function handles = createMainLayout(fig, handles)
    % CREATEMAINLAYOUT - Create the main layout structure
    %
    % Inputs:
    %   fig - Figure handle
    %   handles - Handles structure
    %
    % Outputs:
    %   handles - Updated handles structure
    
    colors = handles.colors;
    
    % Main container
    mainPanel = uipanel('Parent', fig, ...
                       'Units', 'normalized', ...
                       'Position', [0, 0, 1, 1], ...
                       'BorderType', 'none', ...
                       'BackgroundColor', colors.background);
    
    % Title bar
    titleHeight = 0.06;
    titlePanel = uipanel('Parent', mainPanel, ...
                        'Units', 'normalized', ...
                        'Position', [0, 1-titleHeight, 1, titleHeight], ...
                        'BackgroundColor', colors.primary, ...
                        'BorderType', 'none');
    
    % Title text
    uicontrol('Parent', titlePanel, ...
              'Style', 'text', ...
              'String', 'Enhanced Golf Swing Data Generator', ...
              'Units', 'normalized', ...
              'Position', [0.02, 0.2, 0.4, 0.6], ...
              'FontSize', 14, ...
              'FontWeight', 'normal', ...
              'ForegroundColor', 'white', ...
              'BackgroundColor', colors.primary, ...
              'HorizontalAlignment', 'left');
    
    % Control buttons in title bar
    handles = createTitleBarButtons(titlePanel, handles);
    
    % Tab bar
    tabHeight = 0.04;
    tabBarPanel = uipanel('Parent', mainPanel, ...
                         'Units', 'normalized', ...
                         'Position', [0, 1-titleHeight-tabHeight, 1, tabHeight], ...
                         'BackgroundColor', colors.background, ...
                         'BorderType', 'none');
    
    % Tab buttons
    handles = createTabButtons(tabBarPanel, handles);
    
    % Content area
    contentHeight = 1 - titleHeight - tabHeight;
    contentPanel = uipanel('Parent', mainPanel, ...
                          'Units', 'normalized', ...
                          'Position', [0, 0, 1, contentHeight], ...
                          'BackgroundColor', colors.background, ...
                          'BorderType', 'none');
    
    % Store main panel reference
    handles.mainPanel = contentPanel;
    handles.titlePanel = titlePanel;
    handles.tabBarPanel = tabBarPanel;
end

function handles = createTitleBarButtons(titlePanel, handles)
    % CREATETITLEBARBUTTONS - Create control buttons in title bar
    %
    % Inputs:
    %   titlePanel - Title panel handle
    %   handles - Handles structure
    %
    % Outputs:
    %   handles - Updated handles structure
    
    colors = handles.colors;
    
    buttonWidth = 0.07;
    buttonHeight = 0.6;
    buttonSpacing = 0.01;
    buttonY = 0.2;
    
    % Calculate positions to right-align buttons
    totalButtonWidth = 6 * buttonWidth + 5 * buttonSpacing + 0.04;
    startX = 1.0 - totalButtonWidth - 0.02;
    
    % Play/Pause button
    handles.play_pause_button = uicontrol('Parent', titlePanel, ...
                                         'Style', 'pushbutton', ...
                                         'String', 'Start', ...
                                         'Units', 'normalized', ...
                                         'Position', [startX, buttonY, buttonWidth, buttonHeight], ...
                                         'BackgroundColor', colors.success, ...
                                         'ForegroundColor', [1, 1, 1], ...
                                         'FontWeight', 'bold', ...
                                         'FontName', 'Arial', ...
                                         'FontSize', 10, ...
                                         'Callback', @togglePlayPause);
    
    % Stop button
    handles.stop_button = uicontrol('Parent', titlePanel, ...
                                   'Style', 'pushbutton', ...
                                   'String', 'Stop', ...
                                   'Units', 'normalized', ...
                                   'Position', [startX + buttonWidth + buttonSpacing, buttonY, buttonWidth, buttonHeight], ...
                                   'BackgroundColor', colors.danger, ...
                                   'ForegroundColor', [1, 1, 1], ...
                                   'FontWeight', 'bold', ...
                                   'FontName', 'Arial', ...
                                   'FontSize', 10, ...
                                   'Callback', @stopGeneration);
    
    % Checkpoint button
    handles.checkpoint_button = uicontrol('Parent', titlePanel, ...
                                         'Style', 'pushbutton', ...
                                         'String', 'Checkpoint', ...
                                         'Units', 'normalized', ...
                                         'Position', [startX + 2*(buttonWidth + buttonSpacing), buttonY, buttonWidth, buttonHeight], ...
                                         'BackgroundColor', colors.secondary, ...
                                         'ForegroundColor', [1, 1, 1], ...
                                         'FontWeight', 'bold', ...
                                         'FontName', 'Arial', ...
                                         'FontSize', 10, ...
                                         'Callback', @saveCheckpoint);
    
    % Save config button
    handles.save_config_button = uicontrol('Parent', titlePanel, ...
                                          'Style', 'pushbutton', ...
                                          'String', 'Save Config', ...
                                          'Units', 'normalized', ...
                                          'Position', [startX + 3*(buttonWidth + buttonSpacing), buttonY, buttonWidth + 0.02, buttonHeight], ...
                                          'BackgroundColor', colors.secondary, ...
                                          'ForegroundColor', [1, 1, 1], ...
                                          'FontWeight', 'bold', ...
                                          'FontName', 'Arial', ...
                                          'FontSize', 10, ...
                                          'Callback', @saveConfiguration);
    
    % Load config button
    handles.load_config_button = uicontrol('Parent', titlePanel, ...
                                          'Style', 'pushbutton', ...
                                          'String', 'Load Config', ...
                                          'Units', 'normalized', ...
                                          'Position', [startX + 4*(buttonWidth + buttonSpacing) + 0.02, buttonY, buttonWidth + 0.02, buttonHeight], ...
                                          'BackgroundColor', colors.secondary, ...
                                          'ForegroundColor', [1, 1, 1], ...
                                          'FontWeight', 'bold', ...
                                          'FontName', 'Arial', ...
                                          'FontSize', 10, ...
                                          'Callback', @loadConfiguration);
end

function handles = createTabButtons(tabBarPanel, handles)
    % CREATETABBUTTONS - Create tab navigation buttons
    %
    % Inputs:
    %   tabBarPanel - Tab bar panel handle
    %   handles - Handles structure
    %
    % Outputs:
    %   handles - Updated handles structure
    
    colors = handles.colors;
    
    tabWidth = 0.15;
    tabSpacing = 0.01;
    
    % Generation tab
    handles.generation_tab = uicontrol('Parent', tabBarPanel, ...
                                      'Style', 'pushbutton', ...
                                      'String', 'Data Generation', ...
                                      'Units', 'normalized', ...
                                      'Position', [0.02, 0.1, tabWidth, 0.8], ...
                                      'BackgroundColor', colors.tabActive, ...
                                      'ForegroundColor', colors.text, ...
                                      'FontWeight', 'bold', ...
                                      'FontName', 'Arial', ...
                                      'FontSize', 10, ...
                                      'Callback', @switchToGenerationTab);
    
    % Post-Processing tab
    handles.postprocessing_tab = uicontrol('Parent', tabBarPanel, ...
                                          'Style', 'pushbutton', ...
                                          'String', 'Post-Processing', ...
                                          'Units', 'normalized', ...
                                          'Position', [0.02 + tabWidth + tabSpacing, 0.1, tabWidth, 0.8], ...
                                          'BackgroundColor', colors.tabInactive, ...
                                          'ForegroundColor', colors.textLight, ...
                                          'FontWeight', 'normal', ...
                                          'FontName', 'Arial', ...
                                          'FontSize', 10, ...
                                          'Callback', @switchToPostProcessingTab);
    
    % Performance tab
    handles.performance_tab = uicontrol('Parent', tabBarPanel, ...
                                       'Style', 'pushbutton', ...
                                       'String', 'Performance', ...
                                       'Units', 'normalized', ...
                                       'Position', [0.02 + 2*(tabWidth + tabSpacing), 0.1, tabWidth, 0.8], ...
                                       'BackgroundColor', colors.tabInactive, ...
                                       'ForegroundColor', colors.textLight, ...
                                       'FontWeight', 'normal', ...
                                       'FontName', 'Arial', ...
                                       'FontSize', 10, ...
                                       'Callback', @switchToPerformanceTab);
end

function handles = createGenerationTabContent(parent, handles)
    % CREATEGENERATIONTABCONTENT - Create content for the Data Generation tab
    %
    % Inputs:
    %   parent - Parent panel handle
    %   handles - Handles structure
    %
    % Outputs:
    %   handles - Updated handles structure
    
    colors = handles.colors;
    
    % Create generation tab panel
    generationPanel = uipanel('Parent', parent, ...
                             'Units', 'normalized', ...
                             'Position', [0, 0, 1, 1], ...
                             'BackgroundColor', colors.background, ...
                             'BorderType', 'none', ...
                             'Visible', 'on');
    
    % Create left and right columns
    handles = createLeftColumnContent(generationPanel, handles);
    handles = createRightColumnContent(generationPanel, handles);
    
    % Store generation panel reference
    handles.generationPanel = generationPanel;
end

function handles = createPerformanceTabContent(parent, handles)
    % CREATEPERFORMANCETABCONTENT - Create content for the Performance tab
    %
    % Inputs:
    %   parent - Parent panel handle
    %   handles - Handles structure
    %
    % Outputs:
    %   handles - Updated handles structure
    
    colors = handles.colors;
    
    % Create performance tab panel
    performancePanel = uipanel('Parent', parent, ...
                              'Units', 'normalized', ...
                              'Position', [0, 0, 1, 1], ...
                              'BackgroundColor', colors.background, ...
                              'BorderType', 'none', ...
                              'Visible', 'off');
    
    % Add performance-specific content here
    uicontrol('Parent', performancePanel, ...
              'Style', 'text', ...
              'String', 'Performance Settings', ...
              'Units', 'normalized', ...
              'Position', [0.1, 0.8, 0.8, 0.1], ...
              'FontSize', 12, ...
              'FontWeight', 'bold', ...
              'BackgroundColor', colors.background, ...
              'ForegroundColor', colors.text, ...
              'HorizontalAlignment', 'center');
    
    % Store performance panel reference
    handles.performancePanel = performancePanel;
end

function handles = createPostProcessingTabContent(parent, handles)
    % CREATEPOSTPROCESSINGTABCONTENT - Create content for the Post-Processing tab
    %
    % Inputs:
    %   parent - Parent panel handle
    %   handles - Handles structure
    %
    % Outputs:
    %   handles - Updated handles structure
    
    colors = handles.colors;
    
    % Create post-processing tab panel
    postProcessingPanel = uipanel('Parent', parent, ...
                                 'Units', 'normalized', ...
                                 'Position', [0, 0, 1, 1], ...
                                 'BackgroundColor', colors.background, ...
                                 'BorderType', 'none', ...
                                 'Visible', 'off');
    
    % Add post-processing-specific content here
    uicontrol('Parent', postProcessingPanel, ...
              'Style', 'text', ...
              'String', 'Post-Processing Tools', ...
              'Units', 'normalized', ...
              'Position', [0.1, 0.8, 0.8, 0.1], ...
              'FontSize', 12, ...
              'FontWeight', 'bold', ...
              'BackgroundColor', colors.background, ...
              'ForegroundColor', colors.text, ...
              'HorizontalAlignment', 'center');
    
    % Store post-processing panel reference
    handles.postProcessingPanel = postProcessingPanel;
end

function handles = createLeftColumnContent(parent, handles)
    % CREATELEFTCOLUMNCONTENT - Create left column content for generation tab
    %
    % Inputs:
    %   parent - Parent panel handle
    %   handles - Handles structure
    %
    % Outputs:
    %   handles - Updated handles structure
    
    colors = handles.colors;
    
    % Left column panel
    leftPanel = uipanel('Parent', parent, ...
                       'Units', 'normalized', ...
                       'Position', [0.02, 0.02, 0.48, 0.96], ...
                       'BackgroundColor', colors.panel, ...
                       'BorderType', 'line', ...
                       'BorderWidth', 1, ...
                       'HighlightColor', colors.border);
    
    % Add left column content here
    uicontrol('Parent', leftPanel, ...
              'Style', 'text', ...
              'String', 'Configuration Settings', ...
              'Units', 'normalized', ...
              'Position', [0.05, 0.9, 0.9, 0.08], ...
              'FontSize', 11, ...
              'FontWeight', 'bold', ...
              'BackgroundColor', colors.panel, ...
              'ForegroundColor', colors.text, ...
              'HorizontalAlignment', 'left');
    
    % Store left panel reference
    handles.leftPanel = leftPanel;
end

function handles = createRightColumnContent(parent, handles)
    % CREATERIGHTCOLUMNCONTENT - Create right column content for generation tab
    %
    % Inputs:
    %   parent - Parent panel handle
    %   handles - Handles structure
    %
    % Outputs:
    %   handles - Updated handles structure
    
    colors = handles.colors;
    
    % Right column panel
    rightPanel = uipanel('Parent', parent, ...
                        'Units', 'normalized', ...
                        'Position', [0.52, 0.02, 0.46, 0.96], ...
                        'BackgroundColor', colors.panel, ...
                        'BorderType', 'line', ...
                        'BorderWidth', 1, ...
                        'HighlightColor', colors.border);
    
    % Add right column content here
    uicontrol('Parent', rightPanel, ...
              'Style', 'text', ...
              'String', 'Preview & Results', ...
              'Units', 'normalized', ...
              'Position', [0.05, 0.9, 0.9, 0.08], ...
              'FontSize', 11, ...
              'FontWeight', 'bold', ...
              'BackgroundColor', colors.panel, ...
              'ForegroundColor', colors.text, ...
              'HorizontalAlignment', 'left');
    
    % Store right panel reference
    handles.rightPanel = rightPanel;
end
